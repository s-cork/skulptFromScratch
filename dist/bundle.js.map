{"version":3,"file":"bundle.js","sources":["../asdl/astnodes.js","../src/parser/token.ts","../src/parser/Tokenizer.ts","../src/util/unicode.js","../src/parser/tokenize.ts","../src/parser/parser.ts","../src/parser/generated_parser.ts","../src/util/String.ts","../main.ts"],"sourcesContent":["/* File automatically generated by asdl_js.py. */\n\n/* Object that holds all nodes */\n/* ----- expr_context ----- */\n/** @constructor */\nexport const Load = function Load() {};\n/** @constructor */\nexport const Store = function Store() {};\n/** @constructor */\nexport const Del = function Del() {};\n/** @constructor */\nexport const AugLoad = function AugLoad() {};\n/** @constructor */\nexport const AugStore = function AugStore() {};\n/** @constructor */\nexport const Param = function Param() {};\n\n/* ----- boolop ----- */\n/** @constructor */\nexport const And = function And() {};\n/** @constructor */\nexport const Or = function Or() {};\n\n/* ----- operator ----- */\n/** @constructor */\nexport const Add = function Add() {};\n/** @constructor */\nexport const Sub = function Sub() {};\n/** @constructor */\nexport const Mult = function Mult() {};\n/** @constructor */\nexport const MatMult = function MatMult() {};\n/** @constructor */\nexport const Div = function Div() {};\n/** @constructor */\nexport const Mod = function Mod() {};\n/** @constructor */\nexport const Pow = function Pow() {};\n/** @constructor */\nexport const LShift = function LShift() {};\n/** @constructor */\nexport const RShift = function RShift() {};\n/** @constructor */\nexport const BitOr = function BitOr() {};\n/** @constructor */\nexport const BitXor = function BitXor() {};\n/** @constructor */\nexport const BitAnd = function BitAnd() {};\n/** @constructor */\nexport const FloorDiv = function FloorDiv() {};\n\n/* ----- unaryop ----- */\n/** @constructor */\nexport const Invert = function Invert() {};\n/** @constructor */\nexport const Not = function Not() {};\n/** @constructor */\nexport const UAdd = function UAdd() {};\n/** @constructor */\nexport const USub = function USub() {};\n\n/* ----- cmpop ----- */\n/** @constructor */\nexport const Eq = function Eq() {};\n/** @constructor */\nexport const NotEq = function NotEq() {};\n/** @constructor */\nexport const Lt = function Lt() {};\n/** @constructor */\nexport const LtE = function LtE() {};\n/** @constructor */\nexport const Gt = function Gt() {};\n/** @constructor */\nexport const GtE = function GtE() {};\n/** @constructor */\nexport const Is = function Is() {};\n/** @constructor */\nexport const IsNot = function IsNot() {};\n/** @constructor */\nexport const In = function In() {};\n/** @constructor */\nexport const NotIn = function NotIn() {};\n\n/* ---------------------- */\n/* constructors for nodes */\n/* ---------------------- */\n\n/** @constructor */\nexport const Module = function Module(\n  /* {asdl_seq *} */ body /* {string} */,\n  docstring\n) {\n  this.body = body;\n  this.docstring = docstring;\n};\n\n/** @constructor */\nexport const Interactive = function Interactive(/* {asdl_seq *} */ body) {\n  this.body = body;\n};\n\n/** @constructor */\nexport const Expression = function Expression(/* {expr_ty} */ body) {\n  this.body = body;\n};\n\n/** @constructor */\nexport const Suite = function Suite(/* {asdl_seq *} */ body) {\n  this.body = body;\n};\n\nexport class FunctionType {}\n\n/** @constructor */\nexport const FunctionDef = function FunctionDef(\n  /* {identifier} */ name,\n  /*\n                                                    {arguments__ty} */ args,\n  /*\n                                                    {asdl_seq *} */ body /*\n                                                    {asdl_seq *} */,\n  decorator_list,\n  /*\n                                                    {expr_ty} */ returns,\n  /*\n                                                    {string} */ docstring,\n  /*\n                                                    {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.name = name;\n  this.args = args;\n  this.body = body;\n  this.decorator_list = decorator_list;\n  this.returns = returns;\n  this.docstring = docstring;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const AsyncFunctionDef = function AsyncFunctionDef /* {identifier} */(\n  name,\n  /*\n                                                              {arguments__ty}\n                                                              */ args /*\n                                                              {asdl_seq *} */,\n  body /*\n                                                              {asdl_seq *} */,\n  decorator_list,\n  /* {expr_ty} */\n  returns /*\n                                                              {string} */,\n  docstring,\n  /*\n                                                              {int} */ lineno,\n  /* {int} */\n  col_offset\n) {\n  this.name = name;\n  this.args = args;\n  this.body = body;\n  this.decorator_list = decorator_list;\n  this.returns = returns;\n  this.docstring = docstring;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const ClassDef = function ClassDef(\n  /* {identifier} */ name,\n  /* {asdl_seq\n   *} */ bases /* {asdl_seq *} */,\n  keywords /* {asdl_seq *} */,\n  body /* {asdl_seq *} */,\n  decorator_list /* {string} */,\n  docstring,\n  /* {int} */ lineno,\n  /*\n                                              {int} */ col_offset\n) {\n  this.name = name;\n  this.bases = bases;\n  this.keywords = keywords;\n  this.body = body;\n  this.decorator_list = decorator_list;\n  this.docstring = docstring;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Return = function Return(\n  /* {expr_ty} */ value,\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Delete = function Delete(\n  /* {asdl_seq *} */ targets /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.targets = targets;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Assign = function Assign(\n  /* {asdl_seq *} */ targets,\n  /* {expr_ty}\n   */ value,\n  /* {int} */ lineno,\n  /*\n                                          {int} */ col_offset\n) {\n  this.targets = targets;\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const AugAssign = function AugAssign(\n  /* {expr_ty} */ target,\n  /*\n                                                {operator_ty} */ op,\n  /*\n                                                {expr_ty} */ value /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.target = target;\n  this.op = op;\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\nexport class AugOperator {}\n\n/** @constructor */\nexport const AnnAssign = function AnnAssign(\n  /* {expr_ty} */ target,\n  /* {expr_ty}\n   */ annotation /* {expr_ty} */,\n  value,\n  /* {int} */ simple,\n  /*\n                                                {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.target = target;\n  this.annotation = annotation;\n  this.value = value;\n  this.simple = simple;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const For = function For(\n  /* {expr_ty} */ target,\n  /* {expr_ty} */ iter,\n  /*\n                                    {asdl_seq *} */ body /* {asdl_seq *} */,\n  orelse,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.target = target;\n  this.iter = iter;\n  this.body = body;\n  this.orelse = orelse;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const AsyncFor = function AsyncFor(\n  /* {expr_ty} */ target,\n  /* {expr_ty}\n   */ iter,\n  /* {asdl_seq *} */ body,\n  /* {asdl_seq *} */ orelse,\n  /*\n                                              {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.target = target;\n  this.iter = iter;\n  this.body = body;\n  this.orelse = orelse;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const While = function While(\n  /* {expr_ty} */ test /* {asdl_seq *} */,\n  body,\n  /* {asdl_seq *} */ orelse,\n  /*\n                                        {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.test = test;\n  this.body = body;\n  this.orelse = orelse;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const If = function If(\n  /* {expr_ty} */ test,\n  /* {asdl_seq *} */ body,\n  /*\n                                  {asdl_seq *} */ orelse,\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.test = test;\n  this.body = body;\n  this.orelse = orelse;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const With = function With(\n  /* {asdl_seq *} */ items /* {asdl_seq *} */,\n  body,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.items = items;\n  this.body = body;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const AsyncWith = function AsyncWith(\n  /* {asdl_seq *} */ items,\n  /*\n                                                {asdl_seq *} */ body,\n  /* {int}\n   */ lineno /* {int} */,\n  col_offset\n) {\n  this.items = items;\n  this.body = body;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Raise = function Raise(\n  /* {expr_ty} */ exc,\n  /* {expr_ty} */ cause,\n  /* {expr_ty} */ inst /* {expr_ty} */,\n  tback,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.exc = exc;\n  this.cause = cause;\n  this.inst = inst;\n  this.tback = tback;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Try = function Try(\n  /* {asdl_seq *} */ body /* {asdl_seq *} */,\n  handlers,\n  /* {asdl_seq *} */ orelse,\n  /*\n                                    {asdl_seq *} */ finalbody /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.body = body;\n  this.handlers = handlers;\n  this.orelse = orelse;\n  this.finalbody = finalbody;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Assert = function Assert(\n  /* {expr_ty} */ test,\n  /* {expr_ty} */ msg,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.test = test;\n  this.msg = msg;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Import = function Import(\n  /* {asdl_seq *} */ names /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.names = names;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const ImportFrom = function ImportFrom(\n  /* {identifier} */ module,\n  /*\n                                                  {asdl_seq *} */ names,\n  /*\n                                                  {int} */ level /* {int} */,\n  lineno /* {int} */,\n  col_offset\n) {\n  this.module = module;\n  this.names = names;\n  this.level = level;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Global = function Global(\n  /* {asdl_seq *} */ names /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.names = names;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Nonlocal = function Nonlocal(\n  /* {asdl_seq *} */ names /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.names = names;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Expr = function Expr(\n  /* {expr_ty} */ value,\n  /* {int} */ lineno,\n  /*\n                                      {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Pass = function Pass(/* {int} */ lineno, /* {int} */ col_offset) {\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Break = function Break(\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Continue = function Continue(\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Print = function Print(\n  /* {expr_ty} */ dest /* {asdl_seq *} */,\n  values,\n  /* {int} */ nl /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.dest = dest;\n  this.values = values;\n  this.nl = nl;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Debugger = function Debugger(\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const BoolOp = function BoolOp(\n  /* {boolop_ty} */ op /* {asdl_seq *} */,\n  values,\n  /* {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.op = op;\n  this.values = values;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const BinOp = function BinOp(\n  /* {expr_ty} */ left /* {operator_ty} */,\n  op,\n  /* {expr_ty} */ right /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.left = left;\n  this.op = op;\n  this.right = right;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const UnaryOp = function UnaryOp(\n  /* {unaryop_ty} */ op /* {expr_ty} */,\n  operand,\n  /* {int} */ lineno,\n  /*\n                                            {int} */ col_offset\n) {\n  this.op = op;\n  this.operand = operand;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Lambda = function Lambda(\n  /* {arguments__ty} */ args,\n  /* {expr_ty}\n   */ body,\n  /* {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.args = args;\n  this.body = body;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const IfExp = function IfExp(\n  /* {expr_ty} */ test,\n  /* {expr_ty} */ body,\n  /* {expr_ty} */ orelse /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.test = test;\n  this.body = body;\n  this.orelse = orelse;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Dict = function Dict(\n  /* {asdl_seq *} */ keys /* {asdl_seq *} */,\n  values,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.keys = keys;\n  this.values = values;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Set = function Set(\n  /* {asdl_seq *} */ elts,\n  /* {int} */ lineno,\n  /*\n                                    {int} */ col_offset\n) {\n  this.elts = elts;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const ListComp = function ListComp(\n  /* {expr_ty} */ elt,\n  /* {asdl_seq *}\n   */ generators /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.elt = elt;\n  this.generators = generators;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const SetComp = function SetComp(\n  /* {expr_ty} */ elt /* {asdl_seq *} */,\n  generators,\n  /* {int} */ lineno,\n  /*\n                                            {int} */ col_offset\n) {\n  this.elt = elt;\n  this.generators = generators;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const DictComp = function DictComp(\n  /* {expr_ty} */ key /* {expr_ty} */,\n  value /* {asdl_seq *} */,\n  generators,\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.key = key;\n  this.value = value;\n  this.generators = generators;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const GeneratorExp = function GeneratorExp(\n  /* {expr_ty} */ elt /*\n                                                      {asdl_seq *} */,\n  generators /* {int} */,\n  lineno /* {int} */,\n  col_offset\n) {\n  this.elt = elt;\n  this.generators = generators;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Await = function Await(\n  /* {expr_ty} */ value,\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Yield = function Yield(\n  /* {expr_ty} */ value,\n  /* {int} */ lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const YieldFrom = function YieldFrom(\n  /* {expr_ty} */ value /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Compare = function Compare(\n  /* {expr_ty} */ left,\n  /* {asdl_int_seq\n   *} */ ops /* {asdl_seq *} */,\n  comparators,\n  /* {int} */ lineno,\n  /*\n                                            {int} */ col_offset\n) {\n  this.left = left;\n  this.ops = ops;\n  this.comparators = comparators;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Call = function Call(\n  /* {expr_ty} */ func,\n  /* {asdl_seq *} */ args,\n  /* {asdl_seq *} */ keywords /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.func = func;\n  this.args = args;\n  this.keywords = keywords;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Num = function Num(\n  /* {object} */ n,\n  /* {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.n = n;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Str = function Str(\n  /* {string} */ s,\n  /* {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.s = s;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const FormattedValue = function FormattedValue(\n  /* {expr_ty} */ value,\n  /*\n                                                          {int} */ conversion,\n  /* {expr_ty} */\n  format_spec,\n  /* {int}\n   */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.value = value;\n  this.conversion = conversion;\n  this.format_spec = format_spec;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const JoinedStr = function JoinedStr(\n  /* {asdl_seq *} */ values,\n  /* {int}\n   */ lineno /* {int} */,\n  col_offset\n) {\n  this.values = values;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Bytes = function Bytes(\n  /* {bytes} */ s,\n  /* {int} */ lineno,\n  /*\n                                        {int} */ col_offset\n) {\n  this.s = s;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const NameConstant = function NameConstant(\n  /* {singleton} */ value,\n  /*\n                                                      {int} */ lineno,\n  /* {int}\n   */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\nexport const NamedExpr = function NamedExpr() {};\n\n/** @constructor */\nexport const Ellipsis = function Ellipsis(\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Constant = function Constant(\n  /* {constant} */ value /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Attribute = function Attribute(\n  /* {expr_ty} */ value,\n  /*\n                                                {identifier} */ attr,\n  /*\n                                                {expr_context_ty} */ ctx,\n  /*\n                                                {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.value = value;\n  this.attr = attr;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Subscript = function Subscript(\n  /* {expr_ty} */ value,\n  /* {slice_ty}\n   */ slice,\n  /* {expr_context_ty}\n   */ ctx,\n  /* {int} */ lineno,\n  /*\n                                                {int} */ col_offset\n) {\n  this.value = value;\n  this.slice = slice;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Starred = function Starred(\n  /* {expr_ty} */ value,\n  /*\n                                            {expr_context_ty} */ ctx,\n  /* {int}\n   */ lineno,\n  /* {int} */ col_offset\n) {\n  this.value = value;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Name = function Name(\n  /* {identifier} */ id /* {expr_context_ty} */,\n  ctx,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.id = id;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const List = function List(\n  /* {asdl_seq *} */ elts,\n  /* {expr_context_ty}\n   */ ctx,\n  /* {int} */ lineno /* {int} */,\n  col_offset\n) {\n  this.elts = elts;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Tuple = function Tuple(\n  /* {asdl_seq *} */ elts,\n  /*\n                                        {expr_context_ty} */ ctx /* {int} */,\n  lineno,\n  /* {int} */ col_offset\n) {\n  this.elts = elts;\n  this.ctx = ctx;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const Slice = function Slice(\n  /* {expr_ty} */ lower /* {expr_ty} */,\n  upper,\n  /* {expr_ty} */ step\n) {\n  this.lower = lower;\n  this.upper = upper;\n  this.step = step;\n};\n\n/** @constructor */\nexport const ExtSlice = function ExtSlice(/* {asdl_seq *} */ dims) {\n  this.dims = dims;\n};\n\n/** @constructor */\nexport const Index = function Index(/* {expr_ty} */ value) {\n  this.value = value;\n};\n\n/** @constructor */\nexport const comprehension = function comprehension(\n  /* {expr_ty} */ target,\n  /*\n                                                        {expr_ty} */ iter,\n  /*\n                                                        {asdl_seq *} */ ifs,\n  /*\n                                                        {int} */ is_async\n) {\n  this.target = target;\n  this.iter = iter;\n  this.ifs = ifs;\n  this.is_async = is_async;\n};\n\n/** @constructor */\nexport const ExceptHandler = function ExceptHandler(\n  /* {expr_ty} */ type,\n  /*\n                                                        {identifier} */ name,\n  /* {asdl_seq *} */\n  body /* {int} */,\n  lineno /* {int} */,\n  col_offset\n) {\n  this.type = type;\n  this.name = name;\n  this.body = body;\n  this.lineno = lineno;\n  this.col_offset = col_offset;\n};\n\n/** @constructor */\nexport const arguments_ = function arguments_(\n  /* {asdl_seq *} */ args,\n  /*\n                                                  {arg_ty} */ vararg,\n  /*\n                                                  {asdl_seq *} */ kwonlyargs,\n  /* {asdl_seq *} */\n  kw_defaults /* {arg_ty} */,\n  kwarg /* {asdl_seq *} */,\n  defaults\n) {\n  this.args = args;\n  this.vararg = vararg;\n  this.kwonlyargs = kwonlyargs;\n  this.kw_defaults = kw_defaults;\n  this.kwarg = kwarg;\n  this.defaults = defaults;\n};\n\n/** @constructor */\nexport const arg = function arg(\n  /* {identifier} */ arg /* {expr_ty} */,\n  annotation\n) {\n  this.arg = arg;\n  this.annotation = annotation;\n};\n\n/** @constructor */\nexport const keyword = function keyword(\n  /* {identifier} */ arg /* {expr_ty} */,\n  value\n) {\n  this.arg = arg;\n  this.value = value;\n};\n\n/** @constructor */\nexport const alias = function alias(\n  /* {identifier} */ name /* {identifier} */,\n  asname\n) {\n  this.name = name;\n  this.asname = asname;\n};\n\n/** @constructor */\nexport const withitem = function withitem(\n  /* {expr_ty} */ context_expr,\n  /*\n                                              {expr_ty} */ optional_vars\n) {\n  this.context_expr = context_expr;\n  this.optional_vars = optional_vars;\n};\n","export const ENDMARKER = 0;\nexport const NAME = 1;\nexport const NUMBER = 2;\nexport const STRING = 3;\nexport const NEWLINE = 4;\nexport const INDENT = 5;\nexport const DEDENT = 6;\nexport const LPAR = 7;\nexport const RPAR = 8;\nexport const LSQB = 9;\nexport const RSQB = 10;\nexport const COLON = 11;\nexport const COMMA = 12;\nexport const SEMI = 13;\nexport const PLUS = 14;\nexport const MINUS = 15;\nexport const STAR = 16;\nexport const SLASH = 17;\nexport const VBAR = 18;\nexport const AMPER = 19;\nexport const LESS = 20;\nexport const GREATER = 21;\nexport const EQUAL = 22;\nexport const DOT = 23;\nexport const PERCENT = 24;\nexport const LBRACE = 25;\nexport const RBRACE = 26;\nexport const EQEQUAL = 27;\nexport const NOTEQUAL = 28;\nexport const LESSEQUAL = 29;\nexport const GREATEREQUAL = 30;\nexport const TILDE = 31;\nexport const CIRCUMFLEX = 32;\nexport const LEFTSHIFT = 33;\nexport const RIGHTSHIFT = 34;\nexport const DOUBLESTAR = 35;\nexport const PLUSEQUAL = 36;\nexport const MINEQUAL = 37;\nexport const STAREQUAL = 38;\nexport const SLASHEQUAL = 39;\nexport const PERCENTEQUAL = 40;\nexport const AMPEREQUAL = 41;\nexport const VBAREQUAL = 42;\nexport const CIRCUMFLEXEQUAL = 43;\nexport const LEFTSHIFTEQUAL = 44;\nexport const RIGHTSHIFTEQUAL = 45;\nexport const DOUBLESTAREQUAL = 46;\nexport const DOUBLESLASH = 47;\nexport const DOUBLESLASHEQUAL = 48;\nexport const AT = 49;\nexport const ATEQUAL = 50;\nexport const RARROW = 51;\nexport const ELLIPSIS = 52;\nexport const COLONEQUAL = 53;\nexport const OP = 54;\nexport const AWAIT = 55;\nexport const ASYNC = 56;\nexport const TYPE_IGNORE = 57;\nexport const TYPE_COMMENT = 58;\n// # These aren't used by the C tokenizer but are needed for tokenize.py\nexport const ERRORTOKEN = 59;\nexport const COMMENT = 60;\nexport const NL = 61;\nexport const ENCODING = 62;\nexport const N_TOKENS = 63;\n// # Special definitions for cooperation with parser\nexport const NT_OFFSET = 256;\n\nexport const tokens: {[tok_name: string]: number} = {\n    ENDMARKER,\n    NAME,\n    NUMBER,\n    STRING,\n    NEWLINE,\n    INDENT,\n    DEDENT,\n    LPAR,\n    RPAR,\n    LSQB,\n    RSQB,\n    COLON,\n    COMMA,\n    SEMI,\n    PLUS,\n    MINUS,\n    STAR,\n    SLASH,\n    VBAR,\n    AMPER,\n    LESS,\n    GREATER,\n    EQUAL,\n    DOT,\n    PERCENT,\n    LBRACE,\n    RBRACE,\n    EQEQUAL,\n    NOTEQUAL,\n    LESSEQUAL,\n    GREATEREQUAL,\n    TILDE,\n    CIRCUMFLEX,\n    LEFTSHIFT,\n    RIGHTSHIFT,\n    DOUBLESTAR,\n    PLUSEQUAL,\n    MINEQUAL,\n    STAREQUAL,\n    SLASHEQUAL,\n    PERCENTEQUAL,\n    AMPEREQUAL,\n    VBAREQUAL,\n    CIRCUMFLEXEQUAL,\n    LEFTSHIFTEQUAL,\n    RIGHTSHIFTEQUAL,\n    DOUBLESTAREQUAL,\n    DOUBLESLASH,\n    DOUBLESLASHEQUAL,\n    AT,\n    ATEQUAL,\n    RARROW,\n    ELLIPSIS,\n    COLONEQUAL,\n    OP,\n    AWAIT,\n    ASYNC,\n    TYPE_IGNORE,\n    TYPE_COMMENT,\n    // # These aren't used by the C tokenizer but are needed for tokenize.py\n    ERRORTOKEN,\n    COMMENT,\n    NL,\n    ENCODING,\n    N_TOKENS,\n    // # Special definitions for cooperation with parser\n    NT_OFFSET,\n};\n\nObject.freeze(tokens);\n\nexport const tok_name = Object.fromEntries(Object.entries(tokens).map(([key, val]) => [val, key]));\n\nexport const EXACT_TOKEN_TYPES: {[token:string]: number} = {\n    \"!=\": NOTEQUAL,\n    \"%\": PERCENT,\n    \"%=\": PERCENTEQUAL,\n    \"&\": AMPER,\n    \"&=\": AMPEREQUAL,\n    \"(\": LPAR,\n    \")\": RPAR,\n    \"*\": STAR,\n    \"**\": DOUBLESTAR,\n    \"**=\": DOUBLESTAREQUAL,\n    \"*=\": STAREQUAL,\n    \"+\": PLUS,\n    \"+=\": PLUSEQUAL,\n    \",\": COMMA,\n    \"-\": MINUS,\n    \"-=\": MINEQUAL,\n    \"->\": RARROW,\n    \".\": DOT,\n    \"...\": ELLIPSIS,\n    \"/\": SLASH,\n    \"//\": DOUBLESLASH,\n    \"//=\": DOUBLESLASHEQUAL,\n    \"/=\": SLASHEQUAL,\n    \":\": COLON,\n    \":=\": COLONEQUAL,\n    \";\": SEMI,\n    \"<\": LESS,\n    \"<<\": LEFTSHIFT,\n    \"<<=\": LEFTSHIFTEQUAL,\n    \"<=\": LESSEQUAL,\n    \"=\": EQUAL,\n    \"==\": EQEQUAL,\n    \">\": GREATER,\n    \">=\": GREATEREQUAL,\n    \">>\": RIGHTSHIFT,\n    \">>=\": RIGHTSHIFTEQUAL,\n    \"@\": AT,\n    \"@=\": ATEQUAL,\n    \"[\": LSQB,\n    \"]\": RSQB,\n    \"^\": CIRCUMFLEX,\n    \"^=\": CIRCUMFLEXEQUAL,\n    \"{\": LBRACE,\n    \"|\": VBAR,\n    \"|=\": VBAREQUAL,\n    \"}\": RBRACE,\n    \"~\": TILDE,\n};\n\nexport function ISTERMINAL(x: number): boolean {\n    return x < NT_OFFSET;\n}\n\nexport function ISNONTERMINAL(x: number): boolean {\n    return x >= NT_OFFSET;\n}\n\nexport function ISEOF(x: number): boolean {\n    return x == ENDMARKER;\n}\n","import { COMMENT, ERRORTOKEN, EXACT_TOKEN_TYPES, NL } from \"./token\";\nimport { TokenInfo } from \"./tokenize\";\n\nexport const exact_token_types = EXACT_TOKEN_TYPES;\n\nexport class Tokenizer {\n    _tokengen: Iterator<TokenInfo, TokenInfo>\n    _tokens: TokenInfo[]\n    _index: number\n    _verbose: boolean\n    constructor(tokengen, verbose: boolean = false) {\n        this._tokengen = tokengen;\n        this._tokens = [];\n        this._index = 0;\n        this._verbose = verbose;\n        if (verbose) {\n            this.report(false, false);\n        }\n    }\n    getnext(): TokenInfo {\n        let cached = true;\n        let tok: TokenInfo;\n        while (this._index === this._tokens.length) {\n            tok = this._tokengen.next().value;\n            if (tok.type === NL || tok.type === COMMENT) {\n                continue;\n            }\n            if (tok.type === ERRORTOKEN && tok.string.isSpace()) {\n                continue;\n            }\n            this._tokens.push(tok);\n            cached = false;\n        }\n        tok = this._tokens[this._index];\n        this._index++;\n        if (this._verbose) {\n            this.report(cached, false);\n        }\n        return tok;\n    }\n    peek(): TokenInfo {\n        while (this._index === this._tokens.length) {\n            const tok = this._tokengen.next().value;\n            if (tok.type === NL || tok.type === COMMENT) {\n                continue;\n            }\n            if (tok.type === ERRORTOKEN && tok.string.isSpace()) {\n                continue;\n            }\n            this._tokens.push(tok);\n        }\n        return this._tokens[this._index];\n    }\n    diagnose(): TokenInfo {\n        if (!this._tokens.length) {\n            this.getnext();\n        }\n        return this._tokens[this._tokens.length - 1];\n    }\n    mark(): number {\n        return this._index;\n    }\n    reset(index: number): null | void {\n        if (index === this._index) {\n            return null;\n        }\n        // assert(0 <= index && index <= this._tokens.length);\n        const old_index = this._index;\n        this._index = index;\n        if (this._verbose) {\n            this.report(true, index < old_index);\n        }\n    }\n    report(cached, back): void {\n        // pass\n    }\n}\n\n\n\nexport function readline(text: string): () => string {\n    const textasarray: string[] = text.split(\"\\n\").map(x => x + \"\\n\");\n    let i: number = 0;\n    return () => textasarray[i++];\n}","/* From:\n    http://difnet.com.br/opensource/unicode_hack.js\n    It has been significantly modified.\n    Modifications are copyright 2014 Makyen and released under the MPL 2.0.\n        This Source Code Form is subject to the terms of the Mozilla Public\n        License, v. 2.0. If a copy of the MPL was not distributed with this\n        file, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n/*! unicode_hack.js\n    Copyright (C) 2010-2012  Marcelo Gibson de Castro Gonçalves. All rights reserved.\n\n    Copying and distribution of this file, with or without modification,\n    are permitted in any medium without royalty provided the copyright\n    notice and this notice are preserved.  This file is offered as-is,\n    without any warranty.\n*/\nexport const Unicode = {\n    /* Strings to match Unicode characters in the BMP according to their Unicode category.\n       Extracted from Unicode specification, version 5.0.0, source:\n       http://unicode.org/versions/Unicode5.0.0/\n    */\n    /*\n        Abbr    Long                Description\n        Lu  Uppercase_Letter        an uppercase letter\n        Ll  Lowercase_Letter        a lowercase letter\n        Lt  Titlecase_Letter        a digraphic character, with first part uppercase\n        LC  Cased_Letter            Lu | Ll | Lt\n        Lm  Modifier_Letter         a modifier letter\n        Lo  Other_Letter            other letters, including syllables and ideographs\n        L   Letter                  Lu | Ll | Lt | Lm | Lo\n        Mn  Nonspacing_Mark         a nonspacing combining mark (zero advance width)\n        Mc  Spacing_Mark            a spacing combining mark (positive advance width)\n        Me  Enclosing_Mark          an enclosing combining mark\n        M   Mark                    Mn | Mc | Me\n        Nd  Decimal_Number          a decimal digit\n        Nl  Letter_Number           a letterlike numeric character\n        No  Other_Number            a numeric character of other type\n        N   Number                  Nd | Nl | No\n        Pc  Connector_Punctuation   a connecting punctuation mark, like a tie\n        Pd  Dash_Punctuation        a dash or hyphen punctuation mark\n        Ps  Open_Punctuation        an opening punctuation mark (of a pair)\n        Pe  Close_Punctuation       a closing punctuation mark (of a pair)\n        Pi  Initial_Punctuation     an initial quotation mark\n        Pf  Final_Punctuation       a final quotation mark\n        Po  Other_Punctuation       a punctuation mark of other type\n        P   Punctuation             Pc | Pd | Ps | Pe | Pi | Pf | Po\n        Sm  Math_Symbol             a symbol of mathematical use\n        Sc  Currency_Symbol         a currency sign\n        Sk  Modifier_Symbol         a non-letterlike modifier symbol\n        So  Other_Symbol            a symbol of other type\n        S   Symbol                  Sm | Sc | Sk | So\n        Zs  Space_Separator         a space character (of various non-zero widths)\n        Zl  Line_Separator          U+2028 LINE SEPARATOR only\n        Zp  Paragraph_Separator     U+2029 PARAGRAPH SEPARATOR only\n        Z   Separator               Zs | Zl | Zp\n        Cc  Control                 a C0 or C1 control code\n        Cf  Format                  a format control character\n        Cs  Surrogate               a surrogate code point\n        Co  Private_Use             a private-use character\n        Cn  Unassigned              a reserved unassigned code point or a noncharacter\n        C   Other                   Cc | Cf | Cs | Co | Cn\n    */\n    /* Alpha Sorted\n        Abbr    Long                Description\n        C   Other                   Cc | Cf | Cs | Co | Cn\n        Cc  Control                 a C0 or C1 control code\n        Cf  Format                  a format control character\n        Cn  Unassigned              a reserved unassigned code point or a noncharacter\n        Co  Private_Use             a private-use character\n        Cs  Surrogate               a surrogate code point\n        L   Letter                  Lu | Ll | Lt | Lm | Lo\n        LC  Cased_Letter            Lu | Ll | Lt\n        Ll  Lowercase_Letter        a lowercase letter\n        Lm  Modifier_Letter         a modifier letter\n        Lo  Other_Letter            other letters, including syllables and ideographs\n        Lt  Titlecase_Letter        a digraphic character, with first part uppercase\n        Lu  Uppercase_Letter        an uppercase letter\n        M   Mark                    Mn | Mc | Me\n        Mc  Spacing_Mark            a spacing combining mark (positive advance width)\n        Me  Enclosing_Mark          an enclosing combining mark\n        Mn  Nonspacing_Mark         a nonspacing combining mark (zero advance width)\n        N   Number                  Nd | Nl | No\n        Nd  Decimal_Number          a decimal digit\n        Nl  Letter_Number           a letterlike numeric character\n        No  Other_Number            a numeric character of other type\n        P   Punctuation             Pc | Pd | Ps | Pe | Pi | Pf | Po\n        Pc  Connector_Punctuation   a connecting punctuation mark, like a tie\n        Pd  Dash_Punctuation        a dash or hyphen punctuation mark\n        Pe  Close_Punctuation       a closing punctuation mark (of a pair)\n        Pf  Final_Punctuation       a final quotation mark\n        Pi  Initial_Punctuation     an initial quotation mark\n        Po  Other_Punctuation       a punctuation mark of other type\n        Ps  Open_Punctuation        an opening punctuation mark (of a pair)\n        S   Symbol                  Sm | Sc | Sk | So\n        Sc  Currency_Symbol         a currency sign\n        Sk  Modifier_Symbol         a non-letterlike modifier symbol\n        Sm  Math_Symbol             a symbol of mathematical use\n        So  Other_Symbol            a symbol of other type\n        Z   Separator               Zs | Zl | Zp\n        Zl  Line_Separator          U+2028 LINE SEPARATOR only\n        Zp  Paragraph_Separator     U+2029 PARAGRAPH SEPARATOR only\n        Zs  Space_Separator         a space character (of various non-zero widths)\n    */\n\n    Cc:'\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f',\n    Cf:'\\\\u00ad\\\\u0600-\\\\u0603\\\\u06dd\\\\u070f\\\\u17b4\\\\u17b5\\\\u200b-\\\\u200f\\\\u202a-\\\\u202e\\\\u2060-\\\\u2063\\\\u206a-\\\\u206f\\\\ufeff\\\\ufff9-\\\\ufffb',\n    Co:'\\\\ue000-\\\\uf8ff',\n    Cs:'\\\\ud800\\\\udb7f\\\\udb80\\\\udbff\\\\udc00\\\\udfff',\n    Ll:'\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00df-\\\\u00f6\\\\u00f8-\\\\u00ff\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010b\\\\u010d\\\\u010f\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011b\\\\u011d\\\\u011f\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012b\\\\u012d\\\\u012f\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013a\\\\u013c\\\\u013e\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014b\\\\u014d\\\\u014f\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015b\\\\u015d\\\\u015f\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016b\\\\u016d\\\\u016f\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017a\\\\u017c\\\\u017e-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018c\\\\u018d\\\\u0192\\\\u0195\\\\u0199-\\\\u019b\\\\u019e\\\\u01a1\\\\u01a3\\\\u01a5\\\\u01a8\\\\u01aa\\\\u01ab\\\\u01ad\\\\u01b0\\\\u01b4\\\\u01b6\\\\u01b9\\\\u01ba\\\\u01bd-\\\\u01bf\\\\u01c6\\\\u01c9\\\\u01cc\\\\u01ce\\\\u01d0\\\\u01d2\\\\u01d4\\\\u01d6\\\\u01d8\\\\u01da\\\\u01dc\\\\u01dd\\\\u01df\\\\u01e1\\\\u01e3\\\\u01e5\\\\u01e7\\\\u01e9\\\\u01eb\\\\u01ed\\\\u01ef\\\\u01f0\\\\u01f3\\\\u01f5\\\\u01f9\\\\u01fb\\\\u01fd\\\\u01ff\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020b\\\\u020d\\\\u020f\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021b\\\\u021d\\\\u021f\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022b\\\\u022d\\\\u022f\\\\u0231\\\\u0233-\\\\u0239\\\\u023c\\\\u023f\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024b\\\\u024d\\\\u024f-\\\\u0293\\\\u0295-\\\\u02af\\\\u037b-\\\\u037d\\\\u0390\\\\u03ac-\\\\u03ce\\\\u03d0\\\\u03d1\\\\u03d5-\\\\u03d7\\\\u03d9\\\\u03db\\\\u03dd\\\\u03df\\\\u03e1\\\\u03e3\\\\u03e5\\\\u03e7\\\\u03e9\\\\u03eb\\\\u03ed\\\\u03ef-\\\\u03f3\\\\u03f5\\\\u03f8\\\\u03fb\\\\u03fc\\\\u0430-\\\\u045f\\\\u0461\\\\u0463\\\\u0465\\\\u0467\\\\u0469\\\\u046b\\\\u046d\\\\u046f\\\\u0471\\\\u0473\\\\u0475\\\\u0477\\\\u0479\\\\u047b\\\\u047d\\\\u047f\\\\u0481\\\\u048b\\\\u048d\\\\u048f\\\\u0491\\\\u0493\\\\u0495\\\\u0497\\\\u0499\\\\u049b\\\\u049d\\\\u049f\\\\u04a1\\\\u04a3\\\\u04a5\\\\u04a7\\\\u04a9\\\\u04ab\\\\u04ad\\\\u04af\\\\u04b1\\\\u04b3\\\\u04b5\\\\u04b7\\\\u04b9\\\\u04bb\\\\u04bd\\\\u04bf\\\\u04c2\\\\u04c4\\\\u04c6\\\\u04c8\\\\u04ca\\\\u04cc\\\\u04ce\\\\u04cf\\\\u04d1\\\\u04d3\\\\u04d5\\\\u04d7\\\\u04d9\\\\u04db\\\\u04dd\\\\u04df\\\\u04e1\\\\u04e3\\\\u04e5\\\\u04e7\\\\u04e9\\\\u04eb\\\\u04ed\\\\u04ef\\\\u04f1\\\\u04f3\\\\u04f5\\\\u04f7\\\\u04f9\\\\u04fb\\\\u04fd\\\\u04ff\\\\u0501\\\\u0503\\\\u0505\\\\u0507\\\\u0509\\\\u050b\\\\u050d\\\\u050f\\\\u0511\\\\u0513\\\\u0561-\\\\u0587\\\\u1d00-\\\\u1d2b\\\\u1d62-\\\\u1d77\\\\u1d79-\\\\u1d9a\\\\u1e01\\\\u1e03\\\\u1e05\\\\u1e07\\\\u1e09\\\\u1e0b\\\\u1e0d\\\\u1e0f\\\\u1e11\\\\u1e13\\\\u1e15\\\\u1e17\\\\u1e19\\\\u1e1b\\\\u1e1d\\\\u1e1f\\\\u1e21\\\\u1e23\\\\u1e25\\\\u1e27\\\\u1e29\\\\u1e2b\\\\u1e2d\\\\u1e2f\\\\u1e31\\\\u1e33\\\\u1e35\\\\u1e37\\\\u1e39\\\\u1e3b\\\\u1e3d\\\\u1e3f\\\\u1e41\\\\u1e43\\\\u1e45\\\\u1e47\\\\u1e49\\\\u1e4b\\\\u1e4d\\\\u1e4f\\\\u1e51\\\\u1e53\\\\u1e55\\\\u1e57\\\\u1e59\\\\u1e5b\\\\u1e5d\\\\u1e5f\\\\u1e61\\\\u1e63\\\\u1e65\\\\u1e67\\\\u1e69\\\\u1e6b\\\\u1e6d\\\\u1e6f\\\\u1e71\\\\u1e73\\\\u1e75\\\\u1e77\\\\u1e79\\\\u1e7b\\\\u1e7d\\\\u1e7f\\\\u1e81\\\\u1e83\\\\u1e85\\\\u1e87\\\\u1e89\\\\u1e8b\\\\u1e8d\\\\u1e8f\\\\u1e91\\\\u1e93\\\\u1e95-\\\\u1e9b\\\\u1ea1\\\\u1ea3\\\\u1ea5\\\\u1ea7\\\\u1ea9\\\\u1eab\\\\u1ead\\\\u1eaf\\\\u1eb1\\\\u1eb3\\\\u1eb5\\\\u1eb7\\\\u1eb9\\\\u1ebb\\\\u1ebd\\\\u1ebf\\\\u1ec1\\\\u1ec3\\\\u1ec5\\\\u1ec7\\\\u1ec9\\\\u1ecb\\\\u1ecd\\\\u1ecf\\\\u1ed1\\\\u1ed3\\\\u1ed5\\\\u1ed7\\\\u1ed9\\\\u1edb\\\\u1edd\\\\u1edf\\\\u1ee1\\\\u1ee3\\\\u1ee5\\\\u1ee7\\\\u1ee9\\\\u1eeb\\\\u1eed\\\\u1eef\\\\u1ef1\\\\u1ef3\\\\u1ef5\\\\u1ef7\\\\u1ef9\\\\u1f00-\\\\u1f07\\\\u1f10-\\\\u1f15\\\\u1f20-\\\\u1f27\\\\u1f30-\\\\u1f37\\\\u1f40-\\\\u1f45\\\\u1f50-\\\\u1f57\\\\u1f60-\\\\u1f67\\\\u1f70-\\\\u1f7d\\\\u1f80-\\\\u1f87\\\\u1f90-\\\\u1f97\\\\u1fa0-\\\\u1fa7\\\\u1fb0-\\\\u1fb4\\\\u1fb6\\\\u1fb7\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6\\\\u1fc7\\\\u1fd0-\\\\u1fd3\\\\u1fd6\\\\u1fd7\\\\u1fe0-\\\\u1fe7\\\\u1ff2-\\\\u1ff4\\\\u1ff6\\\\u1ff7\\\\u2071\\\\u207f\\\\u210a\\\\u210e\\\\u210f\\\\u2113\\\\u212f\\\\u2134\\\\u2139\\\\u213c\\\\u213d\\\\u2146-\\\\u2149\\\\u214e\\\\u2184\\\\u2c30-\\\\u2c5e\\\\u2c61\\\\u2c65\\\\u2c66\\\\u2c68\\\\u2c6a\\\\u2c6c\\\\u2c74\\\\u2c76\\\\u2c77\\\\u2c81\\\\u2c83\\\\u2c85\\\\u2c87\\\\u2c89\\\\u2c8b\\\\u2c8d\\\\u2c8f\\\\u2c91\\\\u2c93\\\\u2c95\\\\u2c97\\\\u2c99\\\\u2c9b\\\\u2c9d\\\\u2c9f\\\\u2ca1\\\\u2ca3\\\\u2ca5\\\\u2ca7\\\\u2ca9\\\\u2cab\\\\u2cad\\\\u2caf\\\\u2cb1\\\\u2cb3\\\\u2cb5\\\\u2cb7\\\\u2cb9\\\\u2cbb\\\\u2cbd\\\\u2cbf\\\\u2cc1\\\\u2cc3\\\\u2cc5\\\\u2cc7\\\\u2cc9\\\\u2ccb\\\\u2ccd\\\\u2ccf\\\\u2cd1\\\\u2cd3\\\\u2cd5\\\\u2cd7\\\\u2cd9\\\\u2cdb\\\\u2cdd\\\\u2cdf\\\\u2ce1\\\\u2ce3\\\\u2ce4\\\\u2d00-\\\\u2d25\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\uff41-\\\\uff5a',\n    Lm:'\\\\u02b0-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ee\\\\u037a\\\\u0559\\\\u0640\\\\u06e5\\\\u06e6\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0e46\\\\u0ec6\\\\u10fc\\\\u17d7\\\\u1843\\\\u1d2c-\\\\u1d61\\\\u1d78\\\\u1d9b-\\\\u1dbf\\\\u2090-\\\\u2094\\\\u2d6f\\\\u3005\\\\u3031-\\\\u3035\\\\u303b\\\\u309d\\\\u309e\\\\u30fc-\\\\u30fe\\\\ua015\\\\ua717-\\\\ua71a\\\\uff70\\\\uff9e\\\\uff9f',\n    Lo:'\\\\u01bb\\\\u01c0-\\\\u01c3\\\\u0294\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0621-\\\\u063a\\\\u0641-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u076d\\\\u0780-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u097b-\\\\u097f\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c33\\\\u0c35-\\\\u0c39\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d28\\\\u0d2a-\\\\u0d39\\\\u0d60\\\\u0d61\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e45\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0edc\\\\u0edd\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6a\\\\u0f88-\\\\u0f8b\\\\u1000-\\\\u1021\\\\u1023-\\\\u1027\\\\u1029\\\\u102a\\\\u1050-\\\\u1055\\\\u10d0-\\\\u10fa\\\\u1100-\\\\u1159\\\\u115f-\\\\u11a2\\\\u11a8-\\\\u11f9\\\\u1200-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f4\\\\u1401-\\\\u166c\\\\u166f-\\\\u1676\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17dc\\\\u1820-\\\\u1842\\\\u1844-\\\\u1877\\\\u1880-\\\\u18a8\\\\u1900-\\\\u191c\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19a9\\\\u19c1-\\\\u19c7\\\\u1a00-\\\\u1a16\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u2135-\\\\u2138\\\\u2d30-\\\\u2d65\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u3006\\\\u303c\\\\u3041-\\\\u3096\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30ff\\\\u3105-\\\\u312c\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31b7\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fbb\\\\ua000-\\\\ua014\\\\ua016-\\\\ua48c\\\\ua800\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\uac00\\\\ud7a3\\\\uf900-\\\\ufa2d\\\\ufa30-\\\\ufa6a\\\\ufa70-\\\\ufad9\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff66-\\\\uff6f\\\\uff71-\\\\uff9d\\\\uffa0-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc',\n    Lt:'\\\\u01c5\\\\u01c8\\\\u01cb\\\\u01f2\\\\u1f88-\\\\u1f8f\\\\u1f98-\\\\u1f9f\\\\u1fa8-\\\\u1faf\\\\u1fbc\\\\u1fcc\\\\u1ffc',\n    Lu:'\\\\u0041-\\\\u005a\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00de\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010a\\\\u010c\\\\u010e\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011a\\\\u011c\\\\u011e\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012a\\\\u012c\\\\u012e\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013b\\\\u013d\\\\u013f\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014a\\\\u014c\\\\u014e\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015a\\\\u015c\\\\u015e\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016a\\\\u016c\\\\u016e\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017b\\\\u017d\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018b\\\\u018e-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019c\\\\u019d\\\\u019f\\\\u01a0\\\\u01a2\\\\u01a4\\\\u01a6\\\\u01a7\\\\u01a9\\\\u01ac\\\\u01ae\\\\u01af\\\\u01b1-\\\\u01b3\\\\u01b5\\\\u01b7\\\\u01b8\\\\u01bc\\\\u01c4\\\\u01c7\\\\u01ca\\\\u01cd\\\\u01cf\\\\u01d1\\\\u01d3\\\\u01d5\\\\u01d7\\\\u01d9\\\\u01db\\\\u01de\\\\u01e0\\\\u01e2\\\\u01e4\\\\u01e6\\\\u01e8\\\\u01ea\\\\u01ec\\\\u01ee\\\\u01f1\\\\u01f4\\\\u01f6-\\\\u01f8\\\\u01fa\\\\u01fc\\\\u01fe\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020a\\\\u020c\\\\u020e\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021a\\\\u021c\\\\u021e\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022a\\\\u022c\\\\u022e\\\\u0230\\\\u0232\\\\u023a\\\\u023b\\\\u023d\\\\u023e\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024a\\\\u024c\\\\u024e\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e\\\\u038f\\\\u0391-\\\\u03a1\\\\u03a3-\\\\u03ab\\\\u03d2-\\\\u03d4\\\\u03d8\\\\u03da\\\\u03dc\\\\u03de\\\\u03e0\\\\u03e2\\\\u03e4\\\\u03e6\\\\u03e8\\\\u03ea\\\\u03ec\\\\u03ee\\\\u03f4\\\\u03f7\\\\u03f9\\\\u03fa\\\\u03fd-\\\\u042f\\\\u0460\\\\u0462\\\\u0464\\\\u0466\\\\u0468\\\\u046a\\\\u046c\\\\u046e\\\\u0470\\\\u0472\\\\u0474\\\\u0476\\\\u0478\\\\u047a\\\\u047c\\\\u047e\\\\u0480\\\\u048a\\\\u048c\\\\u048e\\\\u0490\\\\u0492\\\\u0494\\\\u0496\\\\u0498\\\\u049a\\\\u049c\\\\u049e\\\\u04a0\\\\u04a2\\\\u04a4\\\\u04a6\\\\u04a8\\\\u04aa\\\\u04ac\\\\u04ae\\\\u04b0\\\\u04b2\\\\u04b4\\\\u04b6\\\\u04b8\\\\u04ba\\\\u04bc\\\\u04be\\\\u04c0\\\\u04c1\\\\u04c3\\\\u04c5\\\\u04c7\\\\u04c9\\\\u04cb\\\\u04cd\\\\u04d0\\\\u04d2\\\\u04d4\\\\u04d6\\\\u04d8\\\\u04da\\\\u04dc\\\\u04de\\\\u04e0\\\\u04e2\\\\u04e4\\\\u04e6\\\\u04e8\\\\u04ea\\\\u04ec\\\\u04ee\\\\u04f0\\\\u04f2\\\\u04f4\\\\u04f6\\\\u04f8\\\\u04fa\\\\u04fc\\\\u04fe\\\\u0500\\\\u0502\\\\u0504\\\\u0506\\\\u0508\\\\u050a\\\\u050c\\\\u050e\\\\u0510\\\\u0512\\\\u0531-\\\\u0556\\\\u10a0-\\\\u10c5\\\\u1e00\\\\u1e02\\\\u1e04\\\\u1e06\\\\u1e08\\\\u1e0a\\\\u1e0c\\\\u1e0e\\\\u1e10\\\\u1e12\\\\u1e14\\\\u1e16\\\\u1e18\\\\u1e1a\\\\u1e1c\\\\u1e1e\\\\u1e20\\\\u1e22\\\\u1e24\\\\u1e26\\\\u1e28\\\\u1e2a\\\\u1e2c\\\\u1e2e\\\\u1e30\\\\u1e32\\\\u1e34\\\\u1e36\\\\u1e38\\\\u1e3a\\\\u1e3c\\\\u1e3e\\\\u1e40\\\\u1e42\\\\u1e44\\\\u1e46\\\\u1e48\\\\u1e4a\\\\u1e4c\\\\u1e4e\\\\u1e50\\\\u1e52\\\\u1e54\\\\u1e56\\\\u1e58\\\\u1e5a\\\\u1e5c\\\\u1e5e\\\\u1e60\\\\u1e62\\\\u1e64\\\\u1e66\\\\u1e68\\\\u1e6a\\\\u1e6c\\\\u1e6e\\\\u1e70\\\\u1e72\\\\u1e74\\\\u1e76\\\\u1e78\\\\u1e7a\\\\u1e7c\\\\u1e7e\\\\u1e80\\\\u1e82\\\\u1e84\\\\u1e86\\\\u1e88\\\\u1e8a\\\\u1e8c\\\\u1e8e\\\\u1e90\\\\u1e92\\\\u1e94\\\\u1ea0\\\\u1ea2\\\\u1ea4\\\\u1ea6\\\\u1ea8\\\\u1eaa\\\\u1eac\\\\u1eae\\\\u1eb0\\\\u1eb2\\\\u1eb4\\\\u1eb6\\\\u1eb8\\\\u1eba\\\\u1ebc\\\\u1ebe\\\\u1ec0\\\\u1ec2\\\\u1ec4\\\\u1ec6\\\\u1ec8\\\\u1eca\\\\u1ecc\\\\u1ece\\\\u1ed0\\\\u1ed2\\\\u1ed4\\\\u1ed6\\\\u1ed8\\\\u1eda\\\\u1edc\\\\u1ede\\\\u1ee0\\\\u1ee2\\\\u1ee4\\\\u1ee6\\\\u1ee8\\\\u1eea\\\\u1eec\\\\u1eee\\\\u1ef0\\\\u1ef2\\\\u1ef4\\\\u1ef6\\\\u1ef8\\\\u1f08-\\\\u1f0f\\\\u1f18-\\\\u1f1d\\\\u1f28-\\\\u1f2f\\\\u1f38-\\\\u1f3f\\\\u1f48-\\\\u1f4d\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f\\\\u1f68-\\\\u1f6f\\\\u1fb8-\\\\u1fbb\\\\u1fc8-\\\\u1fcb\\\\u1fd8-\\\\u1fdb\\\\u1fe8-\\\\u1fec\\\\u1ff8-\\\\u1ffb\\\\u2102\\\\u2107\\\\u210b-\\\\u210d\\\\u2110-\\\\u2112\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u2130-\\\\u2133\\\\u213e\\\\u213f\\\\u2145\\\\u2183\\\\u2c00-\\\\u2c2e\\\\u2c60\\\\u2c62-\\\\u2c64\\\\u2c67\\\\u2c69\\\\u2c6b\\\\u2c75\\\\u2c80\\\\u2c82\\\\u2c84\\\\u2c86\\\\u2c88\\\\u2c8a\\\\u2c8c\\\\u2c8e\\\\u2c90\\\\u2c92\\\\u2c94\\\\u2c96\\\\u2c98\\\\u2c9a\\\\u2c9c\\\\u2c9e\\\\u2ca0\\\\u2ca2\\\\u2ca4\\\\u2ca6\\\\u2ca8\\\\u2caa\\\\u2cac\\\\u2cae\\\\u2cb0\\\\u2cb2\\\\u2cb4\\\\u2cb6\\\\u2cb8\\\\u2cba\\\\u2cbc\\\\u2cbe\\\\u2cc0\\\\u2cc2\\\\u2cc4\\\\u2cc6\\\\u2cc8\\\\u2cca\\\\u2ccc\\\\u2cce\\\\u2cd0\\\\u2cd2\\\\u2cd4\\\\u2cd6\\\\u2cd8\\\\u2cda\\\\u2cdc\\\\u2cde\\\\u2ce0\\\\u2ce2\\\\uff21-\\\\uff3a',\n    Mc:'\\\\u0903\\\\u093e-\\\\u0940\\\\u0949-\\\\u094c\\\\u0982\\\\u0983\\\\u09be-\\\\u09c0\\\\u09c7\\\\u09c8\\\\u09cb\\\\u09cc\\\\u09d7\\\\u0a03\\\\u0a3e-\\\\u0a40\\\\u0a83\\\\u0abe-\\\\u0ac0\\\\u0ac9\\\\u0acb\\\\u0acc\\\\u0b02\\\\u0b03\\\\u0b3e\\\\u0b40\\\\u0b47\\\\u0b48\\\\u0b4b\\\\u0b4c\\\\u0b57\\\\u0bbe\\\\u0bbf\\\\u0bc1\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcc\\\\u0bd7\\\\u0c01-\\\\u0c03\\\\u0c41-\\\\u0c44\\\\u0c82\\\\u0c83\\\\u0cbe\\\\u0cc0-\\\\u0cc4\\\\u0cc7\\\\u0cc8\\\\u0cca\\\\u0ccb\\\\u0cd5\\\\u0cd6\\\\u0d02\\\\u0d03\\\\u0d3e-\\\\u0d40\\\\u0d46-\\\\u0d48\\\\u0d4a-\\\\u0d4c\\\\u0d57\\\\u0d82\\\\u0d83\\\\u0dcf-\\\\u0dd1\\\\u0dd8-\\\\u0ddf\\\\u0df2\\\\u0df3\\\\u0f3e\\\\u0f3f\\\\u0f7f\\\\u102c\\\\u1031\\\\u1038\\\\u1056\\\\u1057\\\\u17b6\\\\u17be-\\\\u17c5\\\\u17c7\\\\u17c8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192b\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19b0-\\\\u19c0\\\\u19c8\\\\u19c9\\\\u1a19-\\\\u1a1b\\\\u1b04\\\\u1b35\\\\u1b3b\\\\u1b3d-\\\\u1b41\\\\u1b43\\\\u1b44\\\\ua802\\\\ua823\\\\ua824\\\\ua827',\n    Me:'\\\\u0488\\\\u0489\\\\u06de\\\\u20dd-\\\\u20e0\\\\u20e2-\\\\u20e4',\n    Mn:'\\\\u0300-\\\\u036f\\\\u0483-\\\\u0486\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u0610-\\\\u0615\\\\u064b-\\\\u065e\\\\u0670\\\\u06d6-\\\\u06dc\\\\u06df-\\\\u06e4\\\\u06e7\\\\u06e8\\\\u06ea-\\\\u06ed\\\\u0711\\\\u0730-\\\\u074a\\\\u07a6-\\\\u07b0\\\\u07eb-\\\\u07f3\\\\u0901\\\\u0902\\\\u093c\\\\u0941-\\\\u0948\\\\u094d\\\\u0951-\\\\u0954\\\\u0962\\\\u0963\\\\u0981\\\\u09bc\\\\u09c1-\\\\u09c4\\\\u09cd\\\\u09e2\\\\u09e3\\\\u0a01\\\\u0a02\\\\u0a3c\\\\u0a41\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a70\\\\u0a71\\\\u0a81\\\\u0a82\\\\u0abc\\\\u0ac1-\\\\u0ac5\\\\u0ac7\\\\u0ac8\\\\u0acd\\\\u0ae2\\\\u0ae3\\\\u0b01\\\\u0b3c\\\\u0b3f\\\\u0b41-\\\\u0b43\\\\u0b4d\\\\u0b56\\\\u0b82\\\\u0bc0\\\\u0bcd\\\\u0c3e-\\\\u0c40\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0cbc\\\\u0cbf\\\\u0cc6\\\\u0ccc\\\\u0ccd\\\\u0ce2\\\\u0ce3\\\\u0d41-\\\\u0d43\\\\u0d4d\\\\u0dca\\\\u0dd2-\\\\u0dd4\\\\u0dd6\\\\u0e31\\\\u0e34-\\\\u0e3a\\\\u0e47-\\\\u0e4e\\\\u0eb1\\\\u0eb4-\\\\u0eb9\\\\u0ebb\\\\u0ebc\\\\u0ec8-\\\\u0ecd\\\\u0f18\\\\u0f19\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f71-\\\\u0f7e\\\\u0f80-\\\\u0f84\\\\u0f86\\\\u0f87\\\\u0f90-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u102d-\\\\u1030\\\\u1032\\\\u1036\\\\u1037\\\\u1039\\\\u1058\\\\u1059\\\\u135f\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17b7-\\\\u17bd\\\\u17c6\\\\u17c9-\\\\u17d3\\\\u17dd\\\\u180b-\\\\u180d\\\\u18a9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193b\\\\u1a17\\\\u1a18\\\\u1b00-\\\\u1b03\\\\u1b34\\\\u1b36-\\\\u1b3a\\\\u1b3c\\\\u1b42\\\\u1b6b-\\\\u1b73\\\\u1dc0-\\\\u1dca\\\\u1dfe\\\\u1dff\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20ef\\\\u302a-\\\\u302f\\\\u3099\\\\u309a\\\\ua806\\\\ua80b\\\\ua825\\\\ua826\\\\ufb1e\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe23',\n    Nd:'\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06f0-\\\\u06f9\\\\u07c0-\\\\u07c9\\\\u0966-\\\\u096f\\\\u09e6-\\\\u09ef\\\\u0a66-\\\\u0a6f\\\\u0ae6-\\\\u0aef\\\\u0b66-\\\\u0b6f\\\\u0be6-\\\\u0bef\\\\u0c66-\\\\u0c6f\\\\u0ce6-\\\\u0cef\\\\u0d66-\\\\u0d6f\\\\u0e50-\\\\u0e59\\\\u0ed0-\\\\u0ed9\\\\u0f20-\\\\u0f29\\\\u1040-\\\\u1049\\\\u17e0-\\\\u17e9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194f\\\\u19d0-\\\\u19d9\\\\u1b50-\\\\u1b59\\\\uff10-\\\\uff19',\n    Nl:'\\\\u16ee-\\\\u16f0\\\\u2160-\\\\u2182\\\\u3007\\\\u3021-\\\\u3029\\\\u3038-\\\\u303a',\n    No:'\\\\u00b2\\\\u00b3\\\\u00b9\\\\u00bc-\\\\u00be\\\\u09f4-\\\\u09f9\\\\u0bf0-\\\\u0bf2\\\\u0f2a-\\\\u0f33\\\\u1369-\\\\u137c\\\\u17f0-\\\\u17f9\\\\u2070\\\\u2074-\\\\u2079\\\\u2080-\\\\u2089\\\\u2153-\\\\u215f\\\\u2460-\\\\u249b\\\\u24ea-\\\\u24ff\\\\u2776-\\\\u2793\\\\u2cfd\\\\u3192-\\\\u3195\\\\u3220-\\\\u3229\\\\u3251-\\\\u325f\\\\u3280-\\\\u3289\\\\u32b1-\\\\u32bf',\n    Pc:'\\\\u005f\\\\u203f\\\\u2040\\\\u2054\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\uff3f',\n    Pd:'\\\\u002d\\\\u058a\\\\u1806\\\\u2010-\\\\u2015\\\\u2e17\\\\u301c\\\\u3030\\\\u30a0\\\\ufe31\\\\ufe32\\\\ufe58\\\\ufe63\\\\uff0d',\n    Pe:'\\\\u0029\\\\u005d\\\\u007d\\\\u0f3b\\\\u0f3d\\\\u169c\\\\u2046\\\\u207e\\\\u208e\\\\u232a\\\\u2769\\\\u276b\\\\u276d\\\\u276f\\\\u2771\\\\u2773\\\\u2775\\\\u27c6\\\\u27e7\\\\u27e9\\\\u27eb\\\\u2984\\\\u2986\\\\u2988\\\\u298a\\\\u298c\\\\u298e\\\\u2990\\\\u2992\\\\u2994\\\\u2996\\\\u2998\\\\u29d9\\\\u29db\\\\u29fd\\\\u3009\\\\u300b\\\\u300d\\\\u300f\\\\u3011\\\\u3015\\\\u3017\\\\u3019\\\\u301b\\\\u301e\\\\u301f\\\\ufd3f\\\\ufe18\\\\ufe36\\\\ufe38\\\\ufe3a\\\\ufe3c\\\\ufe3e\\\\ufe40\\\\ufe42\\\\ufe44\\\\ufe48\\\\ufe5a\\\\ufe5c\\\\ufe5e\\\\uff09\\\\uff3d\\\\uff5d\\\\uff60\\\\uff63',\n    Pf:'\\\\u00bb\\\\u2019\\\\u201d\\\\u203a\\\\u2e03\\\\u2e05\\\\u2e0a\\\\u2e0d\\\\u2e1d',\n    Pi:'\\\\u00ab\\\\u2018\\\\u201b\\\\u201c\\\\u201f\\\\u2039\\\\u2e02\\\\u2e04\\\\u2e09\\\\u2e0c\\\\u2e1c',\n    Po:'\\\\u0021-\\\\u0023\\\\u0025-\\\\u0027\\\\u002a\\\\u002c\\\\u002e\\\\u002f\\\\u003a\\\\u003b\\\\u003f\\\\u0040\\\\u005c\\\\u00a1\\\\u00b7\\\\u00bf\\\\u037e\\\\u0387\\\\u055a-\\\\u055f\\\\u0589\\\\u05be\\\\u05c0\\\\u05c3\\\\u05c6\\\\u05f3\\\\u05f4\\\\u060c\\\\u060d\\\\u061b\\\\u061e\\\\u061f\\\\u066a-\\\\u066d\\\\u06d4\\\\u0700-\\\\u070d\\\\u07f7-\\\\u07f9\\\\u0964\\\\u0965\\\\u0970\\\\u0df4\\\\u0e4f\\\\u0e5a\\\\u0e5b\\\\u0f04-\\\\u0f12\\\\u0f85\\\\u0fd0\\\\u0fd1\\\\u104a-\\\\u104f\\\\u10fb\\\\u1361-\\\\u1368\\\\u166d\\\\u166e\\\\u16eb-\\\\u16ed\\\\u1735\\\\u1736\\\\u17d4-\\\\u17d6\\\\u17d8-\\\\u17da\\\\u1800-\\\\u1805\\\\u1807-\\\\u180a\\\\u1944\\\\u1945\\\\u19de\\\\u19df\\\\u1a1e\\\\u1a1f\\\\u1b5a-\\\\u1b60\\\\u2016\\\\u2017\\\\u2020-\\\\u2027\\\\u2030-\\\\u2038\\\\u203b-\\\\u203e\\\\u2041-\\\\u2043\\\\u2047-\\\\u2051\\\\u2053\\\\u2055-\\\\u205e\\\\u2cf9-\\\\u2cfc\\\\u2cfe\\\\u2cff\\\\u2e00\\\\u2e01\\\\u2e06-\\\\u2e08\\\\u2e0b\\\\u2e0e-\\\\u2e16\\\\u3001-\\\\u3003\\\\u303d\\\\u30fb\\\\ua874-\\\\ua877\\\\ufe10-\\\\ufe16\\\\ufe19\\\\ufe30\\\\ufe45\\\\ufe46\\\\ufe49-\\\\ufe4c\\\\ufe50-\\\\ufe52\\\\ufe54-\\\\ufe57\\\\ufe5f-\\\\ufe61\\\\ufe68\\\\ufe6a\\\\ufe6b\\\\uff01-\\\\uff03\\\\uff05-\\\\uff07\\\\uff0a\\\\uff0c\\\\uff0e\\\\uff0f\\\\uff1a\\\\uff1b\\\\uff1f\\\\uff20\\\\uff3c\\\\uff61\\\\uff64\\\\uff65',\n    Ps:'\\\\u0028\\\\u005b\\\\u007b\\\\u0f3a\\\\u0f3c\\\\u169b\\\\u201a\\\\u201e\\\\u2045\\\\u207d\\\\u208d\\\\u2329\\\\u2768\\\\u276a\\\\u276c\\\\u276e\\\\u2770\\\\u2772\\\\u2774\\\\u27c5\\\\u27e6\\\\u27e8\\\\u27ea\\\\u2983\\\\u2985\\\\u2987\\\\u2989\\\\u298b\\\\u298d\\\\u298f\\\\u2991\\\\u2993\\\\u2995\\\\u2997\\\\u29d8\\\\u29da\\\\u29fc\\\\u3008\\\\u300a\\\\u300c\\\\u300e\\\\u3010\\\\u3014\\\\u3016\\\\u3018\\\\u301a\\\\u301d\\\\ufd3e\\\\ufe17\\\\ufe35\\\\ufe37\\\\ufe39\\\\ufe3b\\\\ufe3d\\\\ufe3f\\\\ufe41\\\\ufe43\\\\ufe47\\\\ufe59\\\\ufe5b\\\\ufe5d\\\\uff08\\\\uff3b\\\\uff5b\\\\uff5f\\\\uff62',\n    Sc:'\\\\u0024\\\\u00a2-\\\\u00a5\\\\u060b\\\\u09f2\\\\u09f3\\\\u0af1\\\\u0bf9\\\\u0e3f\\\\u17db\\\\u20a0-\\\\u20b5\\\\ufdfc\\\\ufe69\\\\uff04\\\\uffe0\\\\uffe1\\\\uffe5\\\\uffe6',\n    Sk:'\\\\u005e\\\\u0060\\\\u00a8\\\\u00af\\\\u00b4\\\\u00b8\\\\u02c2-\\\\u02c5\\\\u02d2-\\\\u02df\\\\u02e5-\\\\u02ed\\\\u02ef-\\\\u02ff\\\\u0374\\\\u0375\\\\u0384\\\\u0385\\\\u1fbd\\\\u1fbf-\\\\u1fc1\\\\u1fcd-\\\\u1fcf\\\\u1fdd-\\\\u1fdf\\\\u1fed-\\\\u1fef\\\\u1ffd\\\\u1ffe\\\\u309b\\\\u309c\\\\ua700-\\\\ua716\\\\ua720\\\\ua721\\\\uff3e\\\\uff40\\\\uffe3',\n    Sm:'\\\\u002b\\\\u003c-\\\\u003e\\\\u007c\\\\u007e\\\\u00ac\\\\u00b1\\\\u00d7\\\\u00f7\\\\u03f6\\\\u2044\\\\u2052\\\\u207a-\\\\u207c\\\\u208a-\\\\u208c\\\\u2140-\\\\u2144\\\\u214b\\\\u2190-\\\\u2194\\\\u219a\\\\u219b\\\\u21a0\\\\u21a3\\\\u21a6\\\\u21ae\\\\u21ce\\\\u21cf\\\\u21d2\\\\u21d4\\\\u21f4-\\\\u22ff\\\\u2308-\\\\u230b\\\\u2320\\\\u2321\\\\u237c\\\\u239b-\\\\u23b3\\\\u23dc-\\\\u23e1\\\\u25b7\\\\u25c1\\\\u25f8-\\\\u25ff\\\\u266f\\\\u27c0-\\\\u27c4\\\\u27c7-\\\\u27ca\\\\u27d0-\\\\u27e5\\\\u27f0-\\\\u27ff\\\\u2900-\\\\u2982\\\\u2999-\\\\u29d7\\\\u29dc-\\\\u29fb\\\\u29fe-\\\\u2aff\\\\ufb29\\\\ufe62\\\\ufe64-\\\\ufe66\\\\uff0b\\\\uff1c-\\\\uff1e\\\\uff5c\\\\uff5e\\\\uffe2\\\\uffe9-\\\\uffec',\n    So:'\\\\u00a6\\\\u00a7\\\\u00a9\\\\u00ae\\\\u00b0\\\\u00b6\\\\u0482\\\\u060e\\\\u060f\\\\u06e9\\\\u06fd\\\\u06fe\\\\u07f6\\\\u09fa\\\\u0b70\\\\u0bf3-\\\\u0bf8\\\\u0bfa\\\\u0cf1\\\\u0cf2\\\\u0f01-\\\\u0f03\\\\u0f13-\\\\u0f17\\\\u0f1a-\\\\u0f1f\\\\u0f34\\\\u0f36\\\\u0f38\\\\u0fbe-\\\\u0fc5\\\\u0fc7-\\\\u0fcc\\\\u0fcf\\\\u1360\\\\u1390-\\\\u1399\\\\u1940\\\\u19e0-\\\\u19ff\\\\u1b61-\\\\u1b6a\\\\u1b74-\\\\u1b7c\\\\u2100\\\\u2101\\\\u2103-\\\\u2106\\\\u2108\\\\u2109\\\\u2114\\\\u2116-\\\\u2118\\\\u211e-\\\\u2123\\\\u2125\\\\u2127\\\\u2129\\\\u212e\\\\u213a\\\\u213b\\\\u214a\\\\u214c\\\\u214d\\\\u2195-\\\\u2199\\\\u219c-\\\\u219f\\\\u21a1\\\\u21a2\\\\u21a4\\\\u21a5\\\\u21a7-\\\\u21ad\\\\u21af-\\\\u21cd\\\\u21d0\\\\u21d1\\\\u21d3\\\\u21d5-\\\\u21f3\\\\u2300-\\\\u2307\\\\u230c-\\\\u231f\\\\u2322-\\\\u2328\\\\u232b-\\\\u237b\\\\u237d-\\\\u239a\\\\u23b4-\\\\u23db\\\\u23e2-\\\\u23e7\\\\u2400-\\\\u2426\\\\u2440-\\\\u244a\\\\u249c-\\\\u24e9\\\\u2500-\\\\u25b6\\\\u25b8-\\\\u25c0\\\\u25c2-\\\\u25f7\\\\u2600-\\\\u266e\\\\u2670-\\\\u269c\\\\u26a0-\\\\u26b2\\\\u2701-\\\\u2704\\\\u2706-\\\\u2709\\\\u270c-\\\\u2727\\\\u2729-\\\\u274b\\\\u274d\\\\u274f-\\\\u2752\\\\u2756\\\\u2758-\\\\u275e\\\\u2761-\\\\u2767\\\\u2794\\\\u2798-\\\\u27af\\\\u27b1-\\\\u27be\\\\u2800-\\\\u28ff\\\\u2b00-\\\\u2b1a\\\\u2b20-\\\\u2b23\\\\u2ce5-\\\\u2cea\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u2ff0-\\\\u2ffb\\\\u3004\\\\u3012\\\\u3013\\\\u3020\\\\u3036\\\\u3037\\\\u303e\\\\u303f\\\\u3190\\\\u3191\\\\u3196-\\\\u319f\\\\u31c0-\\\\u31cf\\\\u3200-\\\\u321e\\\\u322a-\\\\u3243\\\\u3250\\\\u3260-\\\\u327f\\\\u328a-\\\\u32b0\\\\u32c0-\\\\u32fe\\\\u3300-\\\\u33ff\\\\u4dc0-\\\\u4dff\\\\ua490-\\\\ua4c6\\\\ua828-\\\\ua82b\\\\ufdfd\\\\uffe4\\\\uffe8\\\\uffed\\\\uffee\\\\ufffc\\\\ufffd',\n    Zl:'\\\\u2028',\n    Zp:'\\\\u2029',\n    ZZ:'\\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    Zs:'\\\\u0020\\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u202f\\\\u205f\\\\u3000'\n};\n\nUnicode.C = Unicode.Cc \n            + Unicode.Cf \n            + Unicode.Cs \n            + Unicode.Co ;\n            //+ Unicode.Cn ; //This is not defined.\n\nUnicode.L = Unicode.Lu \n            + Unicode.Ll \n            + Unicode.Lt \n            + Unicode.Lm \n            + Unicode.Mn    //Added 2014-05-29 due to some letters in names not being recognized.\n                            //This is where accent marks are individually combined instead of using an explicit character.\n            + Unicode.Lo ;\n\nUnicode.LC= Unicode.Lu \n            + Unicode.Ll \n            + Unicode.Lt ;\n\nUnicode.M = Unicode.Mn \n            + Unicode.Mc \n            + Unicode.Me ;\n\nUnicode.N = Unicode.Nd \n            + Unicode.Nl \n            + Unicode.No ;\n\nUnicode.P = Unicode.Pc \n            + Unicode.Pd \n            + Unicode.Ps \n            + Unicode.Pe \n            + Unicode.Pi \n            + Unicode.Pf \n            + Unicode.Po ;\n\nUnicode.S = Unicode.Sm \n            + Unicode.Sc \n            + Unicode.Sk \n            + Unicode.So ;\n\nUnicode.Z = Unicode.Zs \n            + Unicode.Zl \n            + Unicode.Zp ;\n\n//Not in Unicode spec:\nUnicode.w = '_'\n            + Unicode.L\n            + Unicode.N ;\n\n    //A Unicode based word boundry built with non-capturing parentheses\nUnicode.b = '(?:[' + Unicode.w + '](?:[^' + Unicode.w +']|$)'\n            + '|(?:^|[^' + Unicode.w + '])[' + Unicode.w +']'\n            + ')' ;\n\n    //A Unicode based word boundry build with non-capturing parentheses\nUnicode.bOut = '(?=[^' + Unicode.w +']|$)';\n\n    //A Unicode based word boundry build with non-capturing parentheses\n    //JavaScript does not have a non-consuming look-behind.\n    //This makes a direct replacement for \\b not possible as we may consume\n    // part of the string to make this test.\nUnicode.bIn = '(?:^|[^' + Unicode.w + '])';\n\n    //A possible work-around is to use a capture and replace it.\nUnicode.bInCapture = '(?:^|([^' + Unicode.w + ']))';\n\n    //A Unicode based non-word boundry build with non-capturing parentheses\nUnicode.B = '(?:[' + Unicode.w + '][' + Unicode.w +']'\n        + '|[^' + Unicode.w + '][^' + Unicode.w +']'\n        + ')' ;\n\nUnicode.d = Unicode.N ;","import { Unicode } from \"../util/unicode\";\n\nimport * as tokens from \"./token\";\nimport { EXACT_TOKEN_TYPES } from \"./token\";\n\ntype token = number;\ntype position = [number, number];\n\nclass TokenError extends Error {\n    traceback: position;\n    constructor(msg: string, traceback: position) {\n        super(msg);\n        this.traceback = traceback;\n    }\n}\n\nexport class pySyntaxError extends SyntaxError {\n    traceback: [string, number, number, string];\n    constructor(msg: string, traceback: [string, number, number, string]) {\n        super(msg);\n        this.traceback = traceback;\n    }\n}\n\nclass IndentationError extends pySyntaxError {}\n\nexport class TokenInfo {\n    type: token\n    string: string\n    start: position\n    end: position\n    line: string\n    constructor(type: token, string: string, start: position, end:position, line:string) {\n        this.type = type;\n        this.string = string;\n        this.start = start;\n        this.end = end;\n        this.line = line;\n    }\n    get exact_type(): token {\n        if (this.type === tokens.OP && this.string in EXACT_TOKEN_TYPES) {\n            return EXACT_TOKEN_TYPES[this.string];\n        } else {\n            return this.type;\n        }\n    }\n}\n\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\nfunction regexEscape(string: string): string {\n    return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, \"\\\\$&\") : string;\n}\n\nconst group = (...choices: string[]): string => \"(\" + choices.join(\"|\") + \")\";\nconst any = (...choices: string[]): string => group(...choices) + \"*\";\nconst maybe = (...choices: string[]): string => group(...choices) + \"?\";\n\nfunction rstrip(input:string, what: string): string {\n    let i: number;\n    for (i = input.length; i > 0; --i) {\n        if (what.indexOf(input.charAt(i - 1)) === -1) {\n            break;\n        }\n    }\n    return input.substring(0, i);\n}\n\nconst Whitespace = \"[ \\\\f\\\\t]*\";\nconst Comment_ = \"#[^\\\\r\\\\n]*\";\nconst Ignore = Whitespace + any(\"\\\\\\\\\\\\r?\\\\n\" + Whitespace) + maybe(Comment_);\nconst Name = \"[\" + Unicode.w + \"]+\";\n\nconst Exponent = \"[eE][-+]?[0-9](?:_?[0-9])*\";\nconst Pointfloat = group(\"[0-9](?:_?[0-9])*\\\\.(?:[0-9](?:_?[0-9])*)?\", \"\\\\.[0-9](?:_?[0-9])*\") + maybe(Exponent);\nconst Expfloat = \"[0-9](?:_?[0-9])*\" + Exponent;\nconst Floatnumber = group(Pointfloat, Expfloat);\nconst Imagnumber = group(\"[0-9](?:_?[0-9])*[jJ]\", Floatnumber + \"[jJ]\");\n\n// Return the empty string, plus all of the valid string prefixes.\nfunction _all_string_prefixes(): string[] {\n    return [\"\", \"FR\", \"RF\", \"Br\", \"BR\", \"Fr\", \"r\", \"B\", \"R\", \"b\", \"bR\", \"f\", \"rb\", \"rB\", \"F\", \"Rf\", \"U\", \"rF\", \"u\", \"RB\", \"br\", \"fR\", \"fr\", \"rf\", \"Rb\"];\n}\n\n// Note that since _all_string_prefixes includes the empty string,\n//  StringPrefix can be the empty string (making it optional).\nconst StringPrefix = group(..._all_string_prefixes());\n\n// these regexes differ from python because .exec doesn't do the\n// same thing as .match in python. It's more like .search.\n// .match matches from the start of the string.\n// to get the same behaviour we can add a ^ to the start of the\n// regex\n// Tail end of ' string.\nconst Single = \"^[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'\";\n// Tail end of \" string.\nconst Double = '^[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"';\n// Tail end of ''' string.\nconst Single3 = \"^[^'\\\\\\\\]*(?:(?:\\\\\\\\.|'(?!''))[^'\\\\\\\\]*)*'''\";\n// Tail end of \"\"\" string.\nconst Double3 = '^[^\"\\\\\\\\]*(?:(?:\\\\\\\\.|\"(?!\"\"))[^\"\\\\\\\\]*)*\"\"\"';\nconst Triple = group(StringPrefix + \"'''\", StringPrefix + '\"\"\"');\n// Single-line ' or \" string.\nconst String_ = group(StringPrefix + \"'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*'\", StringPrefix + '\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*\"');\n\n// Sorting in reverse order puts the long operators before their prefixes.\n// Otherwise if = came before ==, == would get recognized as two instances\n// of =.\n\nconst EXACT_TOKENS_SORTED = Object.keys(EXACT_TOKEN_TYPES).sort();\nconst Special = group(...EXACT_TOKENS_SORTED.reverse().map((t) => regexEscape(t)));\nconst Funny = group(\"\\\\r?\\\\n\", Special);\n\nconst ContStr = group(\n    StringPrefix + \"'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*\" + group(\"'\", \"\\\\\\\\\\\\r?\\\\n\"),\n    StringPrefix + '\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*' + group('\"', \"\\\\\\\\\\\\r?\\\\n\")\n);\nconst PseudoExtras = group(\"\\\\\\\\\\\\r?\\\\n|$\", Comment_, Triple);\n\n// For a given string prefix plus quotes, endpats maps it to a regex\n//  to match the remainder of that string. _prefix can be empty, for\n//  a normal single or triple quoted string (with no prefix).\nconst endpats = {};\nconst prefixes = _all_string_prefixes();\nfor (let _prefix of prefixes) {\n    endpats[_prefix + \"'\"] = Single;\n    endpats[_prefix + '\"'] = Double;\n    endpats[_prefix + \"'''\"] = Single3;\n    endpats[_prefix + '\"\"\"'] = Double3;\n}\n\n// A set of all of the single and triple quoted string prefixes,\n//  including the opening quotes.\nconst single_quoted = new Set();\nconst triple_quoted = new Set();\nfor (let t of prefixes) {\n    single_quoted.add(t + '\"');\n    single_quoted.add(t + \"'\");\n    triple_quoted.add(t + '\"\"\"');\n    triple_quoted.add(t + \"'''\");\n}\n\nconst tabsize = 8;\n\nconst Hexnumber = \"0[xX](?:_?[0-9a-fA-F])+\";\nconst Binnumber = \"0[bB](?:_?[01])+\";\nconst Octnumber = \"0[oO](?:_?[0-7])+\";\nconst Decnumber = \"(?:0(?:_?0)*|[1-9](?:_?[0-9])*)\";\nconst Intnumber = group(Hexnumber, Binnumber, Octnumber, Decnumber);\nconst Number_ = group(Imagnumber, Floatnumber, Intnumber);\nconst PseudoToken = Whitespace + group(PseudoExtras, Number_, Funny, ContStr, Name);\n\nconst PseudoTokenRegexp = new RegExp(PseudoToken);\n\n// readline takes a callback that gets the next line and return undefined when it's done\n\nexport function tokenize(readline: () => string  ) {\n    return _tokenize(readline);\n}\n\nexport function generate_tokens(readline: () => string) {\n    return _tokenize(readline);\n}\n\nfunction* _tokenize(readline: () => string , encoding?: string, filename:string = \"<tokenize>\"): IterableIterator<TokenInfo> {\n    var lnum: number = 0,\n        parenlev: number = 0,\n        continued:number = 0,\n        numchars: string = \"0123456789\",\n        contstr: string = \"\",\n        needcont: number = 0,\n        contline: null | string = null,\n        indents: number[] = [0],\n        capos: null | string = null,\n        endprog: RegExp,\n        strstart: position,\n        end: number,\n        pseudomatch: RegExpExecArray;\n\n    // since we don't do this with bytes this is not used\n    if (encoding !== undefined) {\n        if (encoding === \"utf-8-sig\") {\n            // BOM will already have been stripped.\n            encoding = \"utf-8\";\n        }\n\n        yield new TokenInfo(tokens.ENCODING, encoding, [0, 0], [0, 0], \"\");\n    }\n\n    var lasline = \"\";\n    var line = \"\";\n    while (true) {\n        // loop over lines in stream\n        // We capture the value of the line variable here because\n        // readline uses the empty string '' to signal end of input,\n        // hence `line` itself will always be overwritten at the end\n        // of this loop.\n        lasline = line;\n        line = readline() || \"\"; // readline will return undefined when it's done\n\n        // lets pretend this doesn't exist for now.\n        // if encoding is not None:\n        //     line = line.decode(encoding)\n        lnum += 1;\n        var pos = 0;\n        var max = line.length;\n\n        if (contstr) {\n            // continued string\n            if (!line) {\n                throw new TokenError(\"EOF in multi-line string\", strstart);\n            }\n            endprog.lastIndex = 0;\n            var endmatch = endprog.exec(line);\n            if (endmatch) {\n                pos = end = endmatch[0].length;\n                yield new TokenInfo(tokens.STRING, contstr + line.substring(0, end), strstart, [lnum, end], contline + line);\n                contstr = \"\";\n                needcont = 0;\n                contline = null;\n            } else if (needcont && line.substring(line.length - 2) !== \"\\\\\\n\" && line.substring(line.length - 3) !== \"\\\\\\r\\n\") {\n                yield new TokenInfo(tokens.ERRORTOKEN, contstr + line, strstart, [lnum, line.length], contline);\n                contstr = \"\";\n                contline = null;\n                continue;\n            } else {\n                contstr = contstr + line;\n                contline = contline + line;\n                continue;\n            }\n        } else if (parenlev === 0 && !continued) {\n            // new statement\n            if (!line) {\n                break;\n            }\n            var column = 0;\n            while (pos < max) {\n                // measure leading whitespace\n                if (line[pos] === \" \") {\n                    column += 1;\n                } else if (line[pos] === \"\\t\") {\n                    column = Math.floor(column / tabsize + 1) * tabsize;\n                } else if (line[pos] === \"\\f\") {\n                    column = 0;\n                } else {\n                    break;\n                }\n                pos += 1;\n            }\n\n            if (pos === max) {\n                break;\n            }\n\n            if (\"#\\r\\n\".includes(line[pos])) {\n                // skip comments or blank lines\n                if (line[pos] === \"#\") {\n                    const commentoken = rstrip(line.substring(pos), \"\\r\\n\");\n                    yield new TokenInfo(tokens.COMMENT, commentoken, [lnum, pos], [lnum, pos + commentoken.length], line);\n                    pos += commentoken.length;\n                }\n\n                yield new TokenInfo(tokens.NL, line.substring(pos), [lnum, pos], [lnum, line.length], line);\n                continue;\n            }\n\n            if (column > indents[indents.length - 1]) {\n                // count indents or dedents\n                indents.push(column);\n                yield new TokenInfo(tokens.INDENT, line.substring(pos), [lnum, 0], [lnum, pos], line);\n            }\n\n            while (column < indents[indents.length - 1]) {\n                if (!indents.includes(column)) {\n                    throw new IndentationError(\"unindent does not match any outer indentation level\", [filename, lnum, pos, line]);\n                }\n\n                indents = indents.slice(0, -1);\n\n                yield new TokenInfo(tokens.DEDENT, \"\", [lnum, pos], [lnum, pos], line);\n            }\n        } else {\n            // continued statement\n            if (!line) {\n                throw new TokenError(\"EOF in multi-line statement\", [lnum, 0]);\n            }\n            continued = 0;\n        }\n\n        while (pos < max) {\n            //console.log(\"pos:\"+pos+\":\"+max);\n            // js regexes don't return any info about matches, other than the\n            // content. we'd like to put a \\w+ before pseudomatch, but then we\n            // can't get any data\n            capos = line.charAt(pos);\n            while (capos === \" \" || capos === \"\\f\" || capos === \"\\t\") {\n                pos += 1;\n                capos = line.charAt(pos);\n            }\n\n            pseudomatch = PseudoTokenRegexp.exec(line.substring(pos));\n            if (pseudomatch) {\n                // scan for tokens\n                var start = pos;\n                var end = start + pseudomatch[1].length;\n                var spos: position = [lnum, start];\n                var epos: position = [lnum, end];\n                var pos = end;\n                if (start === end) {\n                    continue;\n                }\n\n                var token = line.substring(start, end);\n                var initial = line[start];\n                //console.log(\"token:\",token, \"initial:\",initial, start, end);\n                if (\n                    numchars.includes(initial) || // ordinary number\n                    (initial === \".\" && token !== \".\" && token !== \"...\")\n                ) {\n                    yield new TokenInfo(tokens.NUMBER, token, spos, epos, line);\n                } else if (\"\\r\\n\".includes(initial)) {\n                    if (parenlev > 0) {\n                        yield new TokenInfo(tokens.NL, token, spos, epos, line);\n                    } else {\n                        yield new TokenInfo(tokens.NEWLINE, token, spos, epos, line);\n                    }\n                } else if (initial === \"#\") {\n                    //assert not token.endswith(\"\\n\")\n                    yield new TokenInfo(tokens.COMMENT, token, spos, epos, line);\n                } else if (triple_quoted.has(token)) {\n                    endprog = RegExp(endpats[token]);\n                    endmatch = endprog.exec(line.substring(pos));\n                    if (endmatch) {\n                        // all on one line\n                        pos = endmatch[0].length + pos;\n                        token = line.substring(start, pos);\n                        yield new TokenInfo(tokens.STRING, token, spos, [lnum, pos], line);\n                    } else {\n                        strstart = [lnum, start]; // multiple lines\n                        contstr = line.substring(start);\n                        contline = line;\n                        break;\n                    }\n                    // Check up to the first 3 chars of the token to see if\n                    //  they're in the single_quoted set. If so, they start\n                    //  a string.\n                    // We're using the first 3, because we're looking for\n                    //  \"rb'\" (for example) at the start of the token. If\n                    //  we switch to longer prefixes, this needs to be\n                    //  adjusted.\n                    // Note that initial == token[:1].\n                    // Also note that single quote checking must come after\n                    //  triple quote checking (above).\n                } else if (single_quoted.has(initial) || single_quoted.has(token.substring(0, 2)) || single_quoted.has(token.substring(0, 3))) {\n                    if (token[token.length - 1] === \"\\n\") {\n                        // continued string\n                        strstart = [lnum, start];\n                        // Again, using the first 3 chars of the\n                        //  token. This is looking for the matching end\n                        //  regex for the correct type of quote\n                        //  character. So it's really looking for\n                        //  endpats[\"'\"] or endpats['\"'], by trying to\n                        //  skip string prefix characters, if any.\n                        endprog = RegExp(endpats[initial] || endpats[token[1]] || endpats[token[2]]);\n                        contstr = line.substring(start);\n                        needcont = 1;\n                        contline = line;\n                        break;\n                    } else {\n                        // ordinary string\n                        yield new TokenInfo(tokens.STRING, token, spos, epos, line);\n                    }\n                } else if (initial.isIdentifier()) {\n                    // ordinary name\n                    yield new TokenInfo(tokens.NAME, token, spos, epos, line);\n                } else if (initial === \"\\\\\") {\n                    // continued stmt\n                    continued = 1;\n                } else {\n                    if (\"([{\".includes(initial)) {\n                        parenlev += 1;\n                    } else if (\")]}\".includes(initial)) {\n                        parenlev -= 1;\n                    }\n                    yield new TokenInfo(tokens.OP, token, spos, epos, line);\n                }\n            } else {\n                yield new TokenInfo(tokens.ERRORTOKEN, line[pos], [lnum, pos], [lnum, pos + 1], line);\n                pos += 1;\n            }\n        }\n    }\n\n    // Add an implicit NEWLINE if the input doesn't end in one\n    if (lasline && !\"\\r\\n\".includes(lasline[lasline.length - 1])) {\n        yield new TokenInfo(tokens.NEWLINE, \"\", [lnum - 1, lasline.length], [lnum - 1, lasline.length + 1], \"\");\n    }\n    for (let _ in indents.slice(1)) {\n        // pop remaining indent levels\n        yield new TokenInfo(tokens.DEDENT, \"\", [lnum, 0], [lnum, 0], \"\");\n    }\n\n    yield new TokenInfo(tokens.ENDMARKER, \"\", [lnum, 0], [lnum, 0], \"\");\n}\n","import { NAME, NUMBER, OP, STRING, tok_name } from \"./token\";\nimport { exact_token_types } from \"./Tokenizer\";\nimport * as tokens from \"./token\";\nimport { TokenInfo, pySyntaxError } from \"./tokenize\";\n\nclass Load { }\n\nclass Name {\n  id;\n  ctx;\n  lineno: number;\n  col_offset: number;\n  end_lineno: number;\n  end_col_offset: number;\n  constructor(id, ctx, lineno, col_offset, end_lineno, end_col_offset) {\n    this.id = id;\n    this.ctx = ctx;\n    this.lineno = lineno;\n    this.col_offset = col_offset;\n    this.end_lineno = end_lineno;\n    this.end_col_offset = end_col_offset;\n  }\n}\n\nexport function logger(\n  // \"\"\"For non-memoized functions that we want to be logged.\n\n  // (In practice this is only non-leader left-recursive functions.)\n  // \"\"\"\n  target: Parser,\n  propertyKey: string,\n  descriptor: PropertyDescriptor\n) {\n  const method: (...args: any[]) => any = descriptor.value;\n  const method_name = propertyKey;;\n  function logger_wrapper(...args) {\n    if (!this._verbose) {\n      return method.call(this, ...args);\n    }\n    const fill = \"  \".repeat(this._level);\n    console.log(\n      `${fill}${method_name}(${args}) .... (looking at ${this.showpeek()\n        .toString()\n        .slice(0, 200)})`\n    );\n    this._level++;\n    const tree = method.call(this, ...args);\n    this._level--;\n    console.log(\n      `${fill}... ${method_name}(${args}) --> ${String(tree).slice(0, 200)}`\n    );\n    return tree;\n  }\n  descriptor.value = logger_wrapper;\n}\n\nexport function memoize(\n  target: Parser,\n  propertyKey: string,\n  descriptor: PropertyDescriptor\n) {\n  const method: (...args: any[]) => any  = descriptor.value;\n  const method_name = propertyKey;\n  function memoize_wrapper(...args) {\n    let mark = this.mark();\n    let key = [mark, method_name, args].toString();\n    // fast path: cache hit and not verbose\n    if (key in this._cache && !this._verbose) {\n      // work out how to _cache\n      const [tree, endmark] = this._cache[key];\n      this.reset(endmark);\n      return tree;\n    }\n    // slow path verbose or cache not hit\n    const verbose = this._verbose;\n    const fill = \"  \".repeat(this._level);\n    let tree, endmark;\n    if (!(key in this._cache)) {\n      if (verbose) {\n        console.log(\n          `${fill}${method_name}(${args}) ... (looking at ${this.showpeek()\n            .toString()\n            .slice(0, 200)})`\n        );\n      }\n      this._level++;\n      tree = method.call(this, ...args);\n      this._level--;\n      if (verbose) {\n        console.log(\n          `${fill}... ${method_name}(${args}) -> ${String(tree).slice(0, 200)}`\n        );\n      }\n      endmark = this.mark();\n      this._cache[key] = [tree, endmark];\n    } else {\n      [tree, endmark] = this._cache[key];\n      if (verbose) {\n        console.log(\n          `${fill}${method_name}(${args}) -> ${String(tree).slice(200)}`\n        );\n      }\n      this.reset(endmark);\n    }\n    return tree;\n  }\n  descriptor.value = memoize_wrapper;\n}\n\nexport function memoize_left_rec(\n  target: Parser,\n  propertyKey: string,\n  descriptor: PropertyDescriptor\n) {\n  const method: (...args: any[]) => any  = descriptor.value;\n  const method_name = propertyKey;\n  function memoize_left_rec_wrapper() {\n    let mark = this.mark();\n    let key = [mark, method_name, []].toString();\n    let endmark, tree;\n    // fastpath cache hit and not verbose\n    if (key in this._cache && !this._verbose) {\n      [tree, endmark] = this._cache[key];\n      this.reset(endmark);\n      return tree;\n    }\n    // # Slow path: no cache hit, or verbose.\n    const verbose = this._verbose;\n    const fill = \"  \".repeat(this._level);\n    if (!(key in this._cache)) {\n      if (verbose) {\n        console.log(\n          `${fill}${method_name} ... (looking at ${this.showpeek()})`\n        );\n      }\n      this._level++;\n      /*\n            # For left-recursive rules we manipulate the cache and\n            # loop until the rule shows no progress, then pick the\n            # previous result.  For an explanation why this works, see\n            # https://github.com/PhilippeSigaud/Pegged/wiki/Left-Recursion\n            # (But we use the memoization cache instead of a static\n            # variable; perhaps this is similar to a paper by Warth et al.\n            # (http://web.cs.ucla.edu/~todd/research/pub.php?id=pepm08).\n\n            # Prime the cache with a failure.\n            */\n      let [lastresult, lastmark] = (this._cache[key] = [null, mark]);\n      let depth = 0;\n      if (verbose) {\n        console.log(\n          `${fill}Recursive ${method_name} at ${mark} depth ${depth}`\n        );\n      }\n      while (true) {\n        this.reset(mark);\n        const result = method.call(this);\n        endmark = this.mark();\n        depth++;\n        if (verbose) {\n          console.log(\n            `${fill}Recursive ${method_name} at ${mark} depth ${depth}: ${String(\n              result\n            ).slice(0, 200)} to ${endmark}`\n          );\n        }\n        if (!result) {\n          if (verbose) {\n            console.log(\n              `${fill}Fail with ${String(lastresult).slice(\n                0,\n                200\n              )} to ${lastmark}`\n            );\n          }\n          break;\n        }\n        if (endmark <= lastmark) {\n          if (verbose) {\n            console.log(\n              `${fill}Bailing with ${String(lastresult).slice(\n                0,\n                200\n              )} to ${lastmark}`\n            );\n          }\n          break;\n        }\n        this._cache[key] = [lastresult, lastmark] = [result, endmark];\n      }\n      this.reset(lastmark);\n      tree = lastresult;\n      this._level--;\n\n      if (verbose) {\n        console.log(\n          `${fill}${method_name}() -> ${String(tree).slice(0, 200)} [cached]`\n        );\n      }\n      if (tree) {\n        endmark = this.mark();\n      } else {\n        endmark = mark;\n        this.reset(endmark);\n      }\n      this._cache[key] = [tree, endmark];\n    } else {\n      [tree, endmark] = this._cache[key];\n      if (verbose) {\n        console.log(\n          `${fill}${method_name}() -> ${String(tree).slice(0, 200)} [fresh]`\n        );\n      }\n      if (tree) {\n        this.reset(endmark);\n      }\n    }\n    return tree;\n  }\n  descriptor.value = memoize_left_rec_wrapper;\n}\n\nexport class Parser {\n  _tokenizer;\n  _verbose: boolean;\n  _level: number;\n  _cache: { [key: string]: [any, any] };\n  mark: () => number;\n  reset: (number) => null | void;\n  _tokens: TokenInfo[];\n  constructor(tokenizer, verbose = false) {\n    this._tokenizer = tokenizer;\n    this._verbose = verbose;\n    this._level = 0;\n    this._cache = {};\n    this.mark = this._tokenizer.mark.bind(this._tokenizer);\n    this.reset = this._tokenizer.reset.bind(this._tokenizer);\n    this._tokens = this._tokenizer._tokens;\n  }\n  start() {\n    return null;\n  }\n  showpeek() {\n    const tok = this._tokenizer.peek();\n    return `${tok.start[0]}.${tok.start[1]}: ${tok_name[tok.type]}:'${tok.string\n      }'`;\n  }\n\n  @memoize\n  name() {\n    let tok = this._tokenizer.peek();\n    if (tok.type === NAME) {\n      tok = this._tokenizer.getnext();\n      return new Name(\n        tok.string,\n        new Load(),\n        tok.start[0],\n        tok.start[1],\n        tok.end[0],\n        tok.end[1]\n      );\n    }\n    return null;\n  }\n  string() {\n    const tok = this._tokenizer.peek();\n    if (tok.type === STRING) {\n      return this._tokenizer.getnext();\n    }\n    return null;\n  }\n  @memoize\n  number() {\n    const tok = this._tokenizer.peek();\n    if (tok.type === NUMBER) {\n      return this._tokenizer.getnext();\n    }\n    return null;\n  }\n  @memoize\n  op() {\n    const tok = this._tokenizer.peek();\n    if (tok.type === OP) {\n      return this._tokenizer.getnext();\n    }\n    return null;\n  }\n  @memoize\n  expect(type) {\n    const tok = this._tokenizer.peek();\n    if (tok.string === type) {\n      return this._tokenizer.getnext();\n    }\n    if (type in exact_token_types) {\n      if (tok.type === exact_token_types[type]) {\n        return this._tokenizer.getnext();\n      }\n    }\n    if (type in tokens) {\n      if (tok.type === tokens[type]) {\n        return this._tokenizer.getnext();\n      }\n    }\n    if (tok.type === OP && tok.string === type) {\n      return this._tokenizer.getnext();\n    }\n    return null;\n  }\n  positive_lookahead(func, ...args) {\n    const mark = this.mark();\n    const ok = func.call(this, ...args);\n    this.reset(mark);\n    return ok;\n  }\n  negative_lookahead(func, ...args) {\n    const mark = this.mark();\n    const ok = func.call(this, ...args);\n    this.reset(mark);\n    return !ok;\n  }\n  make_syntax_error(filename = \"<unknown>\") {\n    const tok = this._tokenizer.diagnose();\n    return new pySyntaxError(\"pegen parse failure\", [\n      filename,\n      tok.start[0],\n      1 + tok.start[1],\n      tok.line,\n    ]);\n  }\n}\n","// #!/usr/bin/env python3.8\n// # @generated by pegen from /Users/scork/Desktop/PythonProjects/cpython/Grammar/python.gram\n// @ts-nocheck\n\nimport * as ast from \"./ast\";\nimport * as astnodes from \"../../asdl/astnodes\";\n\nimport { memoize, memoize_left_rec, logger, Parser } from \"./parser\";\n\nconst EXTRA = []; // todo\n\nconst pegen = new Proxy({}, { get: () => (...args) => args });\n\nexport class GeneratedParser extends Parser {\n    @memoize\n    file() {\n        //# file: statements? $\n        let a, endmarker, mark;\n        mark = this.mark();\n        if ((a = this.statements() || 1) && (endmarker = this.expect(\"ENDMARKER\"))) {\n            return pegen.make_module(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    interactive() {\n        //# interactive: statement_newline\n        let a, mark;\n        mark = this.mark();\n        if ((a = this.statement_newline())) {\n            return new astnodes.Interactive(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    eval() {\n        //# eval: expressions NEWLINE* $\n        let _loop0_1, a, endmarker, mark;\n        mark = this.mark();\n        if ((a = this.expressions()) && (_loop0_1 = this._loop0_1()) && (endmarker = this.expect(\"ENDMARKER\"))) {\n            return new astnodes.Expression(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    func_type() {\n        //# func_type: '(' type_expressions? ')' '->' expression NEWLINE* $\n        let _loop0_2, a, b, endmarker, literal, literal_1, literal_2, mark;\n        mark = this.mark();\n        if (\n            (literal = this.expect(\"(\")) &&\n            (a = this.type_expressions() || 1) &&\n            (literal_1 = this.expect(\")\")) &&\n            (literal_2 = this.expect(\"->\")) &&\n            (b = this.expression()) &&\n            (_loop0_2 = this._loop0_2()) &&\n            (endmarker = this.expect(\"ENDMARKER\"))\n        ) {\n            return new astnodes.FunctionType(a, b);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    fstring() {\n        //# fstring: star_expressions\n        let mark, star_expressions;\n        mark = this.mark();\n        if ((star_expressions = this.star_expressions())) {\n            return star_expressions;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    type_expressions() {\n        //# type_expressions: ','.expression+ ',' '*' expression ',' '**' expression | ','.expression+ ',' '*' expression | ','.expression+ ',' '**' expression | '*' expression ',' '**' expression | '*' expression | '**' expression | ','.expression+\n        let a, b, c, literal, literal_1, literal_2, literal_3, mark;\n        mark = this.mark();\n        if (\n            (a = this._gather_3()) &&\n            (literal = this.expect(\",\")) &&\n            (literal_1 = this.expect(\"*\")) &&\n            (b = this.expression()) &&\n            (literal_2 = this.expect(\",\")) &&\n            (literal_3 = this.expect(\"**\")) &&\n            (c = this.expression())\n        ) {\n            return pegen.seq_append_to_end(pegen.seq_append_to_end(a, b), c);\n        }\n        this.reset(mark);\n        if ((a = this._gather_5()) && (literal = this.expect(\",\")) && (literal_1 = this.expect(\"*\")) && (b = this.expression())) {\n            return pegen.seq_append_to_end(a, b);\n        }\n        this.reset(mark);\n        if ((a = this._gather_7()) && (literal = this.expect(\",\")) && (literal_1 = this.expect(\"**\")) && (b = this.expression())) {\n            return pegen.seq_append_to_end(a, b);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\")) && (a = this.expression()) && (literal_1 = this.expect(\",\")) && (literal_2 = this.expect(\"**\")) && (b = this.expression())) {\n            return pegen.seq_append_to_end(pegen.singleton_seq(a), b);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\")) && (a = this.expression())) {\n            return pegen.singleton_seq(a);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"**\")) && (a = this.expression())) {\n            return pegen.singleton_seq(a);\n        }\n        this.reset(mark);\n        if ((a = this._gather_9())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    statements() {\n        //# statements: statement+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._loop1_11())) {\n            return pegen.seq_flatten(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    statement() {\n        //# statement: compound_stmt | simple_stmts\n        let a, mark;\n        mark = this.mark();\n        if ((a = this.compound_stmt())) {\n            return pegen.singleton_seq(a);\n        }\n        this.reset(mark);\n        if ((a = this.simple_stmts())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    statement_newline() {\n        //# statement_newline: compound_stmt NEWLINE | simple_stmts | NEWLINE | $\n        let a, endmarker, mark, newline, simple_stmts;\n        mark = this.mark();\n        if ((a = this.compound_stmt()) && (newline = this.expect(\"NEWLINE\"))) {\n            return pegen.singleton_seq(a);\n        }\n        this.reset(mark);\n        if ((simple_stmts = this.simple_stmts())) {\n            return simple_stmts;\n        }\n        this.reset(mark);\n        if ((newline = this.expect(\"NEWLINE\"))) {\n            return pegen.singleton_seq(new astnodes.Pass(...EXTRA));\n        }\n        this.reset(mark);\n        if ((endmarker = this.expect(\"ENDMARKER\"))) {\n            return pegen.interactive_exit(p);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    simple_stmts() {\n        //# simple_stmts: simple_stmt !';' NEWLINE | ';'.simple_stmt+ ';'? NEWLINE\n        let a, mark, newline, opt;\n        mark = this.mark();\n        if ((a = this.simple_stmt()) && this.negative_lookahead(this.expect, \";\") && (newline = this.expect(\"NEWLINE\"))) {\n            return pegen.singleton_seq(a);\n        }\n        this.reset(mark);\n        if ((a = this._gather_12()) && (opt = this.expect(\";\") || 1) && (newline = this.expect(\"NEWLINE\"))) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    simple_stmt() {\n        //# simple_stmt: assignment | star_expressions | &'return' return_stmt | &('import' | 'from') import_stmt | &'raise' raise_stmt | 'pass' | &'del' del_stmt | &'yield' yield_stmt | &'assert' assert_stmt | 'break' | 'continue' | &'global' global_stmt | &'nonlocal' nonlocal_stmt\n        let assert_stmt, assignment, del_stmt, e, global_stmt, import_stmt, literal, mark, nonlocal_stmt, raise_stmt, return_stmt, yield_stmt;\n        mark = this.mark();\n        if ((assignment = this.assignment())) {\n            return assignment;\n        }\n        this.reset(mark);\n        if ((e = this.star_expressions())) {\n            return new astnodes.Expr(e, ...EXTRA);\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"return\") && (return_stmt = this.return_stmt())) {\n            return return_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this._tmp_14) && (import_stmt = this.import_stmt())) {\n            return import_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"raise\") && (raise_stmt = this.raise_stmt())) {\n            return raise_stmt;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"pass\"))) {\n            return new astnodes.Pass(...EXTRA);\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"del\") && (del_stmt = this.del_stmt())) {\n            return del_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"yield\") && (yield_stmt = this.yield_stmt())) {\n            return yield_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"assert\") && (assert_stmt = this.assert_stmt())) {\n            return assert_stmt;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"break\"))) {\n            return new astnodes.Break(...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"continue\"))) {\n            return new astnodes.Continue(...EXTRA);\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"global\") && (global_stmt = this.global_stmt())) {\n            return global_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"nonlocal\") && (nonlocal_stmt = this.nonlocal_stmt())) {\n            return nonlocal_stmt;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    compound_stmt() {\n        //# compound_stmt: &('def' | '@' | ASYNC) function_def | &'if' if_stmt | &('class' | '@') class_def | &('with' | ASYNC) with_stmt | &('for' | ASYNC) for_stmt | &'try' try_stmt | &'while' while_stmt\n        let class_def, for_stmt, function_def, if_stmt, mark, try_stmt, while_stmt, with_stmt;\n        mark = this.mark();\n        if (this.positive_lookahead(this._tmp_15) && (function_def = this.function_def())) {\n            return function_def;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"if\") && (if_stmt = this.if_stmt())) {\n            return if_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this._tmp_16) && (class_def = this.class_def())) {\n            return class_def;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this._tmp_17) && (with_stmt = this.with_stmt())) {\n            return with_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this._tmp_18) && (for_stmt = this.for_stmt())) {\n            return for_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"try\") && (try_stmt = this.try_stmt())) {\n            return try_stmt;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"while\") && (while_stmt = this.while_stmt())) {\n            return while_stmt;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    assignment() {\n        //# assignment: NAME ':' expression ['=' annotated_rhs] | ('(' single_target ')' | single_subscript_attribute_target) ':' expression ['=' annotated_rhs] | ((star_targets '='))+ (yield_expr | star_expressions) !'=' TYPE_COMMENT? | single_target augassign ~ (yield_expr | star_expressions) | invalid_assignment\n        let a, b, c, cut, invalid_assignment, literal, mark, tc;\n        mark = this.mark();\n        if ((a = this.name()) && (literal = this.expect(\":\")) && (b = this.expression()) && (c = this._tmp_19() || 1)) {\n            return CHECK_VERSION(6, \"Variable annotation syntax is\", new astnodes.AnnAssign(pegen.set_expr_context(a, new astnodes.Store()), b, c, 1, ...EXTRA));\n        }\n        this.reset(mark);\n        if ((a = this._tmp_20()) && (literal = this.expect(\":\")) && (b = this.expression()) && (c = this._tmp_21() || 1)) {\n            return CHECK_VERSION(6, \"Variable annotations syntax is\", new astnodes.AnnAssign(a, b, c, 0, ...EXTRA));\n        }\n        this.reset(mark);\n        if ((a = this._loop1_22()) && (b = this._tmp_23()) && this.negative_lookahead(this.expect, \"=\") && (tc = this.expect(\"TYPE_COMMENT\") || 1)) {\n            return new astnodes.Assign(a, b, NEW_TYPE_COMMENT(tc), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.single_target()) && (b = this.augassign()) && (cut = true) && (c = this._tmp_24())) {\n            return new astnodes.AugAssign(a, b.kind, c, ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_assignment = this.invalid_assignment())) {\n            return invalid_assignment;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    augassign() {\n        //# augassign: '+=' | '-=' | '*=' | '@=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>>=' | '**=' | '//='\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"+=\"))) {\n            return new astnodes.Add();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"-=\"))) {\n            return new astnodes.Sub();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*=\"))) {\n            return new astnodes.Mult();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"@=\"))) {\n            return CHECK_VERSION(new astnodes.AugOperator(), 5, \"The '@' operator is\", new astnodes.MatMult());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"/=\"))) {\n            return new astnodes.Div();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"%=\"))) {\n            return new astnodes.Mod();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"&=\"))) {\n            return new astnodes.BitAnd();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"|=\"))) {\n            return new astnodes.BitOr();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"^=\"))) {\n            return new astnodes.BitXor();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"<<=\"))) {\n            return new astnodes.LShift();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\">>=\"))) {\n            return new astnodes.RShift();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"**=\"))) {\n            return new astnodes.Pow();\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"//=\"))) {\n            return new astnodes.FloorDiv();\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    global_stmt() {\n        //# global_stmt: 'global' ','.NAME+\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"global\")) && (a = this._gather_25())) {\n            return new astnodes.Global(pegen.map_names_to_ids(a), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    nonlocal_stmt() {\n        //# nonlocal_stmt: 'nonlocal' ','.NAME+\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"nonlocal\")) && (a = this._gather_27())) {\n            return new astnodes.Nonlocal(pegen.map_names_to_ids(a), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    yield_stmt() {\n        //# yield_stmt: yield_expr\n        let mark, y;\n        mark = this.mark();\n        if ((y = this.yield_expr())) {\n            return new astnodes.Expr(y, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    assert_stmt() {\n        //# assert_stmt: 'assert' expression [',' expression]\n        let a, b, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"assert\")) && (a = this.expression()) && (b = this._tmp_29() || 1)) {\n            return new astnodes.Assert(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    del_stmt() {\n        //# del_stmt: 'del' del_targets &(';' | NEWLINE) | invalid_del_stmt\n        let a, invalid_del_stmt, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"del\")) && (a = this.del_targets()) && this.positive_lookahead(this._tmp_30)) {\n            return new astnodes.Delete(a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((invalid_del_stmt = this.invalid_del_stmt())) {\n            return invalid_del_stmt;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_stmt() {\n        //# import_stmt: import_name | import_from\n        let import_from, import_name, mark;\n        mark = this.mark();\n        if ((import_name = this.import_name())) {\n            return import_name;\n        }\n        this.reset(mark);\n        if ((import_from = this.import_from())) {\n            return import_from;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_name() {\n        //# import_name: 'import' dotted_as_names\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"import\")) && (a = this.dotted_as_names())) {\n            return new astnodes.Import(a, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_from() {\n        //# import_from: 'from' (('.' | '...'))* dotted_name 'import' import_from_targets | 'from' (('.' | '...'))+ 'import' import_from_targets\n        let a, b, c, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"from\")) && (a = this._loop0_31()) && (b = this.dotted_name()) && (literal_1 = this.expect(\"import\")) && (c = this.import_from_targets())) {\n            return new astnodes.ImportFrom(b.id, c, pegen.seq_count_dots(a), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"from\")) && (a = this._loop1_32()) && (literal_1 = this.expect(\"import\")) && (b = this.import_from_targets())) {\n            return new astnodes.ImportFrom(null, b, pegen.seq_count_dots(a), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_from_targets() {\n        //# import_from_targets: '(' import_from_as_names ','? ')' | import_from_as_names !',' | '*' | invalid_import_from_targets\n        let a, import_from_as_names, invalid_import_from_targets, literal, literal_1, mark, opt;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (a = this.import_from_as_names()) && (opt = this.expect(\",\") || 1) && (literal_1 = this.expect(\")\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((import_from_as_names = this.import_from_as_names()) && this.negative_lookahead(this.expect, \",\")) {\n            return import_from_as_names;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\"))) {\n            return pegen.singleton_seq((alias_ty, pegen.alias_for_star(p)));\n        }\n        this.reset(mark);\n        if ((invalid_import_from_targets = this.invalid_import_from_targets())) {\n            return invalid_import_from_targets;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_from_as_names() {\n        //# import_from_as_names: ','.import_from_as_name+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._gather_33())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    import_from_as_name() {\n        //# import_from_as_name: NAME ['as' NAME]\n        let a, b, mark;\n        mark = this.mark();\n        if ((a = this.name()) && (b = this._tmp_35() || 1)) {\n            return new astnodes.alias(a.id, b.id);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    dotted_as_names() {\n        //# dotted_as_names: ','.dotted_as_name+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._gather_36())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    dotted_as_name() {\n        //# dotted_as_name: dotted_name ['as' NAME]\n        let a, b, mark;\n        mark = this.mark();\n        if ((a = this.dotted_name()) && (b = this._tmp_38() || 1)) {\n            return new astnodes.alias(a.id, b.id);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    dotted_name() {\n        //# dotted_name: dotted_name '.' NAME | NAME\n        let a, b, literal, mark, name;\n        mark = this.mark();\n        if ((a = this.dotted_name()) && (literal = this.expect(\".\")) && (b = this.name())) {\n            return pegen.join_names_with_dot(a, b);\n        }\n        this.reset(mark);\n        if ((name = this.name())) {\n            return name;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    if_stmt() {\n        //# if_stmt: 'if' named_expression ':' block elif_stmt | 'if' named_expression ':' block else_block?\n        let a, b, c, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"if\")) && (a = this.named_expression()) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (c = this.elif_stmt())) {\n            return new astnodes.If(a, b, pegen.singleton_seq(c), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"if\")) && (a = this.named_expression()) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (c = this.else_block() || 1)) {\n            return new astnodes.If(a, b, c, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    elif_stmt() {\n        //# elif_stmt: 'elif' named_expression ':' block elif_stmt | 'elif' named_expression ':' block else_block?\n        let a, b, c, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"elif\")) && (a = this.named_expression()) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (c = this.elif_stmt())) {\n            return new astnodes.If(a, b, pegen.singleton_seq(c), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"elif\")) && (a = this.named_expression()) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (c = this.else_block() || 1)) {\n            return new astnodes.If(a, b, c, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    else_block() {\n        //# else_block: 'else' ':' block\n        let b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"else\")) && (literal_1 = this.expect(\":\")) && (b = this.block())) {\n            return b;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    while_stmt() {\n        //# while_stmt: 'while' named_expression ':' block else_block?\n        let a, b, c, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"while\")) && (a = this.named_expression()) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (c = this.else_block() || 1)) {\n            return new astnodes.While(a, b, c, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    for_stmt() {\n        //# for_stmt: 'for' star_targets 'in' ~ star_expressions ':' TYPE_COMMENT? block else_block? | ASYNC 'for' star_targets 'in' ~ star_expressions ':' TYPE_COMMENT? block else_block? | invalid_for_target\n        let async, b, cut, el, ex, invalid_for_target, literal, literal_1, literal_2, mark, t, tc;\n        mark = this.mark();\n        if (\n            (literal = this.expect(\"for\")) &&\n            (t = this.star_targets()) &&\n            (literal_1 = this.expect(\"in\")) &&\n            (cut = true) &&\n            (ex = this.star_expressions()) &&\n            (literal_2 = this.expect(\":\")) &&\n            (tc = this.expect(\"TYPE_COMMENT\") || 1) &&\n            (b = this.block()) &&\n            (el = this.else_block() || 1)\n        ) {\n            return new astnodes.For(t, ex, b, el, NEW_TYPE_COMMENT(tc), ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if (\n            (async = this.expect(\"ASYNC\")) &&\n            (literal = this.expect(\"for\")) &&\n            (t = this.star_targets()) &&\n            (literal_1 = this.expect(\"in\")) &&\n            (cut = true) &&\n            (ex = this.star_expressions()) &&\n            (literal_2 = this.expect(\":\")) &&\n            (tc = this.expect(\"TYPE_COMMENT\") || 1) &&\n            (b = this.block()) &&\n            (el = this.else_block() || 1)\n        ) {\n            return CHECK_VERSION(5, \"Async for loops are\", new astnodes.AsyncFor(t, ex, b, el, NEW_TYPE_COMMENT(tc), ...EXTRA));\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_for_target = this.invalid_for_target())) {\n            return invalid_for_target;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    with_stmt() {\n        //# with_stmt: 'with' '(' ','.with_item+ ','? ')' ':' block | 'with' ','.with_item+ ':' TYPE_COMMENT? block | ASYNC 'with' '(' ','.with_item+ ','? ')' ':' block | ASYNC 'with' ','.with_item+ ':' TYPE_COMMENT? block\n        let a, async, b, literal, literal_1, literal_2, literal_3, mark, opt, tc;\n        mark = this.mark();\n        if (\n            (literal = this.expect(\"with\")) &&\n            (literal_1 = this.expect(\"(\")) &&\n            (a = this._gather_39()) &&\n            (opt = this.expect(\",\") || 1) &&\n            (literal_2 = this.expect(\")\")) &&\n            (literal_3 = this.expect(\":\")) &&\n            (b = this.block())\n        ) {\n            return new astnodes.With(a, b, null, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"with\")) && (a = this._gather_41()) && (literal_1 = this.expect(\":\")) && (tc = this.expect(\"TYPE_COMMENT\") || 1) && (b = this.block())) {\n            return new astnodes.With(a, b, NEW_TYPE_COMMENT(tc), ...EXTRA);\n        }\n        this.reset(mark);\n        if (\n            (async = this.expect(\"ASYNC\")) &&\n            (literal = this.expect(\"with\")) &&\n            (literal_1 = this.expect(\"(\")) &&\n            (a = this._gather_43()) &&\n            (opt = this.expect(\",\") || 1) &&\n            (literal_2 = this.expect(\")\")) &&\n            (literal_3 = this.expect(\":\")) &&\n            (b = this.block())\n        ) {\n            return CHECK_VERSION(5, \"Async with statements are\", new astnodes.AsyncWith(a, b, null, ...EXTRA));\n        }\n        this.reset(mark);\n        if (\n            (async = this.expect(\"ASYNC\")) &&\n            (literal = this.expect(\"with\")) &&\n            (a = this._gather_45()) &&\n            (literal_1 = this.expect(\":\")) &&\n            (tc = this.expect(\"TYPE_COMMENT\") || 1) &&\n            (b = this.block())\n        ) {\n            return CHECK_VERSION(5, \"Async with statements are\", new astnodes.AsyncWith(a, b, NEW_TYPE_COMMENT(tc), ...EXTRA));\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    with_item() {\n        //# with_item: expression 'as' star_target &(',' | ')' | ':') | invalid_with_item | expression\n        let e, invalid_with_item, literal, mark, t;\n        mark = this.mark();\n        if ((e = this.expression()) && (literal = this.expect(\"as\")) && (t = this.star_target()) && this.positive_lookahead(this._tmp_47)) {\n            return new astnodes.withitem(e, t);\n        }\n        this.reset(mark);\n        if ((invalid_with_item = this.invalid_with_item())) {\n            return invalid_with_item;\n        }\n        this.reset(mark);\n        if ((e = this.expression())) {\n            return new astnodes.withitem(e, null);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    try_stmt() {\n        //# try_stmt: 'try' ':' block finally_block | 'try' ':' block except_block+ else_block? finally_block?\n        let b, el, ex, f, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"try\")) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (f = this.finally_block())) {\n            return new astnodes.Try(b, null, null, f, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"try\")) && (literal_1 = this.expect(\":\")) && (b = this.block()) && (ex = this._loop1_48()) && (el = this.else_block() || 1) && (f = this.finally_block() || 1)) {\n            return new astnodes.Try(b, ex, el, f, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    except_block() {\n        //# except_block: 'except' expression ['as' NAME] ':' block | 'except' ':' block\n        let b, e, literal, literal_1, mark, t;\n        mark = this.mark();\n        if ((literal = this.expect(\"except\")) && (e = this.expression()) && (t = this._tmp_49() || 1) && (literal_1 = this.expect(\":\")) && (b = this.block())) {\n            return new astnodes.ExceptHandler(e, t.id, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"except\")) && (literal_1 = this.expect(\":\")) && (b = this.block())) {\n            return new astnodes.ExceptHandler(null, null, b, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    finally_block() {\n        //# finally_block: 'finally' ':' block\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"finally\")) && (literal_1 = this.expect(\":\")) && (a = this.block())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    return_stmt() {\n        //# return_stmt: 'return' star_expressions?\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"return\")) && (a = this.star_expressions() || 1)) {\n            return new astnodes.Return(a, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    raise_stmt() {\n        //# raise_stmt: 'raise' expression ['from' expression] | 'raise'\n        let a, b, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"raise\")) && (a = this.expression()) && (b = this._tmp_50() || 1)) {\n            return new astnodes.Raise(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"raise\"))) {\n            return new astnodes.Raise(null, null, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    function_def() {\n        //# function_def: decorators function_def_raw | function_def_raw\n        let d, f, function_def_raw, mark;\n        mark = this.mark();\n        if ((d = this.decorators()) && (f = this.function_def_raw())) {\n            return pegen.function_def_decorators(d, f);\n        }\n        this.reset(mark);\n        if ((function_def_raw = this.function_def_raw())) {\n            return function_def_raw;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    function_def_raw() {\n        //# function_def_raw: 'def' NAME '(' params? ')' ['->' expression] ':' func_type_comment? block | ASYNC 'def' NAME '(' params? ')' ['->' expression] ':' func_type_comment? block\n        let a, async, b, literal, literal_1, literal_2, literal_3, mark, n, params, tc;\n        mark = this.mark();\n        if (\n            (literal = this.expect(\"def\")) &&\n            (n = this.name()) &&\n            (literal_1 = this.expect(\"(\")) &&\n            (params = this.params() || 1) &&\n            (literal_2 = this.expect(\")\")) &&\n            (a = this._tmp_51() || 1) &&\n            (literal_3 = this.expect(\":\")) &&\n            (tc = this.func_type_comment() || 1) &&\n            (b = this.block())\n        ) {\n            return new astnodes.FunctionDef(n.id, params ? params : (arguments_ty, pegen.empty_arguments(p)), b, null, a, NEW_TYPE_COMMENT(tc), ...EXTRA);\n        }\n        this.reset(mark);\n        if (\n            (async = this.expect(\"ASYNC\")) &&\n            (literal = this.expect(\"def\")) &&\n            (n = this.name()) &&\n            (literal_1 = this.expect(\"(\")) &&\n            (params = this.params() || 1) &&\n            (literal_2 = this.expect(\")\")) &&\n            (a = this._tmp_52() || 1) &&\n            (literal_3 = this.expect(\":\")) &&\n            (tc = this.func_type_comment() || 1) &&\n            (b = this.block())\n        ) {\n            return CHECK_VERSION(5, \"Async functions are\", new astnodes.AsyncFunctionDef(n.id, params ? params : (arguments_ty, pegen.empty_arguments(p)), b, null, a, NEW_TYPE_COMMENT(tc), ...EXTRA));\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    func_type_comment() {\n        //# func_type_comment: NEWLINE TYPE_COMMENT &(NEWLINE INDENT) | invalid_double_type_comments | TYPE_COMMENT\n        let invalid_double_type_comments, mark, newline, t, type_comment;\n        mark = this.mark();\n        if ((newline = this.expect(\"NEWLINE\")) && (t = this.expect(\"TYPE_COMMENT\")) && this.positive_lookahead(this._tmp_53)) {\n            return t;\n        }\n        this.reset(mark);\n        if ((invalid_double_type_comments = this.invalid_double_type_comments())) {\n            return invalid_double_type_comments;\n        }\n        this.reset(mark);\n        if ((type_comment = this.expect(\"TYPE_COMMENT\"))) {\n            return type_comment;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    params() {\n        //# params: invalid_parameters | parameters\n        let invalid_parameters, mark, parameters;\n        mark = this.mark();\n        if ((invalid_parameters = this.invalid_parameters())) {\n            return invalid_parameters;\n        }\n        this.reset(mark);\n        if ((parameters = this.parameters())) {\n            return parameters;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    parameters() {\n        //# parameters: slash_no_default param_no_default* param_with_default* star_etc? | slash_with_default param_with_default* star_etc? | param_no_default+ param_with_default* star_etc? | param_with_default+ star_etc? | star_etc\n        let a, b, c, d, mark;\n        mark = this.mark();\n        if ((a = this.slash_no_default()) && (b = this._loop0_54()) && (c = this._loop0_55()) && (d = this.star_etc() || 1)) {\n            return pegen.make_arguments(a, null, b, c, d);\n        }\n        this.reset(mark);\n        if ((a = this.slash_with_default()) && (b = this._loop0_56()) && (c = this.star_etc() || 1)) {\n            return pegen.make_arguments(null, a, null, b, c);\n        }\n        this.reset(mark);\n        if ((a = this._loop1_57()) && (b = this._loop0_58()) && (c = this.star_etc() || 1)) {\n            return pegen.make_arguments(null, null, a, b, c);\n        }\n        this.reset(mark);\n        if ((a = this._loop1_59()) && (b = this.star_etc() || 1)) {\n            return pegen.make_arguments(null, null, null, a, b);\n        }\n        this.reset(mark);\n        if ((a = this.star_etc())) {\n            return pegen.make_arguments(null, null, null, null, a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    slash_no_default() {\n        //# slash_no_default: param_no_default+ '/' ',' | param_no_default+ '/' &')'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this._loop1_60()) && (literal = this.expect(\"/\")) && (literal_1 = this.expect(\",\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((a = this._loop1_61()) && (literal = this.expect(\"/\")) && this.positive_lookahead(this.expect, \")\")) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    slash_with_default() {\n        //# slash_with_default: param_no_default* param_with_default+ '/' ',' | param_no_default* param_with_default+ '/' &')'\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this._loop0_62()) && (b = this._loop1_63()) && (literal = this.expect(\"/\")) && (literal_1 = this.expect(\",\"))) {\n            return pegen.slash_with_default(a, b);\n        }\n        this.reset(mark);\n        if ((a = this._loop0_64()) && (b = this._loop1_65()) && (literal = this.expect(\"/\")) && this.positive_lookahead(this.expect, \")\")) {\n            return pegen.slash_with_default(a, b);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_etc() {\n        //# star_etc: '*' param_no_default param_maybe_default* kwds? | '*' ',' param_maybe_default+ kwds? | kwds | invalid_star_etc\n        let a, b, c, invalid_star_etc, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this.param_no_default()) && (b = this._loop0_66()) && (c = this.kwds() || 1)) {\n            return pegen.star_etc(a, b, c);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\")) && (literal_1 = this.expect(\",\")) && (b = this._loop1_67()) && (c = this.kwds() || 1)) {\n            return pegen.star_etc(null, b, c);\n        }\n        this.reset(mark);\n        if ((a = this.kwds())) {\n            return pegen.star_etc(null, null, a);\n        }\n        this.reset(mark);\n        if ((invalid_star_etc = this.invalid_star_etc())) {\n            return invalid_star_etc;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    kwds() {\n        //# kwds: '**' param_no_default\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"**\")) && (a = this.param_no_default())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    param_no_default() {\n        //# param_no_default: param ',' TYPE_COMMENT? | param TYPE_COMMENT? &')'\n        let a, literal, mark, tc;\n        mark = this.mark();\n        if ((a = this.param()) && (literal = this.expect(\",\")) && (tc = this.expect(\"TYPE_COMMENT\") || 1)) {\n            return pegen.add_type_comment_to_arg(a, tc);\n        }\n        this.reset(mark);\n        if ((a = this.param()) && (tc = this.expect(\"TYPE_COMMENT\") || 1) && this.positive_lookahead(this.expect, \")\")) {\n            return pegen.add_type_comment_to_arg(a, tc);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    param_with_default() {\n        //# param_with_default: param default ',' TYPE_COMMENT? | param default TYPE_COMMENT? &')'\n        let a, c, literal, mark, tc;\n        mark = this.mark();\n        if ((a = this.param()) && (c = this.default()) && (literal = this.expect(\",\")) && (tc = this.expect(\"TYPE_COMMENT\") || 1)) {\n            return pegen.name_default_pair(a, c, tc);\n        }\n        this.reset(mark);\n        if ((a = this.param()) && (c = this.default()) && (tc = this.expect(\"TYPE_COMMENT\") || 1) && this.positive_lookahead(this.expect, \")\")) {\n            return pegen.name_default_pair(a, c, tc);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    param_maybe_default() {\n        //# param_maybe_default: param default? ',' TYPE_COMMENT? | param default? TYPE_COMMENT? &')'\n        let a, c, literal, mark, tc;\n        mark = this.mark();\n        if ((a = this.param()) && (c = this.default() || 1) && (literal = this.expect(\",\")) && (tc = this.expect(\"TYPE_COMMENT\") || 1)) {\n            return pegen.name_default_pair(a, c, tc);\n        }\n        this.reset(mark);\n        if ((a = this.param()) && (c = this.default() || 1) && (tc = this.expect(\"TYPE_COMMENT\") || 1) && this.positive_lookahead(this.expect, \")\")) {\n            return pegen.name_default_pair(a, c, tc);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    param() {\n        //# param: NAME annotation?\n        let a, b, mark;\n        mark = this.mark();\n        if ((a = this.name()) && (b = this.annotation() || 1)) {\n            return new astnodes.arg(a.id, b, null, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    annotation() {\n        //# annotation: ':' expression\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\":\")) && (a = this.expression())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    default() {\n        //# default: '=' expression\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"=\")) && (a = this.expression())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    decorators() {\n        //# decorators: (('@' named_expression NEWLINE))+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._loop1_68())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    class_def() {\n        //# class_def: decorators class_def_raw | class_def_raw\n        let a, b, class_def_raw, mark;\n        mark = this.mark();\n        if ((a = this.decorators()) && (b = this.class_def_raw())) {\n            return pegen.class_def_decorators(a, b);\n        }\n        this.reset(mark);\n        if ((class_def_raw = this.class_def_raw())) {\n            return class_def_raw;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    class_def_raw() {\n        //# class_def_raw: 'class' NAME ['(' arguments? ')'] ':' block\n        let a, b, c, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"class\")) && (a = this.name()) && (b = this._tmp_69() || 1) && (literal_1 = this.expect(\":\")) && (c = this.block())) {\n            return new astnodes.ClassDef(a.id, b.args, b.keywords, c, null, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    block() {\n        //# block: NEWLINE INDENT statements DEDENT | simple_stmts | invalid_block\n        let a, dedent, indent, invalid_block, mark, newline, simple_stmts;\n        mark = this.mark();\n        if ((newline = this.expect(\"NEWLINE\")) && (indent = this.expect(\"INDENT\")) && (a = this.statements()) && (dedent = this.expect(\"DEDENT\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((simple_stmts = this.simple_stmts())) {\n            return simple_stmts;\n        }\n        this.reset(mark);\n        if ((invalid_block = this.invalid_block())) {\n            return invalid_block;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_expressions() {\n        //# star_expressions: star_expression ((',' star_expression))+ ','? | star_expression ',' | star_expression\n        let a, b, literal, mark, opt, star_expression;\n        mark = this.mark();\n        if ((a = this.star_expression()) && (b = this._loop1_70()) && (opt = this.expect(\",\") || 1)) {\n            return new astnodes.Tuple(pegen.seq_insert_in_front(a, b), new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.star_expression()) && (literal = this.expect(\",\"))) {\n            return new astnodes.Tuple(pegen.singleton_seq(a), new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((star_expression = this.star_expression())) {\n            return star_expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_expression() {\n        //# star_expression: '*' bitwise_or | expression\n        let a, expression, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this.bitwise_or())) {\n            return new astnodes.Starred(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((expression = this.expression())) {\n            return expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_named_expressions() {\n        //# star_named_expressions: ','.star_named_expression+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this._gather_71()) && (opt = this.expect(\",\") || 1)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_named_expression() {\n        //# star_named_expression: '*' bitwise_or | named_expression\n        let a, literal, mark, named_expression;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this.bitwise_or())) {\n            return new astnodes.Starred(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((named_expression = this.named_expression())) {\n            return named_expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    named_expression() {\n        //# named_expression: NAME ':=' ~ expression | expression !':=' | invalid_named_expression\n        let a, b, cut, expression, invalid_named_expression, literal, mark;\n        mark = this.mark();\n        if ((a = this.name()) && (literal = this.expect(\":=\")) && (cut = true) && (b = this.expression())) {\n            return new astnodes.NamedExpr(pegen.set_expr_context(a, new astnodes.Store()), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((expression = this.expression()) && this.negative_lookahead(this.expect, \":=\")) {\n            return expression;\n        }\n        this.reset(mark);\n        if ((invalid_named_expression = this.invalid_named_expression())) {\n            return invalid_named_expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    annotated_rhs() {\n        //# annotated_rhs: yield_expr | star_expressions\n        let mark, star_expressions, yield_expr;\n        mark = this.mark();\n        if ((yield_expr = this.yield_expr())) {\n            return yield_expr;\n        }\n        this.reset(mark);\n        if ((star_expressions = this.star_expressions())) {\n            return star_expressions;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    expressions() {\n        //# expressions: expression ((',' expression))+ ','? | expression ',' | expression\n        let a, b, expression, literal, mark, opt;\n        mark = this.mark();\n        if ((a = this.expression()) && (b = this._loop1_73()) && (opt = this.expect(\",\") || 1)) {\n            return new astnodes.Tuple(pegen.seq_insert_in_front(a, b), new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.expression()) && (literal = this.expect(\",\"))) {\n            return new astnodes.Tuple(pegen.singleton_seq(a), new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((expression = this.expression())) {\n            return expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    expression() {\n        //# expression: disjunction 'if' disjunction 'else' expression | disjunction | lambdef\n        let a, b, c, disjunction, lambdef, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.disjunction()) && (literal = this.expect(\"if\")) && (b = this.disjunction()) && (literal_1 = this.expect(\"else\")) && (c = this.expression())) {\n            return new astnodes.IfExp(b, a, c, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((disjunction = this.disjunction())) {\n            return disjunction;\n        }\n        this.reset(mark);\n        if ((lambdef = this.lambdef())) {\n            return lambdef;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambdef() {\n        //# lambdef: 'lambda' lambda_params? ':' expression\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"lambda\")) && (a = this.lambda_params() || 1) && (literal_1 = this.expect(\":\")) && (b = this.expression())) {\n            return new astnodes.Lambda(a ? a : (arguments_ty, pegen.empty_arguments(p)), b, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_params() {\n        //# lambda_params: invalid_lambda_parameters | lambda_parameters\n        let invalid_lambda_parameters, lambda_parameters, mark;\n        mark = this.mark();\n        if ((invalid_lambda_parameters = this.invalid_lambda_parameters())) {\n            return invalid_lambda_parameters;\n        }\n        this.reset(mark);\n        if ((lambda_parameters = this.lambda_parameters())) {\n            return lambda_parameters;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_parameters() {\n        //# lambda_parameters: lambda_slash_no_default lambda_param_no_default* lambda_param_with_default* lambda_star_etc? | lambda_slash_with_default lambda_param_with_default* lambda_star_etc? | lambda_param_no_default+ lambda_param_with_default* lambda_star_etc? | lambda_param_with_default+ lambda_star_etc? | lambda_star_etc\n        let a, b, c, d, mark;\n        mark = this.mark();\n        if ((a = this.lambda_slash_no_default()) && (b = this._loop0_74()) && (c = this._loop0_75()) && (d = this.lambda_star_etc() || 1)) {\n            return pegen.make_arguments(a, null, b, c, d);\n        }\n        this.reset(mark);\n        if ((a = this.lambda_slash_with_default()) && (b = this._loop0_76()) && (c = this.lambda_star_etc() || 1)) {\n            return pegen.make_arguments(null, a, null, b, c);\n        }\n        this.reset(mark);\n        if ((a = this._loop1_77()) && (b = this._loop0_78()) && (c = this.lambda_star_etc() || 1)) {\n            return pegen.make_arguments(null, null, a, b, c);\n        }\n        this.reset(mark);\n        if ((a = this._loop1_79()) && (b = this.lambda_star_etc() || 1)) {\n            return pegen.make_arguments(null, null, null, a, b);\n        }\n        this.reset(mark);\n        if ((a = this.lambda_star_etc())) {\n            return pegen.make_arguments(null, null, null, null, a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_slash_no_default() {\n        //# lambda_slash_no_default: lambda_param_no_default+ '/' ',' | lambda_param_no_default+ '/' &':'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this._loop1_80()) && (literal = this.expect(\"/\")) && (literal_1 = this.expect(\",\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((a = this._loop1_81()) && (literal = this.expect(\"/\")) && this.positive_lookahead(this.expect, \":\")) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_slash_with_default() {\n        //# lambda_slash_with_default: lambda_param_no_default* lambda_param_with_default+ '/' ',' | lambda_param_no_default* lambda_param_with_default+ '/' &':'\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this._loop0_82()) && (b = this._loop1_83()) && (literal = this.expect(\"/\")) && (literal_1 = this.expect(\",\"))) {\n            return pegen.slash_with_default(a, b);\n        }\n        this.reset(mark);\n        if ((a = this._loop0_84()) && (b = this._loop1_85()) && (literal = this.expect(\"/\")) && this.positive_lookahead(this.expect, \":\")) {\n            return pegen.slash_with_default(a, b);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_star_etc() {\n        //# lambda_star_etc: '*' lambda_param_no_default lambda_param_maybe_default* lambda_kwds? | '*' ',' lambda_param_maybe_default+ lambda_kwds? | lambda_kwds | invalid_lambda_star_etc\n        let a, b, c, invalid_lambda_star_etc, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this.lambda_param_no_default()) && (b = this._loop0_86()) && (c = this.lambda_kwds() || 1)) {\n            return pegen.star_etc(a, b, c);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\")) && (literal_1 = this.expect(\",\")) && (b = this._loop1_87()) && (c = this.lambda_kwds() || 1)) {\n            return pegen.star_etc(null, b, c);\n        }\n        this.reset(mark);\n        if ((a = this.lambda_kwds())) {\n            return pegen.star_etc(null, null, a);\n        }\n        this.reset(mark);\n        if ((invalid_lambda_star_etc = this.invalid_lambda_star_etc())) {\n            return invalid_lambda_star_etc;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_kwds() {\n        //# lambda_kwds: '**' lambda_param_no_default\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"**\")) && (a = this.lambda_param_no_default())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_param_no_default() {\n        //# lambda_param_no_default: lambda_param ',' | lambda_param &':'\n        let a, literal, mark;\n        mark = this.mark();\n        if ((a = this.lambda_param()) && (literal = this.expect(\",\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((a = this.lambda_param()) && this.positive_lookahead(this.expect, \":\")) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_param_with_default() {\n        //# lambda_param_with_default: lambda_param default ',' | lambda_param default &':'\n        let a, c, literal, mark;\n        mark = this.mark();\n        if ((a = this.lambda_param()) && (c = this.default()) && (literal = this.expect(\",\"))) {\n            return pegen.name_default_pair(a, c, null);\n        }\n        this.reset(mark);\n        if ((a = this.lambda_param()) && (c = this.default()) && this.positive_lookahead(this.expect, \":\")) {\n            return pegen.name_default_pair(a, c, null);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_param_maybe_default() {\n        //# lambda_param_maybe_default: lambda_param default? ',' | lambda_param default? &':'\n        let a, c, literal, mark;\n        mark = this.mark();\n        if ((a = this.lambda_param()) && (c = this.default() || 1) && (literal = this.expect(\",\"))) {\n            return pegen.name_default_pair(a, c, null);\n        }\n        this.reset(mark);\n        debugger;\n        if ((a = this.lambda_param()) && (c = this.default() || 1) && this.positive_lookahead(this.expect, \":\")) {\n            return pegen.name_default_pair(a, c, null);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lambda_param() {\n        //# lambda_param: NAME\n        let a, mark;\n        mark = this.mark();\n        if ((a = this.name())) {\n            return new astnodes.arg(a.id, null, null, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    disjunction() {\n        //# disjunction: conjunction (('or' conjunction))+ | conjunction\n        let a, b, conjunction, mark;\n        mark = this.mark();\n        if ((a = this.conjunction()) && (b = this._loop1_88())) {\n            return new astnodes.BoolOp(new astnodes.Or(), pegen.seq_insert_in_front(a, b), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((conjunction = this.conjunction())) {\n            return conjunction;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    conjunction() {\n        //# conjunction: inversion (('and' inversion))+ | inversion\n        let a, b, inversion, mark;\n        mark = this.mark();\n        if ((a = this.inversion()) && (b = this._loop1_89())) {\n            return new astnodes.BoolOp(new astnodes.And(), pegen.seq_insert_in_front(a, b), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((inversion = this.inversion())) {\n            return inversion;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    inversion() {\n        //# inversion: 'not' inversion | comparison\n        let a, comparison, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"not\")) && (a = this.inversion())) {\n            return new astnodes.UnaryOp(new astnodes.Not(), a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((comparison = this.comparison())) {\n            return comparison;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    comparison() {\n        //# comparison: bitwise_or compare_op_bitwise_or_pair+ | bitwise_or\n        let a, b, bitwise_or, mark;\n        mark = this.mark();\n        if ((a = this.bitwise_or()) && (b = this._loop1_90())) {\n            return new astnodes.Compare(a, pegen.get_cmpops(b), pegen.get_exprs(b), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((bitwise_or = this.bitwise_or())) {\n            return bitwise_or;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    compare_op_bitwise_or_pair() {\n        //# compare_op_bitwise_or_pair: eq_bitwise_or | noteq_bitwise_or | lte_bitwise_or | lt_bitwise_or | gte_bitwise_or | gt_bitwise_or | notin_bitwise_or | in_bitwise_or | isnot_bitwise_or | is_bitwise_or\n        let eq_bitwise_or, gt_bitwise_or, gte_bitwise_or, in_bitwise_or, is_bitwise_or, isnot_bitwise_or, lt_bitwise_or, lte_bitwise_or, mark, noteq_bitwise_or, notin_bitwise_or;\n        mark = this.mark();\n        if ((eq_bitwise_or = this.eq_bitwise_or())) {\n            return eq_bitwise_or;\n        }\n        this.reset(mark);\n        if ((noteq_bitwise_or = this.noteq_bitwise_or())) {\n            return noteq_bitwise_or;\n        }\n        this.reset(mark);\n        if ((lte_bitwise_or = this.lte_bitwise_or())) {\n            return lte_bitwise_or;\n        }\n        this.reset(mark);\n        if ((lt_bitwise_or = this.lt_bitwise_or())) {\n            return lt_bitwise_or;\n        }\n        this.reset(mark);\n        if ((gte_bitwise_or = this.gte_bitwise_or())) {\n            return gte_bitwise_or;\n        }\n        this.reset(mark);\n        if ((gt_bitwise_or = this.gt_bitwise_or())) {\n            return gt_bitwise_or;\n        }\n        this.reset(mark);\n        if ((notin_bitwise_or = this.notin_bitwise_or())) {\n            return notin_bitwise_or;\n        }\n        this.reset(mark);\n        if ((in_bitwise_or = this.in_bitwise_or())) {\n            return in_bitwise_or;\n        }\n        this.reset(mark);\n        if ((isnot_bitwise_or = this.isnot_bitwise_or())) {\n            return isnot_bitwise_or;\n        }\n        this.reset(mark);\n        if ((is_bitwise_or = this.is_bitwise_or())) {\n            return is_bitwise_or;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    eq_bitwise_or() {\n        //# eq_bitwise_or: '==' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"==\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.Eq(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    noteq_bitwise_or() {\n        //# noteq_bitwise_or: ('!=') bitwise_or\n        let a, mark, tok;\n        mark = this.mark();\n        if ((tok = this.expect(\"!=\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.NotEq(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lte_bitwise_or() {\n        //# lte_bitwise_or: '<=' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"<=\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.LtE(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    lt_bitwise_or() {\n        //# lt_bitwise_or: '<' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"<\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.Lt(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    gte_bitwise_or() {\n        //# gte_bitwise_or: '>=' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\">=\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.GtE(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    gt_bitwise_or() {\n        //# gt_bitwise_or: '>' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\">\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.Gt(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    notin_bitwise_or() {\n        //# notin_bitwise_or: 'not' 'in' bitwise_or\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"not\")) && (literal_1 = this.expect(\"in\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.NotIn(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    in_bitwise_or() {\n        //# in_bitwise_or: 'in' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"in\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.In(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    isnot_bitwise_or() {\n        //# isnot_bitwise_or: 'is' 'not' bitwise_or\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"is\")) && (literal_1 = this.expect(\"not\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.IsNot(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    is_bitwise_or() {\n        //# is_bitwise_or: 'is' bitwise_or\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"is\")) && (a = this.bitwise_or())) {\n            return pegen.cmpop_expr_pair(new astnodes.Is(), a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    bitwise_or() {\n        //# bitwise_or: bitwise_or '|' bitwise_xor | bitwise_xor\n        let a, b, bitwise_xor, literal, mark;\n        mark = this.mark();\n        if ((a = this.bitwise_or()) && (literal = this.expect(\"|\")) && (b = this.bitwise_xor())) {\n            return new astnodes.BinOp(a, new astnodes.BitOr(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((bitwise_xor = this.bitwise_xor())) {\n            return bitwise_xor;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    bitwise_xor() {\n        //# bitwise_xor: bitwise_xor '^' bitwise_and | bitwise_and\n        let a, b, bitwise_and, literal, mark;\n        mark = this.mark();\n        if ((a = this.bitwise_xor()) && (literal = this.expect(\"^\")) && (b = this.bitwise_and())) {\n            return new astnodes.BinOp(a, new astnodes.BitXor(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((bitwise_and = this.bitwise_and())) {\n            return bitwise_and;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    bitwise_and() {\n        //# bitwise_and: bitwise_and '&' shift_expr | shift_expr\n        let a, b, literal, mark, shift_expr;\n        mark = this.mark();\n        if ((a = this.bitwise_and()) && (literal = this.expect(\"&\")) && (b = this.shift_expr())) {\n            return new astnodes.BinOp(a, new astnodes.BitAnd(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((shift_expr = this.shift_expr())) {\n            return shift_expr;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    shift_expr() {\n        //# shift_expr: shift_expr '<<' sum | shift_expr '>>' sum | sum\n        let a, b, literal, mark, sum;\n        mark = this.mark();\n        if ((a = this.shift_expr()) && (literal = this.expect(\"<<\")) && (b = this.sum())) {\n            return new astnodes.BinOp(a, new astnodes.LShift(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.shift_expr()) && (literal = this.expect(\">>\")) && (b = this.sum())) {\n            return new astnodes.BinOp(a, new astnodes.RShift(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((sum = this.sum())) {\n            return sum;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    sum() {\n        //# sum: sum '+' term | sum '-' term | term\n        let a, b, literal, mark, term;\n        mark = this.mark();\n        if ((a = this.sum()) && (literal = this.expect(\"+\")) && (b = this.term())) {\n            return new astnodes.BinOp(a, new astnodes.Add(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.sum()) && (literal = this.expect(\"-\")) && (b = this.term())) {\n            return new astnodes.BinOp(a, new astnodes.Sub(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((term = this.term())) {\n            return term;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    term() {\n        //# term: term '*' factor | term '/' factor | term '//' factor | term '%' factor | term '@' factor | factor\n        let a, b, factor, literal, mark;\n        mark = this.mark();\n        if ((a = this.term()) && (literal = this.expect(\"*\")) && (b = this.factor())) {\n            return new astnodes.BinOp(a, new astnodes.Mult(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.term()) && (literal = this.expect(\"/\")) && (b = this.factor())) {\n            return new astnodes.BinOp(a, new astnodes.Div(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.term()) && (literal = this.expect(\"//\")) && (b = this.factor())) {\n            return new astnodes.BinOp(a, new astnodes.FloorDiv(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.term()) && (literal = this.expect(\"%\")) && (b = this.factor())) {\n            return new astnodes.BinOp(a, new astnodes.Mod(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.term()) && (literal = this.expect(\"@\")) && (b = this.factor())) {\n            return CHECK_VERSION(5, \"The '@' operator is\", new astnodes.BinOp(a, new astnodes.MatMult(), b, ...EXTRA));\n        }\n        this.reset(mark);\n        if ((factor = this.factor())) {\n            return factor;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    factor() {\n        //# factor: '+' factor | '-' factor | '~' factor | power\n        let a, literal, mark, power;\n        mark = this.mark();\n        if ((literal = this.expect(\"+\")) && (a = this.factor())) {\n            return new astnodes.UnaryOp(new astnodes.UAdd(), a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"-\")) && (a = this.factor())) {\n            return new astnodes.UnaryOp(new astnodes.USub(), a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"~\")) && (a = this.factor())) {\n            return new astnodes.UnaryOp(new astnodes.Invert(), a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((power = this.power())) {\n            return power;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    power() {\n        //# power: await_primary '**' factor | await_primary\n        let a, await_primary, b, literal, mark;\n        mark = this.mark();\n        if ((a = this.await_primary()) && (literal = this.expect(\"**\")) && (b = this.factor())) {\n            return new astnodes.BinOp(a, new astnodes.Pow(), b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((await_primary = this.await_primary())) {\n            return await_primary;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    await_primary() {\n        //# await_primary: AWAIT primary | primary\n        let a, await_, mark, primary;\n        mark = this.mark();\n        if ((await_ = this.expect(\"AWAIT\")) && (a = this.primary())) {\n            return CHECK_VERSION(5, \"Await expressions are\", new astnodes.Await(a, ...EXTRA));\n        }\n        this.reset(mark);\n        if ((primary = this.primary())) {\n            return primary;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    primary() {\n        //# primary: invalid_primary | primary '.' NAME | primary genexp | primary '(' arguments? ')' | primary '[' slices ']' | atom\n        let a, atom, b, invalid_primary, literal, literal_1, mark;\n        mark = this.mark();\n        if ((invalid_primary = this.invalid_primary())) {\n            return invalid_primary;\n        }\n        this.reset(mark);\n        if ((a = this.primary()) && (literal = this.expect(\".\")) && (b = this.name())) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.primary()) && (b = this.genexp())) {\n            return new astnodes.Call(a, pegen.singleton_seq(b), null, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.primary()) && (literal = this.expect(\"(\")) && (b = this.arguments() || 1) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.Call(a, b.args, b.keywords, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.Subscript(a, b, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((atom = this.atom())) {\n            return atom;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    slices() {\n        //# slices: slice !',' | ','.slice+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this.slice()) && this.negative_lookahead(this.expect, \",\")) {\n            return a;\n        }\n        this.reset(mark);\n        if ((a = this._gather_91()) && (opt = this.expect(\",\") || 1)) {\n            return new astnodes.Tuple(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    slice() {\n        //# slice: expression? ':' expression? [':' expression?] | named_expression\n        let a, b, c, literal, mark;\n        mark = this.mark();\n        if ((a = this.expression() || 1) && (literal = this.expect(\":\")) && (b = this.expression() || 1) && (c = this._tmp_93() || 1)) {\n            return new astnodes.Slice(a, b, c, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.named_expression())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    atom() {\n        //# atom: NAME | 'True' | 'False' | 'None' | &STRING strings | NUMBER | &'(' (tuple | group | genexp) | &'[' (list | listcomp) | &'{' (dict | set | dictcomp | setcomp) | '...'\n        let _tmp_94, _tmp_95, _tmp_96, literal, mark, name, number, strings;\n        mark = this.mark();\n        if ((name = this.name())) {\n            return name;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"True\"))) {\n            return new astnodes.Constant(pyTrue, null, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"False\"))) {\n            return new astnodes.Constant(pyFalse, null, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"None\"))) {\n            return new astnodes.Constant(pyNone, null, ...EXTRA);\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.string) && (strings = this.strings())) {\n            return strings;\n        }\n        this.reset(mark);\n        if ((number = this.number())) {\n            return number;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"(\") && (_tmp_94 = this._tmp_94())) {\n            return _tmp_94;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"[\") && (_tmp_95 = this._tmp_95())) {\n            return _tmp_95;\n        }\n        this.reset(mark);\n        if (this.positive_lookahead(this.expect, \"{\") && (_tmp_96 = this._tmp_96())) {\n            return _tmp_96;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"...\"))) {\n            return new astnodes.Constant(pyEllipsis, null, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    strings() {\n        //# strings: STRING+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._loop1_97())) {\n            return pegen.concatenate_strings(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    list() {\n        //# list: '[' star_named_expressions? ']'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"[\")) && (a = this.star_named_expressions() || 1) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.List(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    listcomp() {\n        //# listcomp: '[' named_expression ~ for_if_clauses ']' | invalid_comprehension\n        let a, b, cut, invalid_comprehension, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"[\")) && (a = this.named_expression()) && (cut = true) && (b = this.for_if_clauses()) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.ListComp(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_comprehension = this.invalid_comprehension())) {\n            return invalid_comprehension;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    tuple() {\n        //# tuple: '(' [star_named_expression ',' star_named_expressions?] ')'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (a = this._tmp_98() || 1) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.Tuple(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    group() {\n        //# group: '(' (yield_expr | named_expression) ')' | invalid_group\n        let a, invalid_group, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (a = this._tmp_99()) && (literal_1 = this.expect(\")\"))) {\n            return a;\n        }\n        this.reset(mark);\n        if ((invalid_group = this.invalid_group())) {\n            return invalid_group;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    genexp() {\n        //# genexp: '(' named_expression ~ for_if_clauses ')' | invalid_comprehension\n        let a, b, cut, invalid_comprehension, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (a = this.named_expression()) && (cut = true) && (b = this.for_if_clauses()) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.GeneratorExp(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_comprehension = this.invalid_comprehension())) {\n            return invalid_comprehension;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    set() {\n        //# set: '{' star_named_expressions '}'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"{\")) && (a = this.star_named_expressions()) && (literal_1 = this.expect(\"}\"))) {\n            return new astnodes.Set(a, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    setcomp() {\n        //# setcomp: '{' named_expression ~ for_if_clauses '}' | invalid_comprehension\n        let a, b, cut, invalid_comprehension, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"{\")) && (a = this.named_expression()) && (cut = true) && (b = this.for_if_clauses()) && (literal_1 = this.expect(\"}\"))) {\n            return new astnodes.SetComp(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_comprehension = this.invalid_comprehension())) {\n            return invalid_comprehension;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    dict() {\n        //# dict: '{' double_starred_kvpairs? '}'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"{\")) && (a = this.double_starred_kvpairs() || 1) && (literal_1 = this.expect(\"}\"))) {\n            return new astnodes.Dict(pegen.get_keys(a), pegen.get_values(a), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    dictcomp() {\n        //# dictcomp: '{' kvpair for_if_clauses '}' | invalid_dict_comprehension\n        let a, b, invalid_dict_comprehension, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"{\")) && (a = this.kvpair()) && (b = this.for_if_clauses()) && (literal_1 = this.expect(\"}\"))) {\n            return new astnodes.DictComp(a.key, a.value, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((invalid_dict_comprehension = this.invalid_dict_comprehension())) {\n            return invalid_dict_comprehension;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    double_starred_kvpairs() {\n        //# double_starred_kvpairs: ','.double_starred_kvpair+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this._gather_100()) && (opt = this.expect(\",\") || 1)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    double_starred_kvpair() {\n        //# double_starred_kvpair: '**' bitwise_or | kvpair\n        let a, kvpair, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"**\")) && (a = this.bitwise_or())) {\n            return pegen.key_value_pair(null, a);\n        }\n        this.reset(mark);\n        if ((kvpair = this.kvpair())) {\n            return kvpair;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    kvpair() {\n        //# kvpair: expression ':' expression\n        let a, b, literal, mark;\n        mark = this.mark();\n        if ((a = this.expression()) && (literal = this.expect(\":\")) && (b = this.expression())) {\n            return pegen.key_value_pair(a, b);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    for_if_clauses() {\n        //# for_if_clauses: for_if_clause+\n        let a, mark;\n        mark = this.mark();\n        if ((a = this._loop1_102())) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    for_if_clause() {\n        //# for_if_clause: ASYNC 'for' star_targets 'in' ~ disjunction (('if' disjunction))* | 'for' star_targets 'in' ~ disjunction (('if' disjunction))* | invalid_for_target\n        let a, async, b, c, cut, invalid_for_target, literal, literal_1, mark;\n        mark = this.mark();\n        if (\n            (async = this.expect(\"ASYNC\")) &&\n            (literal = this.expect(\"for\")) &&\n            (a = this.star_targets()) &&\n            (literal_1 = this.expect(\"in\")) &&\n            (cut = true) &&\n            (b = this.disjunction()) &&\n            (c = this._loop0_103())\n        ) {\n            return CHECK_VERSION(comprehension_ty, 6, \"Async comprehensions are\", new astnodes.comprehension(a, b, c, 1));\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((literal = this.expect(\"for\")) && (a = this.star_targets()) && (literal_1 = this.expect(\"in\")) && (cut = true) && (b = this.disjunction()) && (c = this._loop0_104())) {\n            return new astnodes.comprehension(a, b, c, 0);\n        }\n        this.reset(mark);\n        if (cut) return null;\n        cut = false;\n        if ((invalid_for_target = this.invalid_for_target())) {\n            return invalid_for_target;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    yield_expr() {\n        //# yield_expr: 'yield' 'from' expression | 'yield' star_expressions?\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"yield\")) && (literal_1 = this.expect(\"from\")) && (a = this.expression())) {\n            return new astnodes.YieldFrom(a, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"yield\")) && (a = this.star_expressions() || 1)) {\n            return new astnodes.Yield(a, ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    arguments() {\n        //# arguments: args ','? &')' | invalid_arguments\n        let a, invalid_arguments, mark, opt;\n        mark = this.mark();\n        if ((a = this.args()) && (opt = this.expect(\",\") || 1) && this.positive_lookahead(this.expect, \")\")) {\n            return a;\n        }\n        this.reset(mark);\n        if ((invalid_arguments = this.invalid_arguments())) {\n            return invalid_arguments;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    args() {\n        //# args: ','.(starred_expression | named_expression !'=')+ [',' kwargs] | kwargs\n        let a, b, mark;\n        mark = this.mark();\n        if ((a = this._gather_105()) && (b = this._tmp_107() || 1)) {\n            return pegen.collect_call_seqs(a, b, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.kwargs())) {\n            return new astnodes.Call(pegen.dummy_name(p), CHECK_null_ALLOWED(pegen.seq_extract_starred_exprs(a)), CHECK_null_ALLOWED(pegen.seq_delete_starred_exprs(a)), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    kwargs() {\n        //# kwargs: ','.kwarg_or_starred+ ',' ','.kwarg_or_double_starred+ | ','.kwarg_or_starred+ | ','.kwarg_or_double_starred+\n        let _gather_112, _gather_114, a, b, literal, mark;\n        mark = this.mark();\n        if ((a = this._gather_108()) && (literal = this.expect(\",\")) && (b = this._gather_110())) {\n            return pegen.join_sequences(a, b);\n        }\n        this.reset(mark);\n        if ((_gather_112 = this._gather_112())) {\n            return _gather_112;\n        }\n        this.reset(mark);\n        if ((_gather_114 = this._gather_114())) {\n            return _gather_114;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    starred_expression() {\n        //# starred_expression: '*' expression\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this.expression())) {\n            return new astnodes.Starred(a, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    kwarg_or_starred() {\n        //# kwarg_or_starred: NAME '=' expression | starred_expression | invalid_kwarg\n        let a, b, invalid_kwarg, literal, mark;\n        mark = this.mark();\n        if ((a = this.name()) && (literal = this.expect(\"=\")) && (b = this.expression())) {\n            return pegen.keyword_or_starred((keyword_ty, new astnodes.keyword(a.id, b, ...EXTRA)), 1);\n        }\n        this.reset(mark);\n        if ((a = this.starred_expression())) {\n            return pegen.keyword_or_starred(a, 0);\n        }\n        this.reset(mark);\n        if ((invalid_kwarg = this.invalid_kwarg())) {\n            return invalid_kwarg;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    kwarg_or_double_starred() {\n        //# kwarg_or_double_starred: NAME '=' expression | '**' expression | invalid_kwarg\n        let a, b, invalid_kwarg, literal, mark;\n        mark = this.mark();\n        if ((a = this.name()) && (literal = this.expect(\"=\")) && (b = this.expression())) {\n            return pegen.keyword_or_starred((keyword_ty, new astnodes.keyword(a.id, b, ...EXTRA)), 1);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"**\")) && (a = this.expression())) {\n            return pegen.keyword_or_starred((keyword_ty, new astnodes.keyword(null, a, ...EXTRA)), 1);\n        }\n        this.reset(mark);\n        if ((invalid_kwarg = this.invalid_kwarg())) {\n            return invalid_kwarg;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_targets() {\n        //# star_targets: star_target !',' | star_target ((',' star_target))* ','?\n        let a, b, mark, opt;\n        mark = this.mark();\n        if ((a = this.star_target()) && this.negative_lookahead(this.expect, \",\")) {\n            return a;\n        }\n        this.reset(mark);\n        if ((a = this.star_target()) && (b = this._loop0_116()) && (opt = this.expect(\",\") || 1)) {\n            return new astnodes.Tuple(pegen.seq_insert_in_front(a, b), new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_targets_seq() {\n        //# star_targets_seq: ','.star_target+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this._gather_117()) && (opt = this.expect(\",\") || 1)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_target() {\n        //# star_target: '*' (!'*' star_target) | t_primary '.' NAME !t_lookahead | t_primary '[' slices ']' !t_lookahead | star_atom\n        let a, b, literal, literal_1, mark, star_atom;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (a = this._tmp_119())) {\n            return new astnodes.Starred(pegen.set_expr_context(a, new astnodes.Store()), new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\".\")) && (b = this.name()) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\")) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Subscript(a, b, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((star_atom = this.star_atom())) {\n            return star_atom;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    star_atom() {\n        //# star_atom: NAME | '(' star_target ')' | '(' star_targets_seq? ')' | '[' star_targets_seq? ']'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.name())) {\n            return pegen.set_expr_context(a, new astnodes.Store());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.star_target()) && (literal_1 = this.expect(\")\"))) {\n            return pegen.set_expr_context(a, new astnodes.Store());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.star_targets_seq() || 1) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.Tuple(a, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"[\")) && (a = this.star_targets_seq() || 1) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.List(a, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    single_target() {\n        //# single_target: single_subscript_attribute_target | NAME | '(' single_target ')'\n        let a, literal, literal_1, mark, single_subscript_attribute_target;\n        mark = this.mark();\n        if ((single_subscript_attribute_target = this.single_subscript_attribute_target())) {\n            return single_subscript_attribute_target;\n        }\n        this.reset(mark);\n        if ((a = this.name())) {\n            return pegen.set_expr_context(a, new astnodes.Store());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.single_target()) && (literal_1 = this.expect(\")\"))) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    single_subscript_attribute_target() {\n        //# single_subscript_attribute_target: t_primary '.' NAME !t_lookahead | t_primary '[' slices ']' !t_lookahead\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.t_primary()) && (literal = this.expect(\".\")) && (b = this.name()) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\")) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Subscript(a, b, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    del_targets() {\n        //# del_targets: ','.del_target+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this._gather_120()) && (opt = this.expect(\",\") || 1)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    del_target() {\n        //# del_target: t_primary '.' NAME !t_lookahead | t_primary '[' slices ']' !t_lookahead | del_t_atom\n        let a, b, del_t_atom, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.t_primary()) && (literal = this.expect(\".\")) && (b = this.name()) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Del(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\")) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Subscript(a, b, new astnodes.Del(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((del_t_atom = this.del_t_atom())) {\n            return del_t_atom;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    del_t_atom() {\n        //# del_t_atom: NAME | '(' del_target ')' | '(' del_targets? ')' | '[' del_targets? ']'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.name())) {\n            return pegen.set_expr_context(a, new astnodes.Del());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.del_target()) && (literal_1 = this.expect(\")\"))) {\n            return pegen.set_expr_context(a, new astnodes.Del());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.del_targets() || 1) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.Tuple(a, new astnodes.Del(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"[\")) && (a = this.del_targets() || 1) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.List(a, new astnodes.Del(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    targets() {\n        //# targets: ','.target+ ','?\n        let a, mark, opt;\n        mark = this.mark();\n        if ((a = this._gather_122()) && (opt = this.expect(\",\") || 1)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    target() {\n        //# target: t_primary '.' NAME !t_lookahead | t_primary '[' slices ']' !t_lookahead | t_atom\n        let a, b, literal, literal_1, mark, t_atom;\n        mark = this.mark();\n        if ((a = this.t_primary()) && (literal = this.expect(\".\")) && (b = this.name()) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\")) && this.negative_lookahead(this.t_lookahead)) {\n            return new astnodes.Subscript(a, b, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((t_atom = this.t_atom())) {\n            return t_atom;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize_left_rec\n    t_primary() {\n        //# t_primary: t_primary '.' NAME &t_lookahead | t_primary '[' slices ']' &t_lookahead | t_primary genexp &t_lookahead | t_primary '(' arguments? ')' &t_lookahead | atom &t_lookahead\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.t_primary()) && (literal = this.expect(\".\")) && (b = this.name()) && this.positive_lookahead(this.t_lookahead)) {\n            return new astnodes.Attribute(a, b.id, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"[\")) && (b = this.slices()) && (literal_1 = this.expect(\"]\")) && this.positive_lookahead(this.t_lookahead)) {\n            return new astnodes.Subscript(a, b, new astnodes.Load(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (b = this.genexp()) && this.positive_lookahead(this.t_lookahead)) {\n            return new astnodes.Call(a, pegen.singleton_seq(b), null, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.t_primary()) && (literal = this.expect(\"(\")) && (b = this.arguments() || 1) && (literal_1 = this.expect(\")\")) && this.positive_lookahead(this.t_lookahead)) {\n            return new astnodes.Call(a, b.args, b.keywords, ...EXTRA);\n        }\n        this.reset(mark);\n        if ((a = this.atom()) && this.positive_lookahead(this.t_lookahead)) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    t_lookahead() {\n        //# t_lookahead: '(' | '[' | '.'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"[\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\".\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    t_atom() {\n        //# t_atom: NAME | '(' target ')' | '(' targets? ')' | '[' targets? ']'\n        let a, b, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.name())) {\n            return pegen.set_expr_context(a, new astnodes.Store());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.target()) && (literal_1 = this.expect(\")\"))) {\n            return pegen.set_expr_context(a, new astnodes.Store());\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (b = this.targets() || 1) && (literal_1 = this.expect(\")\"))) {\n            return new astnodes.Tuple(b, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"[\")) && (b = this.targets() || 1) && (literal_1 = this.expect(\"]\"))) {\n            return new astnodes.List(b, new astnodes.Store(), ...EXTRA);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_arguments() {\n        //# invalid_arguments: args ',' '*' | expression for_if_clauses ',' [args | expression for_if_clauses] | args for_if_clauses | args ',' expression for_if_clauses | args ',' args\n        let a, args, for_if_clauses, literal, literal_1, mark, opt;\n        mark = this.mark();\n        if ((args = this.args()) && (literal = this.expect(\",\")) && (literal_1 = this.expect(\"*\"))) {\n            return pegen.RAISE_SYNTAX_ERROR(\"iterable argument unpacking follows keyword argument unpacking\");\n        }\n        this.reset(mark);\n        if ((a = this.expression()) && (for_if_clauses = this.for_if_clauses()) && (literal = this.expect(\",\")) && (opt = this._tmp_124() || 1)) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"Generator expression must be parenthesized\");\n        }\n        this.reset(mark);\n        if ((a = this.args()) && (for_if_clauses = this.for_if_clauses())) {\n            return pegen.nonparen_genexp_in_call(a);\n        }\n        this.reset(mark);\n        if ((args = this.args()) && (literal = this.expect(\",\")) && (a = this.expression()) && (for_if_clauses = this.for_if_clauses())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"Generator expression must be parenthesized\");\n        }\n        this.reset(mark);\n        if ((a = this.args()) && (literal = this.expect(\",\")) && (args = this.args())) {\n            return pegen.arguments_parsing_error(a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_kwarg() {\n        //# invalid_kwarg: expression '='\n        let a, expression, mark;\n        mark = this.mark();\n        if ((expression = this.expression()) && (a = this.expect(\"=\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, 'expression cannot contain assignment, perhaps you meant \"==\"?');\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_named_expression() {\n        //# invalid_named_expression: expression ':=' expression\n        let a, expression, literal, mark;\n        mark = this.mark();\n        if ((a = this.expression()) && (literal = this.expect(\":=\")) && (expression = this.expression())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"cannot use assignment expressions with %s\", pegen.get_expr_name(a));\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_assignment() {\n        //# invalid_assignment: invalid_ann_assign_target ':' expression | star_named_expression ',' star_named_expressions* ':' expression | expression ':' expression | ((star_targets '='))* star_expressions '=' | ((star_targets '='))* yield_expr '=' | star_expressions augassign (yield_expr | star_expressions)\n        let _loop0_125, _loop0_126, _loop0_127, _tmp_128, a, augassign, expression, literal, literal_1, mark;\n        mark = this.mark();\n        if ((a = this.invalid_ann_assign_target()) && (literal = this.expect(\":\")) && (expression = this.expression())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"only single target (not %s) can be annotated\", pegen.get_expr_name(a));\n        }\n        this.reset(mark);\n        if ((a = this.star_named_expression()) && (literal = this.expect(\",\")) && (_loop0_125 = this._loop0_125()) && (literal_1 = this.expect(\":\")) && (expression = this.expression())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"only single target (not tuple) can be annotated\");\n        }\n        this.reset(mark);\n        if ((a = this.expression()) && (literal = this.expect(\":\")) && (expression = this.expression())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"illegal target for annotation\");\n        }\n        this.reset(mark);\n        if ((_loop0_126 = this._loop0_126()) && (a = this.star_expressions()) && (literal = this.expect(\"=\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_INVALID_TARGET(STAR_TARGETS, a);\n        }\n        this.reset(mark);\n        if ((_loop0_127 = this._loop0_127()) && (a = this.yield_expr()) && (literal = this.expect(\"=\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"assignment to yield expression not possible\");\n        }\n        this.reset(mark);\n        if ((a = this.star_expressions()) && (augassign = this.augassign()) && (_tmp_128 = this._tmp_128())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"'%s' is an illegal expression for augmented assignment\", pegen.get_expr_name(a));\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_ann_assign_target() {\n        //# invalid_ann_assign_target: list | tuple | '(' invalid_ann_assign_target ')'\n        let a, list, literal, literal_1, mark, tuple;\n        mark = this.mark();\n        if ((list = this.list())) {\n            return list;\n        }\n        this.reset(mark);\n        if ((tuple = this.tuple())) {\n            return tuple;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\")) && (a = this.invalid_ann_assign_target()) && (literal_1 = this.expect(\")\"))) {\n            return a;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_del_stmt() {\n        //# invalid_del_stmt: 'del' star_expressions\n        let a, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"del\")) && (a = this.star_expressions())) {\n            return pegen.RAISE_SYNTAX_ERROR_INVALID_TARGET(DEL_TARGETS, a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_block() {\n        //# invalid_block: NEWLINE !INDENT\n        let mark, newline;\n        mark = this.mark();\n        if ((newline = this.expect(\"NEWLINE\")) && this.negative_lookahead(this.expect, \"INDENT\")) {\n            return pegen.RAISE_INDENTATION_ERROR(\"expected an indented block\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @logger\n    invalid_primary() {\n        //# invalid_primary: primary '{'\n        let a, mark, primary;\n        mark = this.mark();\n        if ((primary = this.primary()) && (a = this.expect(\"{\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"invalid syntax\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_comprehension() {\n        //# invalid_comprehension: ('[' | '(' | '{') starred_expression for_if_clauses\n        let _tmp_129, a, for_if_clauses, mark;\n        mark = this.mark();\n        if ((_tmp_129 = this._tmp_129()) && (a = this.starred_expression()) && (for_if_clauses = this.for_if_clauses())) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"iterable unpacking cannot be used in comprehension\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_dict_comprehension() {\n        //# invalid_dict_comprehension: '{' '**' bitwise_or for_if_clauses '}'\n        let a, bitwise_or, for_if_clauses, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"{\")) && (a = this.expect(\"**\")) && (bitwise_or = this.bitwise_or()) && (for_if_clauses = this.for_if_clauses()) && (literal_1 = this.expect(\"}\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"dict unpacking cannot be used in dict comprehension\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_parameters() {\n        //# invalid_parameters: param_no_default* (slash_with_default | param_with_default+) param_no_default\n        let _loop0_130, _tmp_131, mark, param_no_default;\n        mark = this.mark();\n        if ((_loop0_130 = this._loop0_130()) && (_tmp_131 = this._tmp_131()) && (param_no_default = this.param_no_default())) {\n            return pegen.RAISE_SYNTAX_ERROR(\"non-default argument follows default argument\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_lambda_parameters() {\n        //# invalid_lambda_parameters: lambda_param_no_default* (lambda_slash_with_default | lambda_param_with_default+) lambda_param_no_default\n        let _loop0_132, _tmp_133, lambda_param_no_default, mark;\n        mark = this.mark();\n        if ((_loop0_132 = this._loop0_132()) && (_tmp_133 = this._tmp_133()) && (lambda_param_no_default = this.lambda_param_no_default())) {\n            return pegen.RAISE_SYNTAX_ERROR(\"non-default argument follows default argument\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_star_etc() {\n        //# invalid_star_etc: '*' (')' | ',' (')' | '**')) | '*' ',' TYPE_COMMENT\n        let _tmp_134, literal, literal_1, mark, type_comment;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (_tmp_134 = this._tmp_134())) {\n            return pegen.RAISE_SYNTAX_ERROR(\"named arguments must follow bare *\");\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"*\")) && (literal_1 = this.expect(\",\")) && (type_comment = this.expect(\"TYPE_COMMENT\"))) {\n            return pegen.RAISE_SYNTAX_ERROR(\"bare * has associated type comment\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_lambda_star_etc() {\n        //# invalid_lambda_star_etc: '*' (':' | ',' (':' | '**'))\n        let _tmp_135, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"*\")) && (_tmp_135 = this._tmp_135())) {\n            return pegen.RAISE_SYNTAX_ERROR(\"named arguments must follow bare *\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_double_type_comments() {\n        //# invalid_double_type_comments: TYPE_COMMENT NEWLINE TYPE_COMMENT NEWLINE INDENT\n        let indent, mark, newline, newline_1, type_comment, type_comment_1;\n        mark = this.mark();\n        if (\n            (type_comment = this.expect(\"TYPE_COMMENT\")) &&\n            (newline = this.expect(\"NEWLINE\")) &&\n            (type_comment_1 = this.expect(\"TYPE_COMMENT\")) &&\n            (newline_1 = this.expect(\"NEWLINE\")) &&\n            (indent = this.expect(\"INDENT\"))\n        ) {\n            return pegen.RAISE_SYNTAX_ERROR(\"Cannot have two type comments on def\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_with_item() {\n        //# invalid_with_item: expression 'as' expression\n        let a, expression, literal, mark;\n        mark = this.mark();\n        if ((expression = this.expression()) && (literal = this.expect(\"as\")) && (a = this.expression())) {\n            return pegen.RAISE_SYNTAX_ERROR_INVALID_TARGET(STAR_TARGETS, a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_for_target() {\n        //# invalid_for_target: ASYNC? 'for' star_expressions\n        let a, literal, mark, opt;\n        mark = this.mark();\n        if ((opt = this.expect(\"ASYNC\") || 1) && (literal = this.expect(\"for\")) && (a = this.star_expressions())) {\n            return pegen.RAISE_SYNTAX_ERROR_INVALID_TARGET(FOR_TARGETS, a);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_group() {\n        //# invalid_group: '(' starred_expression ')'\n        let a, literal, literal_1, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (a = this.starred_expression()) && (literal_1 = this.expect(\")\"))) {\n            return pegen.RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, \"can't use starred expression here\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    invalid_import_from_targets() {\n        //# invalid_import_from_targets: import_from_as_names ','\n        let import_from_as_names, literal, mark;\n        mark = this.mark();\n        if ((import_from_as_names = this.import_from_as_names()) && (literal = this.expect(\",\"))) {\n            return pegen.RAISE_SYNTAX_ERROR(\"trailing comma not allowed without surrounding parentheses\");\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_1() {\n        //# _loop0_1: NEWLINE\n        let children, mark, newline;\n        mark = this.mark();\n        children = [];\n        while ((newline = this.expect(\"NEWLINE\"))) {\n            children.push(newline);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_2() {\n        //# _loop0_2: NEWLINE\n        let children, mark, newline;\n        mark = this.mark();\n        children = [];\n        while ((newline = this.expect(\"NEWLINE\"))) {\n            children.push(newline);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_4() {\n        //# _loop0_4: ',' expression\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.expression())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_3() {\n        //# _gather_3: expression _loop0_4\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.expression()) !== null && (seq = this._loop0_4()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_6() {\n        //# _loop0_6: ',' expression\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.expression())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_5() {\n        //# _gather_5: expression _loop0_6\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.expression()) !== null && (seq = this._loop0_6()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_8() {\n        //# _loop0_8: ',' expression\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.expression())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_7() {\n        //# _gather_7: expression _loop0_8\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.expression()) !== null && (seq = this._loop0_8()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_10() {\n        //# _loop0_10: ',' expression\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.expression())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_9() {\n        //# _gather_9: expression _loop0_10\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.expression()) !== null && (seq = this._loop0_10()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_11() {\n        //# _loop1_11: statement\n        let children, mark, statement;\n        mark = this.mark();\n        children = [];\n        while ((statement = this.statement())) {\n            children.push(statement);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_13() {\n        //# _loop0_13: ';' simple_stmt\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\";\")) && (elem = this.simple_stmt())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_12() {\n        //# _gather_12: simple_stmt _loop0_13\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.simple_stmt()) !== null && (seq = this._loop0_13()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_14() {\n        //# _tmp_14: 'import' | 'from'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"import\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"from\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_15() {\n        //# _tmp_15: 'def' | '@' | ASYNC\n        let async, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"def\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"@\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((async = this.expect(\"ASYNC\"))) {\n            return async;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_16() {\n        //# _tmp_16: 'class' | '@'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"class\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"@\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_17() {\n        //# _tmp_17: 'with' | ASYNC\n        let async, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"with\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((async = this.expect(\"ASYNC\"))) {\n            return async;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_18() {\n        //# _tmp_18: 'for' | ASYNC\n        let async, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"for\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((async = this.expect(\"ASYNC\"))) {\n            return async;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_19() {\n        //# _tmp_19: '=' annotated_rhs\n        let d, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"=\")) && (d = this.annotated_rhs())) {\n            return d;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_20() {\n        //# _tmp_20: '(' single_target ')' | single_subscript_attribute_target\n        let b, literal, literal_1, mark, single_subscript_attribute_target;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (b = this.single_target()) && (literal_1 = this.expect(\")\"))) {\n            return b;\n        }\n        this.reset(mark);\n        if ((single_subscript_attribute_target = this.single_subscript_attribute_target())) {\n            return single_subscript_attribute_target;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_21() {\n        //# _tmp_21: '=' annotated_rhs\n        let d, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"=\")) && (d = this.annotated_rhs())) {\n            return d;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_22() {\n        //# _loop1_22: (star_targets '=')\n        let _tmp_136, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_136 = this._tmp_136())) {\n            children.push(_tmp_136);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _tmp_23() {\n        //# _tmp_23: yield_expr | star_expressions\n        let mark, star_expressions, yield_expr;\n        mark = this.mark();\n        if ((yield_expr = this.yield_expr())) {\n            return yield_expr;\n        }\n        this.reset(mark);\n        if ((star_expressions = this.star_expressions())) {\n            return star_expressions;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_24() {\n        //# _tmp_24: yield_expr | star_expressions\n        let mark, star_expressions, yield_expr;\n        mark = this.mark();\n        if ((yield_expr = this.yield_expr())) {\n            return yield_expr;\n        }\n        this.reset(mark);\n        if ((star_expressions = this.star_expressions())) {\n            return star_expressions;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_26() {\n        //# _loop0_26: ',' NAME\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.name())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_25() {\n        //# _gather_25: NAME _loop0_26\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.name()) !== null && (seq = this._loop0_26()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_28() {\n        //# _loop0_28: ',' NAME\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.name())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_27() {\n        //# _gather_27: NAME _loop0_28\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.name()) !== null && (seq = this._loop0_28()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_29() {\n        //# _tmp_29: ',' expression\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\",\")) && (z = this.expression())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_30() {\n        //# _tmp_30: ';' | NEWLINE\n        let literal, mark, newline;\n        mark = this.mark();\n        if ((literal = this.expect(\";\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((newline = this.expect(\"NEWLINE\"))) {\n            return newline;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_31() {\n        //# _loop0_31: ('.' | '...')\n        let _tmp_137, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_137 = this._tmp_137())) {\n            children.push(_tmp_137);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_32() {\n        //# _loop1_32: ('.' | '...')\n        let _tmp_138, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_138 = this._tmp_138())) {\n            children.push(_tmp_138);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_34() {\n        //# _loop0_34: ',' import_from_as_name\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.import_from_as_name())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_33() {\n        //# _gather_33: import_from_as_name _loop0_34\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.import_from_as_name()) !== null && (seq = this._loop0_34()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_35() {\n        //# _tmp_35: 'as' NAME\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"as\")) && (z = this.name())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_37() {\n        //# _loop0_37: ',' dotted_as_name\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.dotted_as_name())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_36() {\n        //# _gather_36: dotted_as_name _loop0_37\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.dotted_as_name()) !== null && (seq = this._loop0_37()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_38() {\n        //# _tmp_38: 'as' NAME\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"as\")) && (z = this.name())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_40() {\n        //# _loop0_40: ',' with_item\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.with_item())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_39() {\n        //# _gather_39: with_item _loop0_40\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.with_item()) !== null && (seq = this._loop0_40()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_42() {\n        //# _loop0_42: ',' with_item\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.with_item())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_41() {\n        //# _gather_41: with_item _loop0_42\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.with_item()) !== null && (seq = this._loop0_42()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_44() {\n        //# _loop0_44: ',' with_item\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.with_item())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_43() {\n        //# _gather_43: with_item _loop0_44\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.with_item()) !== null && (seq = this._loop0_44()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_46() {\n        //# _loop0_46: ',' with_item\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.with_item())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_45() {\n        //# _gather_45: with_item _loop0_46\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.with_item()) !== null && (seq = this._loop0_46()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_47() {\n        //# _tmp_47: ',' | ')' | ':'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\",\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\")\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\":\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_48() {\n        //# _loop1_48: except_block\n        let children, except_block, mark;\n        mark = this.mark();\n        children = [];\n        while ((except_block = this.except_block())) {\n            children.push(except_block);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _tmp_49() {\n        //# _tmp_49: 'as' NAME\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"as\")) && (z = this.name())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_50() {\n        //# _tmp_50: 'from' expression\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"from\")) && (z = this.expression())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_51() {\n        //# _tmp_51: '->' expression\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"->\")) && (z = this.expression())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_52() {\n        //# _tmp_52: '->' expression\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"->\")) && (z = this.expression())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_53() {\n        //# _tmp_53: NEWLINE INDENT\n        let indent, mark, newline;\n        mark = this.mark();\n        if ((newline = this.expect(\"NEWLINE\")) && (indent = this.expect(\"INDENT\"))) {\n            return newline, indent;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_54() {\n        //# _loop0_54: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_55() {\n        //# _loop0_55: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_56() {\n        //# _loop0_56: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_57() {\n        //# _loop1_57: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_58() {\n        //# _loop0_58: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_59() {\n        //# _loop1_59: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_60() {\n        //# _loop1_60: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_61() {\n        //# _loop1_61: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_62() {\n        //# _loop0_62: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_63() {\n        //# _loop1_63: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_64() {\n        //# _loop0_64: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_65() {\n        //# _loop1_65: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_66() {\n        //# _loop0_66: param_maybe_default\n        let children, mark, param_maybe_default;\n        mark = this.mark();\n        children = [];\n        while ((param_maybe_default = this.param_maybe_default())) {\n            children.push(param_maybe_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_67() {\n        //# _loop1_67: param_maybe_default\n        let children, mark, param_maybe_default;\n        mark = this.mark();\n        children = [];\n        while ((param_maybe_default = this.param_maybe_default())) {\n            children.push(param_maybe_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_68() {\n        //# _loop1_68: ('@' named_expression NEWLINE)\n        let _tmp_139, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_139 = this._tmp_139())) {\n            children.push(_tmp_139);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _tmp_69() {\n        //# _tmp_69: '(' arguments? ')'\n        let literal, literal_1, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"(\")) && (z = this.arguments() || 1) && (literal_1 = this.expect(\")\"))) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_70() {\n        //# _loop1_70: (',' star_expression)\n        let _tmp_140, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_140 = this._tmp_140())) {\n            children.push(_tmp_140);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_72() {\n        //# _loop0_72: ',' star_named_expression\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.star_named_expression())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_71() {\n        //# _gather_71: star_named_expression _loop0_72\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.star_named_expression()) !== null && (seq = this._loop0_72()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_73() {\n        //# _loop1_73: (',' expression)\n        let _tmp_141, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_141 = this._tmp_141())) {\n            children.push(_tmp_141);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_74() {\n        //# _loop0_74: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_75() {\n        //# _loop0_75: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_76() {\n        //# _loop0_76: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_77() {\n        //# _loop1_77: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_78() {\n        //# _loop0_78: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_79() {\n        //# _loop1_79: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_80() {\n        //# _loop1_80: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_81() {\n        //# _loop1_81: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_82() {\n        //# _loop0_82: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_83() {\n        //# _loop1_83: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_84() {\n        //# _loop0_84: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_85() {\n        //# _loop1_85: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_86() {\n        //# _loop0_86: lambda_param_maybe_default\n        let children, lambda_param_maybe_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_maybe_default = this.lambda_param_maybe_default())) {\n            children.push(lambda_param_maybe_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop1_87() {\n        //# _loop1_87: lambda_param_maybe_default\n        let children, lambda_param_maybe_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_maybe_default = this.lambda_param_maybe_default())) {\n            children.push(lambda_param_maybe_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_88() {\n        //# _loop1_88: ('or' conjunction)\n        let _tmp_142, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_142 = this._tmp_142())) {\n            children.push(_tmp_142);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_89() {\n        //# _loop1_89: ('and' inversion)\n        let _tmp_143, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_143 = this._tmp_143())) {\n            children.push(_tmp_143);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_90() {\n        //# _loop1_90: compare_op_bitwise_or_pair\n        let children, compare_op_bitwise_or_pair, mark;\n        mark = this.mark();\n        children = [];\n        while ((compare_op_bitwise_or_pair = this.compare_op_bitwise_or_pair())) {\n            children.push(compare_op_bitwise_or_pair);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_92() {\n        //# _loop0_92: ',' slice\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.slice())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_91() {\n        //# _gather_91: slice _loop0_92\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.slice()) !== null && (seq = this._loop0_92()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_93() {\n        //# _tmp_93: ':' expression?\n        let d, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\":\")) && (d = this.expression() || 1)) {\n            return d;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_94() {\n        //# _tmp_94: tuple | group | genexp\n        let genexp, group, mark, tuple;\n        mark = this.mark();\n        if ((tuple = this.tuple())) {\n            return tuple;\n        }\n        this.reset(mark);\n        if ((group = this.group())) {\n            return group;\n        }\n        this.reset(mark);\n        if ((genexp = this.genexp())) {\n            return genexp;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_95() {\n        //# _tmp_95: list | listcomp\n        let list, listcomp, mark;\n        mark = this.mark();\n        if ((list = this.list())) {\n            return list;\n        }\n        this.reset(mark);\n        if ((listcomp = this.listcomp())) {\n            return listcomp;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_96() {\n        //# _tmp_96: dict | set | dictcomp | setcomp\n        let dict, dictcomp, mark, set, setcomp;\n        mark = this.mark();\n        if ((dict = this.dict())) {\n            return dict;\n        }\n        this.reset(mark);\n        if ((set = this.set())) {\n            return set;\n        }\n        this.reset(mark);\n        if ((dictcomp = this.dictcomp())) {\n            return dictcomp;\n        }\n        this.reset(mark);\n        if ((setcomp = this.setcomp())) {\n            return setcomp;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_97() {\n        //# _loop1_97: STRING\n        let children, mark, string;\n        mark = this.mark();\n        children = [];\n        while ((string = this.string())) {\n            children.push(string);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _tmp_98() {\n        //# _tmp_98: star_named_expression ',' star_named_expressions?\n        let literal, mark, y, z;\n        mark = this.mark();\n        if ((y = this.star_named_expression()) && (literal = this.expect(\",\")) && (z = this.star_named_expressions() || 1)) {\n            return pegen.seq_insert_in_front(y, z);\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_99() {\n        //# _tmp_99: yield_expr | named_expression\n        let mark, named_expression, yield_expr;\n        mark = this.mark();\n        if ((yield_expr = this.yield_expr())) {\n            return yield_expr;\n        }\n        this.reset(mark);\n        if ((named_expression = this.named_expression())) {\n            return named_expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_101() {\n        //# _loop0_101: ',' double_starred_kvpair\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.double_starred_kvpair())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_100() {\n        //# _gather_100: double_starred_kvpair _loop0_101\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.double_starred_kvpair()) !== null && (seq = this._loop0_101()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_102() {\n        //# _loop1_102: for_if_clause\n        let children, for_if_clause, mark;\n        mark = this.mark();\n        children = [];\n        while ((for_if_clause = this.for_if_clause())) {\n            children.push(for_if_clause);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop0_103() {\n        //# _loop0_103: ('if' disjunction)\n        let _tmp_144, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_144 = this._tmp_144())) {\n            children.push(_tmp_144);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_104() {\n        //# _loop0_104: ('if' disjunction)\n        let _tmp_145, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_145 = this._tmp_145())) {\n            children.push(_tmp_145);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_106() {\n        //# _loop0_106: ',' (starred_expression | named_expression !'=')\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this._tmp_146())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_105() {\n        //# _gather_105: (starred_expression | named_expression !'=') _loop0_106\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this._tmp_146()) !== null && (seq = this._loop0_106()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_107() {\n        //# _tmp_107: ',' kwargs\n        let k, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\",\")) && (k = this.kwargs())) {\n            return k;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_109() {\n        //# _loop0_109: ',' kwarg_or_starred\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.kwarg_or_starred())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_108() {\n        //# _gather_108: kwarg_or_starred _loop0_109\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.kwarg_or_starred()) !== null && (seq = this._loop0_109()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_111() {\n        //# _loop0_111: ',' kwarg_or_double_starred\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.kwarg_or_double_starred())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_110() {\n        //# _gather_110: kwarg_or_double_starred _loop0_111\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.kwarg_or_double_starred()) !== null && (seq = this._loop0_111()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_113() {\n        //# _loop0_113: ',' kwarg_or_starred\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.kwarg_or_starred())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_112() {\n        //# _gather_112: kwarg_or_starred _loop0_113\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.kwarg_or_starred()) !== null && (seq = this._loop0_113()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_115() {\n        //# _loop0_115: ',' kwarg_or_double_starred\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.kwarg_or_double_starred())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_114() {\n        //# _gather_114: kwarg_or_double_starred _loop0_115\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.kwarg_or_double_starred()) !== null && (seq = this._loop0_115()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_116() {\n        //# _loop0_116: (',' star_target)\n        let _tmp_147, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_147 = this._tmp_147())) {\n            children.push(_tmp_147);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_118() {\n        //# _loop0_118: ',' star_target\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.star_target())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_117() {\n        //# _gather_117: star_target _loop0_118\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.star_target()) !== null && (seq = this._loop0_118()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_119() {\n        //# _tmp_119: !'*' star_target\n        let mark, star_target;\n        mark = this.mark();\n        if (this.negative_lookahead(this.expect, \"*\") && (star_target = this.star_target())) {\n            return star_target;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_121() {\n        //# _loop0_121: ',' del_target\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.del_target())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_120() {\n        //# _gather_120: del_target _loop0_121\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.del_target()) !== null && (seq = this._loop0_121()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_123() {\n        //# _loop0_123: ',' target\n        let children, elem, literal, mark;\n        mark = this.mark();\n        children = [];\n        while ((literal = this.expect(\",\")) && (elem = this.target())) {\n            children.push(elem);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _gather_122() {\n        //# _gather_122: target _loop0_123\n        let elem, mark, seq;\n        mark = this.mark();\n        if ((elem = this.target()) !== null && (seq = this._loop0_123()) !== null) {\n            return [elem, ...seq];\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_124() {\n        //# _tmp_124: args | expression for_if_clauses\n        let args, expression, for_if_clauses, mark;\n        mark = this.mark();\n        if ((args = this.args())) {\n            return args;\n        }\n        this.reset(mark);\n        if ((expression = this.expression()) && (for_if_clauses = this.for_if_clauses())) {\n            return expression, for_if_clauses;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_125() {\n        //# _loop0_125: star_named_expressions\n        let children, mark, star_named_expressions;\n        mark = this.mark();\n        children = [];\n        while ((star_named_expressions = this.star_named_expressions())) {\n            children.push(star_named_expressions);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_126() {\n        //# _loop0_126: (star_targets '=')\n        let _tmp_148, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_148 = this._tmp_148())) {\n            children.push(_tmp_148);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _loop0_127() {\n        //# _loop0_127: (star_targets '=')\n        let _tmp_149, children, mark;\n        mark = this.mark();\n        children = [];\n        while ((_tmp_149 = this._tmp_149())) {\n            children.push(_tmp_149);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _tmp_128() {\n        //# _tmp_128: yield_expr | star_expressions\n        let mark, star_expressions, yield_expr;\n        mark = this.mark();\n        if ((yield_expr = this.yield_expr())) {\n            return yield_expr;\n        }\n        this.reset(mark);\n        if ((star_expressions = this.star_expressions())) {\n            return star_expressions;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_129() {\n        //# _tmp_129: '[' | '(' | '{'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"[\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"(\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"{\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_130() {\n        //# _loop0_130: param_no_default\n        let children, mark, param_no_default;\n        mark = this.mark();\n        children = [];\n        while ((param_no_default = this.param_no_default())) {\n            children.push(param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _tmp_131() {\n        //# _tmp_131: slash_with_default | param_with_default+\n        let _loop1_150, mark, slash_with_default;\n        mark = this.mark();\n        if ((slash_with_default = this.slash_with_default())) {\n            return slash_with_default;\n        }\n        this.reset(mark);\n        if ((_loop1_150 = this._loop1_150())) {\n            return _loop1_150;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop0_132() {\n        //# _loop0_132: lambda_param_no_default\n        let children, lambda_param_no_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_no_default = this.lambda_param_no_default())) {\n            children.push(lambda_param_no_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children;\n    }\n\n    @memoize\n    _tmp_133() {\n        //# _tmp_133: lambda_slash_with_default | lambda_param_with_default+\n        let _loop1_151, lambda_slash_with_default, mark;\n        mark = this.mark();\n        if ((lambda_slash_with_default = this.lambda_slash_with_default())) {\n            return lambda_slash_with_default;\n        }\n        this.reset(mark);\n        if ((_loop1_151 = this._loop1_151())) {\n            return _loop1_151;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_134() {\n        //# _tmp_134: ')' | ',' (')' | '**')\n        let _tmp_152, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\")\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\",\")) && (_tmp_152 = this._tmp_152())) {\n            return literal, _tmp_152;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_135() {\n        //# _tmp_135: ':' | ',' (':' | '**')\n        let _tmp_153, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\":\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\",\")) && (_tmp_153 = this._tmp_153())) {\n            return literal, _tmp_153;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_136() {\n        //# _tmp_136: star_targets '='\n        let literal, mark, z;\n        mark = this.mark();\n        if ((z = this.star_targets()) && (literal = this.expect(\"=\"))) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_137() {\n        //# _tmp_137: '.' | '...'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\".\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"...\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_138() {\n        //# _tmp_138: '.' | '...'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\".\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"...\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_139() {\n        //# _tmp_139: '@' named_expression NEWLINE\n        let f, literal, mark, newline;\n        mark = this.mark();\n        if ((literal = this.expect(\"@\")) && (f = this.named_expression()) && (newline = this.expect(\"NEWLINE\"))) {\n            return f;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_140() {\n        //# _tmp_140: ',' star_expression\n        let c, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\",\")) && (c = this.star_expression())) {\n            return c;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_141() {\n        //# _tmp_141: ',' expression\n        let c, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\",\")) && (c = this.expression())) {\n            return c;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_142() {\n        //# _tmp_142: 'or' conjunction\n        let c, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"or\")) && (c = this.conjunction())) {\n            return c;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_143() {\n        //# _tmp_143: 'and' inversion\n        let c, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\"and\")) && (c = this.inversion())) {\n            return c;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_144() {\n        //# _tmp_144: 'if' disjunction\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"if\")) && (z = this.disjunction())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_145() {\n        //# _tmp_145: 'if' disjunction\n        let literal, mark, z;\n        mark = this.mark();\n        if ((literal = this.expect(\"if\")) && (z = this.disjunction())) {\n            return z;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_146() {\n        //# _tmp_146: starred_expression | named_expression !'='\n        let mark, named_expression, starred_expression;\n        mark = this.mark();\n        if ((starred_expression = this.starred_expression())) {\n            return starred_expression;\n        }\n        this.reset(mark);\n        if ((named_expression = this.named_expression()) && this.negative_lookahead(this.expect, \"=\")) {\n            return named_expression;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_147() {\n        //# _tmp_147: ',' star_target\n        let c, literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\",\")) && (c = this.star_target())) {\n            return c;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_148() {\n        //# _tmp_148: star_targets '='\n        let literal, mark, star_targets;\n        mark = this.mark();\n        if ((star_targets = this.star_targets()) && (literal = this.expect(\"=\"))) {\n            return star_targets, literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_149() {\n        //# _tmp_149: star_targets '='\n        let literal, mark, star_targets;\n        mark = this.mark();\n        if ((star_targets = this.star_targets()) && (literal = this.expect(\"=\"))) {\n            return star_targets, literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _loop1_150() {\n        //# _loop1_150: param_with_default\n        let children, mark, param_with_default;\n        mark = this.mark();\n        children = [];\n        while ((param_with_default = this.param_with_default())) {\n            children.push(param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _loop1_151() {\n        //# _loop1_151: lambda_param_with_default\n        let children, lambda_param_with_default, mark;\n        mark = this.mark();\n        children = [];\n        while ((lambda_param_with_default = this.lambda_param_with_default())) {\n            children.push(lambda_param_with_default);\n            mark = this.mark();\n        }\n        this.reset(mark);\n\n        return children.length ? children : null;\n    }\n\n    @memoize\n    _tmp_152() {\n        //# _tmp_152: ')' | '**'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\")\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"**\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n\n    @memoize\n    _tmp_153() {\n        //# _tmp_153: ':' | '**'\n        let literal, mark;\n        mark = this.mark();\n        if ((literal = this.expect(\":\"))) {\n            return literal;\n        }\n        this.reset(mark);\n        if ((literal = this.expect(\"**\"))) {\n            return literal;\n        }\n        this.reset(mark);\n\n        return null;\n    }\n}\n","import {Unicode} from \"./unicode\";\n\nconst {Lu, Ll, Lt, Lm, Lo, Nl, Mn, Mc, Nd, Pc } = Unicode;\nconst the_underscore = \"_\";\nconst Other_ID_Start = '\\\\u1885-\\\\u1886\\\\u2118\\\\u212E\\\\u309B-\\\\u309C';\nconst Other_ID_Continue = '\\\\u00B7\\\\u0387\\\\u1369-\\\\u1371\\\\u19DA';\nconst id_start = Lu + Ll + Lt + Lm + Lo + Nl + the_underscore + Other_ID_Start;\nconst id_continue = id_start +  Mn +  Mc +  Nd +  Pc +  Other_ID_Continue;\n\nconst IS_IDENTIFIER_REGEX = new RegExp('^([' + id_start + '])+([' + id_continue + '])*$');\n\nString.prototype.isIdentifier = function () {\n    return IS_IDENTIFIER_REGEX.test(this.normalize('NFKC'));\n}\n\nconst IS_SPACE = /^\\s+$/;\nString.prototype.isSpace = function() {\n    return IS_SPACE.test(this);\n}","export { GeneratedParser } from \"./src/parser/generated_parser\";\nexport { tokenize } from \"./src/parser/tokenize\";\nexport { readline, Tokenizer } from \"./src/parser/Tokenizer\";\n\nexport * as foo from \"./src/util/String\";\n\nimport { __exportStar } from \"./.yarn/cache/tslib-npm-2.1.0-81c9ac9b82-d8f5bdd067.zip/node_modules/tslib/tslib\";\n// export {bar} from \"./internal\"\n\nimport {tp$repr, tp$new, tp$methods, nb$bool} from \"./src/util/symbols\";\n\nfunction ___buildNativeClass(name: string): Function {\n    console.log('native class called')\n    return function(constructor: Function) {\n        debugger;\n        console.log('native class done');\n        return constructor\n    }\n}\n\n\nfunction method(flags, docstring, textsignature) {\n    console.log('method called')\n    return function (\n        target,\n        propertyKey: string,\n        descriptor: PropertyDescriptor\n    ) {\n        debugger;\n        const meth = descriptor.value;\n        meth.flags = flags;\n        meth.docstring = docstring;\n        meth.textsignature = textsignature;\n        console.log('method done')\n    }\n}\n\nfunction classmethod(flags, docstring, textsignature) {\n    console.log('method called')\n    return function (\n        target,\n        propertyKey: string,\n        descriptor: PropertyDescriptor\n    ) {\n        debugger;\n        const meth = descriptor.value;\n        meth.flags = flags;\n        meth.docstring = docstring;\n        meth.textsignature = textsignature;\n        console.log('method done')\n    }\n}\n\nfunction prop(target, key) {\n    target[key] = 1;\n}\n\nfunction getset(...decargs) {\n    debugger;\n    return function (...args) {\n        debugger;\n    }\n}\n\nfunction _getset(...args) {\n    debugger;\n}\n\nfunction test(...args) {\n    return args;\n}\n\n@___buildNativeClass(\"NoneType\")\nclass ___pyNoneType {\n    constructor() {\n        // return pyNone;\n    }\n    valueOf(): null {\n        return null;\n    }\n\n    @method({NoArgs: true}, 'this is a docstring foo', 'bar')\n    foo() {\n        return 'bar'\n    }\n\n    @classmethod({NoArgs: true}, 'this is a docstring foo', 'bar')\n    bar() {\n\n    }\n\n    @getset(\"some doc string\")\n    get __class__() {\n        this.name();\n        return 'foo'\n    }\n    set __class__(v) {\n    }\n\n    @prop\n    eggs;\n\n    public name() {\n        console.log('foo')\n    }\n\n}\n\nexport const ___pyNone: ___pyNoneType = Object.create(___pyNoneType.prototype);\n"],"names":["Set","tokens.OP","tokens.ENCODING","tokens.STRING","tokens.ERRORTOKEN","tokens.COMMENT","tokens.NL","tokens.INDENT","tokens.DEDENT","tokens.NUMBER","tokens.NEWLINE","tokens.NAME","tokens.ENDMARKER","Load","Name","tokens","astnodes.Interactive","astnodes.Expression","astnodes.FunctionType","astnodes.Pass","astnodes.Expr","astnodes.Break","astnodes.Continue","astnodes.AnnAssign","astnodes.Store","astnodes.Assign","astnodes.AugAssign","astnodes.Add","astnodes.Sub","astnodes.Mult","astnodes.AugOperator","astnodes.MatMult","astnodes.Div","astnodes.Mod","astnodes.BitAnd","astnodes.BitOr","astnodes.BitXor","astnodes.LShift","astnodes.RShift","astnodes.Pow","astnodes.FloorDiv","astnodes.Global","astnodes.Nonlocal","astnodes.Assert","astnodes.Delete","astnodes.Import","astnodes.ImportFrom","astnodes.alias","astnodes.If","astnodes.While","astnodes.For","astnodes.AsyncFor","astnodes.With","astnodes.AsyncWith","astnodes.withitem","astnodes.Try","astnodes.ExceptHandler","astnodes.Return","astnodes.Raise","astnodes.FunctionDef","astnodes.AsyncFunctionDef","astnodes.arg","astnodes.ClassDef","astnodes.Tuple","astnodes.Load","astnodes.Starred","astnodes.NamedExpr","astnodes.IfExp","astnodes.Lambda","astnodes.BoolOp","astnodes.Or","astnodes.And","astnodes.UnaryOp","astnodes.Not","astnodes.Compare","astnodes.Eq","astnodes.NotEq","astnodes.LtE","astnodes.Lt","astnodes.GtE","astnodes.Gt","astnodes.NotIn","astnodes.In","astnodes.IsNot","astnodes.Is","astnodes.BinOp","astnodes.UAdd","astnodes.USub","astnodes.Invert","astnodes.Await","astnodes.Attribute","astnodes.Call","astnodes.Subscript","astnodes.Slice","astnodes.Constant","astnodes.List","astnodes.ListComp","astnodes.GeneratorExp","astnodes.Set","astnodes.SetComp","astnodes.Dict","astnodes.DictComp","astnodes.comprehension","astnodes.YieldFrom","astnodes.Yield","astnodes.keyword","astnodes.Del","Lt"],"mappings":"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"}